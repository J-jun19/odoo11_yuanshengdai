"fun_name","fun_def"
"proc_locate_table_update_ref_record","CREATE OR REPLACE FUNCTION ep_temp_master.proc_locate_table_update_ref_record(v_table_name character varying, v_need_update_id integer, v_limit integer, v_offset integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                         
                                                                                                                                                                
declare                                                                                                                                                         
  
v_rc refcursor;                                                                                                                                                                                                                                                                                  
v_record record; 
v_id int4;                                                                                                                                                                                                                                                                                                      
v_execute_sql varchar;          
v_udpate_sql varchar;                                                                                                                                   
begin                                                                                                                                                           
 o_update_count:=0;                                                                                                                                    

v_execute_sql='select id from ""public"".'||v_table_name||' where need_re_update>0 limit '||v_limit || ' offset '||v_offset ;                                                                                                                                                              
--打开动态sql语句游标
--o_need_update_ref_count:=0;                                                                                                                    
open v_rc for execute v_execute_sql;                                                                                                                             
loop                                                                                                                                                            
			begin

         --o_need_update_ref_count:=o_need_update_ref_count+1;
         fetch  v_rc into v_record;  
         EXIT WHEN NOT FOUND;      
         v_udpate_sql:='update ""public"".'||v_table_name ||' set need_update_id='||v_need_update_id||' where id='||v_record.id;
         execute v_udpate_sql;                                                                                                                                                                                                               
      end;                                                                                                                                                      
end loop; 

close v_rc;                                                                                                                                                 
                                                                                                                                                    
  return ;                                                                                                                                                     
                                                                                                                                                                
end;                                                                                                                                                            
$function$
"
"proc_locate_table_update_ref_record_1","CREATE OR REPLACE FUNCTION ep_temp_master.proc_locate_table_update_ref_record_1(v_table_name character varying, v_need_update_id integer, v_limit integer, v_offset integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$--当前存储过程为指定表设置need_update_id值                                                                                                                      
                                                                                                                                                                
declare                                                                                                                                                         
  
v_rc refcursor;                                                                                                                                                                                                                                                                                  
v_record record; 
v_id int4;                                                                                                                                                                                                                                                                                                      
v_execute_sql varchar;          
v_udpate_sql varchar;                                                                                                                                   
begin                                                                                                                                                           
 o_update_count:=0;   
 o_fail_count:=0;                                                                                                                                      
v_execute_sql='select id from '||v_table_name||' where need_re_update>0 order by id limit ' || v_limit || ' offset '||v_offset;                                                                                                                                                              

                                                                                                             
open v_rc for execute v_execute_sql;                                                                                                                             
loop                                                                                                                                                            
			begin

         --o_need_update_ref_count:=o_need_update_ref_count+1;
         fetch  v_rc into v_record;  
         EXIT WHEN NOT FOUND; 

         v_udpate_sql:='update '||v_table_name ||' set need_update_id='||v_need_update_id||' where id='||v_record.id;
         execute v_udpate_sql;  
         o_update_count:=o_update_count+1;     
			EXCEPTION                                                                                                                                              
			when OTHERS THEN                                                                                                                                       
          o_fail_count:=o_fail_count+1;                                                                                                                                                                                                            
      end;                                                                                                                                                      
end loop; 

close v_rc;                                                                                                                                                 
                                                                                                                                                    
  return ;                                                                                                                                                     
                                                                                                                                                                
end;                                                                                                                                                            
$function$
"
"proc_locate_table_update_ref_record_2","CREATE OR REPLACE FUNCTION ep_temp_master.proc_locate_table_update_ref_record_2(v_table_name character varying, v_need_update_id integer, v_limit integer, v_offset integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$--当前存储过程为指定表更新记录 need_re_update为0                                                                                                                      
                                                                                                                                                                
declare                                                                                                                                                         
  
v_rc refcursor;                                                                                                                                                                                                                                                                                  
v_record record; 
v_id int4;                                                                                                                                                                                                                                                                                                      
v_execute_sql varchar;          
v_udpate_sql varchar;                                                                                                                                   
begin                                                                                                                                                           
 o_update_count:=0;   
 o_fail_count:=0;                                                                                                                                      
v_execute_sql='select id from '||v_table_name||' where need_update_id='||v_need_update_id||' order by id limit ' || v_limit || ' offset '||v_offset;                                                                                                                                                              

                                                                                                             
open v_rc for execute v_execute_sql;                                                                                                                             
loop                                                                                                                                                            
			begin

         --o_need_update_ref_count:=o_need_update_ref_count+1;
         fetch  v_rc into v_record;  
         EXIT WHEN NOT FOUND;      
         v_udpate_sql:='update '||v_table_name ||' set need_re_update=0 where id='||v_record.id;
         execute v_udpate_sql;  
         o_update_count:=o_update_count+1;  
			EXCEPTION                                                                                                                                              
			when OTHERS THEN                                                                                                                                       
          o_fail_count:=o_fail_count+1;                                                                                                                                                                                                              
      end;                                                                                                                                                      
end loop; 

close v_rc;                                                                                                                                                 
                                                                                                                                                    
  return ;                                                                                                                                                     
                                                                                                                                                                
end;                                                                                                                                                            
$function$
"
"proc_query_group_state","CREATE OR REPLACE FUNCTION ep_temp_master.proc_query_group_state(v_group_name character varying, OUT o_group_id integer, OUT o_group_state integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$

declare
v_rc	record;
v_pre_period_id integer;
v_start_datetime varchar;
v_end_datetime varchar;
v_count_1	integer;
v_count_2 integer;
begin

/*
判断ExtractLog 是否存在一组的记录状态为 STEP1DONE
	如果存在 ExtractLog 记录状态为 STEP1DONE
		更新 ExtractLog 记录状态为 PROCESS
		转移记录对应数据条目到ODOO正式表中
		转移数据操作完成后,更新 ExtractLog 一组的记录状态为 STEP2DONE
*/

--o_group_state  0 表示没有可以转换的数据;1	表示有可以转换的数据
o_group_state:=0;
o_group_id:=0;

--group_name在配置表中找不到的情况下,直接退出
select count(*) into v_count_1 from  ""public"".iac_interface_temp_table_group where name=v_group_name;
if v_count_1=0 THEN
   return;
end if;


select id into o_group_id from  ""public"".iac_interface_temp_table_group where name=v_group_name;


select count(*) into v_count_1  from ep_temp_master.extractgroup eg where 	eg.extractgroup = v_group_name ;
  

SELECT
	COUNT (*) INTO v_count_2
FROM
	ep_temp_master.extractlog el
WHERE
	( el.extractstatus = 'STEP1DONE' OR el.extractstatus = 'ODOO_PROCESS' )
AND el.extractname IN (
	SELECT
		eg.extractname
	FROM
		ep_temp_master.extractgroup eg
	WHERE
		eg.extractgroup = v_group_name
);

	--所有条目SAP都传送完毕的情况下,返回真
  if v_count_1=v_count_2 THEN
	   o_group_state:=1;
     return;
  end if;
  o_group_state:=0;
  return ;

end;
$function$
"
"proc_trans_get_fun_def","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_get_fun_def()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$

declare
v_rc	record;
v_pre_period_id integer;
v_start_datetime varchar;
v_end_datetime varchar;
v_count_1	integer;
v_count_2 integer;
begin
delete from ep_temp_master.lwt_fun_def;

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_address' ,pg_get_functiondef('proc_trans_table_address'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_address_ref' ,pg_get_functiondef('proc_trans_table_address_ref'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_asn_jitrule' ,pg_get_functiondef('proc_trans_table_asn_jitrule'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_asn_jitrule_ref' ,pg_get_functiondef('proc_trans_table_asn_jitrule_ref'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_asn_maxqty' ,pg_get_functiondef('proc_trans_table_asn_maxqty'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_asn_maxqty_ref' ,pg_get_functiondef('proc_trans_table_asn_maxqty_ref'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_buyer_code' ,pg_get_functiondef('proc_trans_table_buyer_code'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_buyer_code_ref' ,pg_get_functiondef('proc_trans_table_buyer_code_ref'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_company' ,pg_get_functiondef('proc_trans_table_company'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_company_ref' ,pg_get_functiondef('proc_trans_table_company_ref'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_division_code' ,pg_get_functiondef('proc_trans_table_division_code'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_division_code_ref' ,pg_get_functiondef('proc_trans_table_division_code_ref'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_goods_receipts' ,pg_get_functiondef('proc_trans_table_goods_receipts'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_goods_receipts_ref' ,pg_get_functiondef('proc_trans_table_goods_receipts_ref'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_incoterm' ,pg_get_functiondef('proc_trans_table_incoterm'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_incoterm_ref' ,pg_get_functiondef('proc_trans_table_incoterm_ref'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_inforecord_history' ,pg_get_functiondef('proc_trans_table_inforecord_history'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_inforecord_history_ref' ,pg_get_functiondef('proc_trans_table_inforecord_history_ref'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_material_custmaster' ,pg_get_functiondef('proc_trans_table_material_custmaster'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_material_custmaster_ref' ,pg_get_functiondef('proc_trans_table_material_custmaster_ref'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_material_description' ,pg_get_functiondef('proc_trans_table_material_description'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_material_description_ref' ,pg_get_functiondef('proc_trans_table_material_description_ref'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_material_division' ,pg_get_functiondef('proc_trans_table_material_division'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_material_division_ref' ,pg_get_functiondef('proc_trans_table_material_division_ref'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_material_group' ,pg_get_functiondef('proc_trans_table_material_group'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_material_group_ref' ,pg_get_functiondef('proc_trans_table_material_group_ref'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_material_map' ,pg_get_functiondef('proc_trans_table_material_map'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_material_map_ref' ,pg_get_functiondef('proc_trans_table_material_map_ref'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_material_master' ,pg_get_functiondef('proc_trans_table_material_master'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_material_master_ref' ,pg_get_functiondef('proc_trans_table_material_master_ref'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_material_plant' ,pg_get_functiondef('proc_trans_table_material_plant'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_material_plant_ref' ,pg_get_functiondef('proc_trans_table_material_plant_ref'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_payment_info' ,pg_get_functiondef('proc_trans_table_payment_info'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_payment_info_ref' ,pg_get_functiondef('proc_trans_table_payment_info_ref'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_payment_term' ,pg_get_functiondef('proc_trans_table_payment_term'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_payment_term_ref' ,pg_get_functiondef('proc_trans_table_payment_term_ref'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_plm_actual_vendor' ,pg_get_functiondef('proc_trans_table_plm_actual_vendor'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_plm_actual_vendor_ref' ,pg_get_functiondef('proc_trans_table_plm_actual_vendor_ref'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_plm_subclass' ,pg_get_functiondef('proc_trans_table_plm_subclass'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_plm_subclass_ref' ,pg_get_functiondef('proc_trans_table_plm_subclass_ref'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_po_detail' ,pg_get_functiondef('proc_trans_table_po_detail'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_po_detail_ref' ,pg_get_functiondef('proc_trans_table_po_detail_ref'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_po_header' ,pg_get_functiondef('proc_trans_table_po_header'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_po_header_ref' ,pg_get_functiondef('proc_trans_table_po_header_ref'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_po_partner' ,pg_get_functiondef('proc_trans_table_po_partner'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_po_partner_ref' ,pg_get_functiondef('proc_trans_table_po_partner_ref'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_pur_org_data' ,pg_get_functiondef('proc_trans_table_pur_org_data'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_pur_org_data_ref' ,pg_get_functiondef('proc_trans_table_pur_org_data_ref'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_ship_instruct' ,pg_get_functiondef('proc_trans_table_ship_instruct'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_ship_instruct_ref' ,pg_get_functiondef('proc_trans_table_ship_instruct_ref'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_source_list' ,pg_get_functiondef('proc_trans_table_source_list'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_source_list_ref' ,pg_get_functiondef('proc_trans_table_source_list_ref'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_storage_location' ,pg_get_functiondef('proc_trans_table_storage_location'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_storage_location_ref' ,pg_get_functiondef('proc_trans_table_storage_location_ref'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_vendor' ,pg_get_functiondef('proc_trans_table_vendor'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_vendor_bank' ,pg_get_functiondef('proc_trans_table_vendor_bank'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_vendor_bank_ref' ,pg_get_functiondef('proc_trans_table_vendor_bank_ref'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_vendor_certified' ,pg_get_functiondef('proc_trans_table_vendor_certified'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_vendor_certified_ref' ,pg_get_functiondef('proc_trans_table_vendor_certified_ref'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_vendor_group' ,pg_get_functiondef('proc_trans_table_vendor_group'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_vendor_group_ref' ,pg_get_functiondef('proc_trans_table_vendor_group_ref'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_vendor_plant' ,pg_get_functiondef('proc_trans_table_vendor_plant'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_vendor_plant_ref' ,pg_get_functiondef('proc_trans_table_vendor_plant_ref'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_vendor_ref' ,pg_get_functiondef('proc_trans_table_vendor_ref'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_vs_webflow_iqc_data' ,pg_get_functiondef('proc_trans_table_vs_webflow_iqc_data'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_vs_webflow_iqc_data_ref' ,pg_get_functiondef('proc_trans_table_vs_webflow_iqc_data_ref'::regproc);


insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_goods_receipts_ref_2' ,pg_get_functiondef('proc_trans_table_goods_receipts_ref_2'::regproc);
insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_source_list_ref_2' ,pg_get_functiondef('proc_trans_table_source_list_ref_2'::regproc);
insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_inforecord_history_ref_2' ,pg_get_functiondef('proc_trans_table_inforecord_history_ref_2'::regproc);
insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_plm_actual_vendor_ref_2' ,pg_get_functiondef('proc_trans_table_plm_actual_vendor_ref_2'::regproc);
insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_plm_subclass_ref_2' ,pg_get_functiondef('proc_trans_table_plm_subclass_ref_2'::regproc);
insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_company_ref_2' ,pg_get_functiondef('proc_trans_table_company_ref_2'::regproc);
insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_pur_org_data_ref_2' ,pg_get_functiondef('proc_trans_table_pur_org_data_ref_2'::regproc);
insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_material_group_ref_2' ,pg_get_functiondef('proc_trans_table_material_group_ref_2'::regproc);
insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_buyer_code_ref_2' ,pg_get_functiondef('proc_trans_table_buyer_code_ref_2'::regproc);
insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_ship_instruct_ref_2' ,pg_get_functiondef('proc_trans_table_ship_instruct_ref_2'::regproc);
insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_payment_term_ref_2' ,pg_get_functiondef('proc_trans_table_payment_term_ref_2'::regproc);
insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_vendor_group_ref_2' ,pg_get_functiondef('proc_trans_table_vendor_group_ref_2'::regproc);
insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_incoterm_ref_2' ,pg_get_functiondef('proc_trans_table_incoterm_ref_2'::regproc);
insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_division_code_ref_2' ,pg_get_functiondef('proc_trans_table_division_code_ref_2'::regproc);
insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_payment_info_ref_2' ,pg_get_functiondef('proc_trans_table_payment_info_ref_2'::regproc);
insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_material_description_ref_2' ,pg_get_functiondef('proc_trans_table_material_description_ref_2'::regproc);
insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_material_master_ref_2' ,pg_get_functiondef('proc_trans_table_material_master_ref_2'::regproc);
insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_material_plant_ref_2' ,pg_get_functiondef('proc_trans_table_material_plant_ref_2'::regproc);
insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_material_map_ref_2' ,pg_get_functiondef('proc_trans_table_material_map_ref_2'::regproc);
insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_material_custmaster_ref_2' ,pg_get_functiondef('proc_trans_table_material_custmaster_ref_2'::regproc);
insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_material_division_ref_2' ,pg_get_functiondef('proc_trans_table_material_division_ref_2'::regproc);
insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_po_header_ref_2' ,pg_get_functiondef('proc_trans_table_po_header_ref_2'::regproc);
insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_po_partner_ref_2' ,pg_get_functiondef('proc_trans_table_po_partner_ref_2'::regproc);
insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_po_detail_ref_2' ,pg_get_functiondef('proc_trans_table_po_detail_ref_2'::regproc);
insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_storage_location_ref_2' ,pg_get_functiondef('proc_trans_table_storage_location_ref_2'::regproc);
insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_vendor_ref_2' ,pg_get_functiondef('proc_trans_table_vendor_ref_2'::regproc);
insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_vendor_plant_ref_2' ,pg_get_functiondef('proc_trans_table_vendor_plant_ref_2'::regproc);
insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_vendor_bank_ref_2' ,pg_get_functiondef('proc_trans_table_vendor_bank_ref_2'::regproc);
insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_vendor_certified_ref_2' ,pg_get_functiondef('proc_trans_table_vendor_certified_ref_2'::regproc);
insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_address_ref_2' ,pg_get_functiondef('proc_trans_table_address_ref_2'::regproc);
insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_vs_webflow_iqc_data_ref_2' ,pg_get_functiondef('proc_trans_table_vs_webflow_iqc_data_ref_2'::regproc);
insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_asn_maxqty_ref_2' ,pg_get_functiondef('proc_trans_table_asn_maxqty_ref_2'::regproc);
insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_table_asn_jitrule_ref_2' ,pg_get_functiondef('proc_trans_table_asn_jitrule_ref_2'::regproc);


insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_update_table_ref' ,pg_get_functiondef('proc_update_table_ref'::regproc);
insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_update_table_ref_2' ,pg_get_functiondef('proc_update_table_ref_2'::regproc);
insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_update_table_ref_3' ,pg_get_functiondef('proc_update_table_ref_3'::regproc);
insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'write_exception_log' ,pg_get_functiondef('write_exception_log'::regproc);
insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'write_group_proc_log' ,pg_get_functiondef('write_group_proc_log'::regproc);
insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_trans_get_fun_def' ,pg_get_functiondef('proc_trans_get_fun_def'::regproc);
insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_query_group_state' ,pg_get_functiondef('proc_query_group_state'::regproc);
insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'write_exception_log' ,pg_get_functiondef('write_exception_log'::regproc);
insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'write_group_proc_log' ,pg_get_functiondef('write_group_proc_log'::regproc);  
insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_locate_table_update_ref_record' ,pg_get_functiondef('proc_locate_table_update_ref_record'::regproc);  
insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_locate_table_update_ref_record_1' ,pg_get_functiondef('proc_locate_table_update_ref_record_1'::regproc);
insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'proc_locate_table_update_ref_record_2' ,pg_get_functiondef('proc_locate_table_update_ref_record_2'::regproc);


insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'sp_asn_group_update_ref' ,pg_get_functiondef('sp_asn_group_update_ref'::regproc);
insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'sp_asn_group_update_ref_miss' ,pg_get_functiondef('sp_asn_group_update_ref_miss'::regproc);
insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'sp_asn_group_trans_prod' ,pg_get_functiondef('sp_asn_group_trans_prod'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'sp_po_group_update_ref' ,pg_get_functiondef('sp_po_group_update_ref'::regproc);
insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'sp_po_group_update_ref_miss' ,pg_get_functiondef('sp_po_group_update_ref_miss'::regproc);
insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'sp_po_group_trans_prod' ,pg_get_functiondef('sp_po_group_trans_prod'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'sp_po_unconfirm_group_update_ref' ,pg_get_functiondef('sp_po_unconfirm_group_update_ref'::regproc);
insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'sp_po_unconfirm_group_update_ref_miss' ,pg_get_functiondef('sp_po_unconfirm_group_update_ref_miss'::regproc);
insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'sp_po_unconfirm_group_trans_prod' ,pg_get_functiondef('sp_po_unconfirm_group_trans_prod'::regproc);

insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'sp_rfq_group_update_ref' ,pg_get_functiondef('sp_rfq_group_update_ref'::regproc);
insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'sp_rfq_group_update_ref_miss' ,pg_get_functiondef('sp_rfq_group_update_ref_miss'::regproc);
insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'sp_rfq_group_trans_prod' ,pg_get_functiondef('sp_rfq_group_trans_prod'::regproc);


insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'sp_update_table_ref' ,pg_get_functiondef('sp_update_table_ref'::regproc);
insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'sp_update_table_ref_int' ,pg_get_functiondef('sp_update_table_ref_int'::regproc);
insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'sp_func_get_log_info' ,pg_get_functiondef('sp_func_get_log_info'::regproc);
insert into ep_temp_master.lwt_fun_def(fun_name,fun_def) select 'sp_func_write_ex_log' ,pg_get_functiondef('sp_func_write_ex_log'::regproc);

  return 1;
end;
$function$
"
"proc_trans_table_address","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_address(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$

declare
v_rc	record;
v_pre_period_id integer;
v_start_datetime varchar;
v_end_datetime varchar;
v_count_1	integer;

--异常捕获信息
v_table_name varchar;
v_column_name varchar;
v_message_text text;
v_exception_detail text;
v_src_id int4;

--记录处理日志相关
v_proc_line_count int4;
v_proc_line_fail_count int4;
v_start_time TIMESTAMP;
v_end_time TIMESTAMP; 
begin
v_proc_line_count:=0;
v_proc_line_fail_count:=0;
v_start_time:=now();

o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;    


--遍历 address 表,数据转移到odoo正式表中
for v_rc in select * from ep_temp_master.address order by id LIMIT v_limit offset v_offset    
loop
			begin
				 select count(*) into v_count_1 from ""public"".address where address_id=v_rc.address_id;
				 --目标表中不存在相关记录,进行插入操作
				 if v_count_1=0 THEN
						insert into ""public"".address (
							address_id,
							nam1,
							nam2,
							city1,
							city2,
							post_code1,
							post_code2,
							po_box,
							street,
							house_num1,
							country_code,
							language_key,
							region,
							telphone,
							fax,
							name3,
							name4,
							street2,
							street3,
							street4,
							sap_log_id,
							sap_temp_id
						)
						values
							(
								v_rc.address_id,
								v_rc.nam1,
								v_rc.nam2,
								v_rc.city1,
								v_rc.city2,
								v_rc.post_code1,
								v_rc.post_code2,
								v_rc.po_box,
								v_rc.street,
								v_rc.house_num1,
								v_rc.country_code,
								v_rc.language_key,
								v_rc.region,
								v_rc.telphone,
								v_rc.fax,
								v_rc.name3,
								v_rc.name4,
								v_rc.street2,
								v_rc.street3,
								v_rc.street4,
								v_sap_log_id,
								v_rc.id
							);

            o_insert_count:=o_insert_count+1;
				 end if;

				 --目标数据存在,进行更新操作
				if v_count_1=1 THEN
						update ""public"".address
						set nam1 = v_rc.nam1,
						 nam2 = v_rc.nam2,
						 city1 = v_rc.city1,
						 city2 = v_rc.city2,
						 post_code1 = v_rc.post_code1,
						 post_code2 = v_rc.post_code2,
						 po_box = v_rc.po_box,
						 street = v_rc.street,
						 house_num1 = v_rc.house_num1,
						 country_code = v_rc.country_code,
						 language_key = v_rc.language_key,
						 region = v_rc.region,
						 telphone = v_rc.telphone,
						 fax = v_rc.fax,
						 name3 = v_rc.name3,
						 name4 = v_rc.name4,
						 street2 = v_rc.street2,
						 street3 = v_rc.street3,
						 street4 = v_rc.street4,
						 sap_log_id=v_sap_log_id,
						 sap_temp_id=v_rc.id
						where
							address_id = v_rc.address_id;
            o_update_count:=o_update_count+1;
				end if;
				v_proc_line_count:=v_proc_line_count+1;
			EXCEPTION
			when OTHERS THEN
           GET STACKED DIAGNOSTICS 
                                   v_message_text = MESSAGE_TEXT,
																	 v_exception_detail=PG_EXCEPTION_DETAIL;
          v_table_name:='address';
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';
					v_src_id=v_rc.id;
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);
          v_proc_line_fail_count=v_proc_line_fail_count+1;
          o_fail_count:=o_fail_count+1;
      end;
end loop;

  return ;

end;
$function$
"
"proc_trans_table_address_ref","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_address_ref(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$

declare
v_rc	record;
v_pre_period_id integer;
v_start_datetime varchar;
v_end_datetime varchar;
v_count_1	integer;


--异常捕获信息
v_table_name varchar;
v_column_name varchar;
v_message_text text;
v_exception_detail text;
v_src_id int4;

--记录处理日志相关
v_proc_line_count int4;
v_proc_line_fail_count int4;
v_start_time TIMESTAMP;
v_end_time TIMESTAMP; 
begin
v_proc_line_count:=0;
v_proc_line_fail_count:=0;
v_start_time:=now();

o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;    


--遍历 正式address 表,处理关联字段列表如下
/*
country_id=fields.Many2one('res.country',string=""COUNTRY CODE"")
*/
for v_rc in select * from ""public"".address where sap_log_id=v_sap_log_id order by id LIMIT v_limit offset v_offset    
loop
			begin
					perform ep_temp_master.proc_update_table_ref('address' , 'country_id', 'res_country' , 'code', v_rc.id, v_rc.country_code);
          o_update_count:=o_update_count+1;
			EXCEPTION
			when OTHERS THEN
           GET STACKED DIAGNOSTICS 
                                   v_message_text = MESSAGE_TEXT,
																	 v_exception_detail=PG_EXCEPTION_DETAIL;
          v_table_name:='address';
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';
					v_src_id=v_rc.id;
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);
          v_proc_line_fail_count=v_proc_line_fail_count+1;
          o_fail_count:=o_fail_count+1;
      end;
end loop;


  return ;	

end;
$function$
"
"proc_trans_table_address_ref_2","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_address_ref_2(v_sap_log_id character varying, v_need_update_id integer, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$

declare
v_rc	record;
v_pre_period_id integer;
v_start_datetime varchar;
v_end_datetime varchar;
v_count_1	integer;


--异常捕获信息
v_table_name varchar;
v_column_name varchar;
v_message_text text;
v_exception_detail text;
v_src_id int4;

--记录处理日志相关
v_proc_line_count int4;
v_proc_line_fail_count int4;
v_start_time TIMESTAMP;
v_end_time TIMESTAMP; 
begin
v_proc_line_count:=0;
v_proc_line_fail_count:=0;
v_start_time:=now();

o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;    


--遍历 正式address 表,处理关联字段列表如下
/*
country_id=fields.Many2one('res.country',string=""COUNTRY CODE"")
*/
for v_rc in select * from ""public"".address where need_update_id=v_need_update_id order by id LIMIT v_limit offset v_offset    
loop
			begin
					perform ep_temp_master.proc_update_table_ref('address' , 'country_id', 'res_country' , 'code', v_rc.id, v_rc.country_code);
          o_update_count:=o_update_count+1;
			EXCEPTION
			when OTHERS THEN
           GET STACKED DIAGNOSTICS 
                                   v_message_text = MESSAGE_TEXT,
																	 v_exception_detail=PG_EXCEPTION_DETAIL;
          v_table_name:='address';
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';
					v_src_id=v_rc.id;
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);
          v_proc_line_fail_count=v_proc_line_fail_count+1;
          o_fail_count:=o_fail_count+1;
      end;
end loop;


  return ;	

end;
$function$
"
"proc_trans_table_asn_jitrule","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_asn_jitrule(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                         
                                                                                                                                                                
declare                                                                                                                                                         
v_rc	record;                                                                                                                                                  
v_pre_period_id integer;                                                                                                                                        
v_start_datetime varchar;                                                                                                                                       
v_end_datetime varchar;                                                                                                                                         
v_count_1	integer;                                                                                                                                             
                                                                                                                                                                
--异常捕获信息                                                                                                                                                  
v_table_name varchar;                                                                                                                                           
v_column_name varchar;                                                                                                                                          
v_message_text text;                                                                                                                                            
v_exception_detail text;                                                                                                                                        
v_src_id int4;                                                                                                                                                  
                                                                                                                                                                
--记录处理日志相关                                                                                                                                              
v_proc_line_count int4;                                                                                                                                         
v_proc_line_fail_count int4;                                                                                                                                    
v_start_time TIMESTAMP;                                                                                                                                         
v_end_time TIMESTAMP;                                                                                                                                           
begin                                                                                                                                                           
v_proc_line_count:=0;                                                                                                                                           
v_proc_line_fail_count:=0;                                                                                                                                      
v_start_time:=now();                                                                                                                                            

o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;  
                                                                                                                                                                
--遍历 address 表,数据转移到odoo正式表中                                                                                                                        
for v_rc in select * from ep_temp_master.asn_jitrule  order by id LIMIT v_limit offset v_offset                                                                                                                                  
loop                                                                                                                                                            
			begin                                                                                                                                                
				 select count(*) into v_count_1 from ""public"".asn_jitrule where 	plant_code = v_rc.plant_code
						AND buyer_erp_id = v_rc.buyer_erp_id
						AND vendor_code = v_rc.vendor_code
						AND pulling_type = v_rc.pulling_type
						AND part_no = v_rc.part_no
						AND rule_type = v_rc.rule_type;                                                          
				 --目标表中不存在相关记录,进行插入操作                                                                                                           
				 if v_count_1=0 THEN    
						INSERT INTO ""public"".asn_jitrule (
							plant_code,
							buyer_erp_id,
							vendor_code,
							pulling_type,
							part_no,
							rule_type,
							sap_log_id,
							sap_temp_id
						)
						VALUES
							(
								v_rc.plant_code,
								v_rc.buyer_erp_id,
								v_rc.vendor_code,
								v_rc.pulling_type,
								v_rc.part_no,
								v_rc.rule_type,
								v_sap_log_id,
								v_rc.id
							);   
            o_insert_count:=o_insert_count+1;                                                                                                                      
				 end if;                                                                                                                                         
                                                                                                                                                                
				 --目标数据存在,进行更新操作                                                                                                                     
				if v_count_1=1 THEN     
						UPDATE ""public"".asn_jitrule
						SET plant_code = v_rc.plant_code,
						 buyer_erp_id = v_rc.buyer_erp_id,
						 vendor_code = v_rc.vendor_code,
						 pulling_type = v_rc.pulling_type,
						 part_no = v_rc.part_no,
						 rule_type = v_rc.rule_type,
						 sap_log_id = v_sap_log_id,
						 sap_temp_id = v_rc.id
						WHERE
							plant_code = v_rc.plant_code
						AND buyer_erp_id = v_rc.buyer_erp_id
						AND vendor_code = v_rc.vendor_code
						AND pulling_type = v_rc.pulling_type
						AND part_no = v_rc.part_no
						AND rule_type = v_rc.rule_type;    
            o_update_count:=o_update_count+1;                                                                                                                     
				end if;                                                                                                                                          
				v_proc_line_count:=v_proc_line_count+1;                                                                                                          
			EXCEPTION                                                                                                                                            
			when OTHERS THEN                                                                                                                                     
           GET STACKED DIAGNOSTICS                                                                                               
                                   v_message_text = MESSAGE_TEXT,                                                                                               
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                     
          v_table_name:='asn_jitrule';                                                                                                                              
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                
					v_src_id=v_rc.id;                                                                                                                            
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);  
          v_proc_line_fail_count=v_proc_line_fail_count+1;
          
          o_fail_count:=o_fail_count+1;                                                                                                      
      end;                                                                                                                                                      
end loop;                                                                                                                                                       
                                                                                                                                                    
  return ;                                                                                                                                                     
                                                                                                                                                                
end;                                                                                                                                                            
$function$
"
"proc_trans_table_asn_jitrule_ref","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_asn_jitrule_ref(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                           
                                                                                                                                                                  
declare                                                                                                                                                           
v_rc	record;                                                                                                                                                    
v_pre_period_id integer;                                                                                                                                          
v_start_datetime varchar;                                                                                                                                         
v_end_datetime varchar;                                                                                                                                           
v_count_1	integer;                                                                                                                                               
                                                                                                                                                                  
--异常捕获信息                                                                                                                                                    
v_table_name varchar;                                                                                                                                             
v_column_name varchar;                                                                                                                                            
v_message_text text;                                                                                                                                              
v_exception_detail text;                                                                                                                                          
v_src_id int4;                                                                                                                                                    
                                                                                                                                                                  
--记录处理日志相关                                                                                                                                                
v_proc_line_count int4;                                                                                                                                           
v_proc_line_fail_count int4;                                                                                                                                      
v_start_time TIMESTAMP;                                                                                                                                           
v_end_time TIMESTAMP;                                                                                                                                             
begin                                                                                                                                                             
v_proc_line_count:=0;                                                                                                                                             
v_proc_line_fail_count:=0;                                                                                                                                        
v_start_time:=now();                             

o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;  
                                                                                                                 
--遍历 正式 vendor 表,处理关联字段列表如下                                                                                                                        
                                                                                                                                                                  
for v_rc in select * from ""public"".asn_jitrule where sap_log_id=v_sap_log_id   order by id LIMIT v_limit offset v_offset                                                                                            
loop                                                                                                                                                              
			begin
					--perform proc_update_table_ref('asn_jitrule' , 'part_id', 'material_master' , 'part_no', v_rc.id, v_rc.part_no);  
          perform ep_temp_master.proc_update_table_ref('asn_jitrule' , 'part_id', 'material_master' , 'part_unique_code', v_rc.id, v_rc.part_no||v_rc.plant_code);
					perform ep_temp_master.proc_update_table_ref('asn_jitrule' , 'vendor_id', 'iac_vendor' , 'vendor_code', v_rc.id, v_rc.vendor_code);
					perform ep_temp_master.proc_update_table_ref('asn_jitrule' , 'vendor_reg_id', 'iac_vendor_register' , 'vendor_code', v_rc.id, v_rc.vendor_code);   
					perform ep_temp_master.proc_update_table_ref('asn_jitrule' , 'buyer_id', 'buyer_code' , 'buyer_erp_id', v_rc.id, v_rc.buyer_erp_id); 
					perform ep_temp_master.proc_update_table_ref('asn_jitrule' , 'plant_id', 'pur_org_data' , 'plant_code', v_rc.id, v_rc.plant_code);                                                                                                                                                 
				  v_proc_line_count:=v_proc_line_count+1;            
          
          o_update_count:=o_update_count+1;                                                                                              
			EXCEPTION                                                                                                                                              
			when OTHERS THEN                                                                                                                                       
           GET STACKED DIAGNOSTICS                                                                                             
                                   v_message_text = MESSAGE_TEXT,                                                                                                 
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                       
          v_table_name:='asn_jitrule';                                                                                                                                 
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                  
					v_src_id=v_rc.id;                                                                                                                              
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);    
          v_proc_line_fail_count=v_proc_line_fail_count+1;     
          
          o_fail_count:=o_fail_count+1;                                                                                                   
      end;                                                                                                                                                        
end loop;                                                                                                                                                         
                                                                                                                                                      
  return ;                                                                                                                                                       
                                                                                                                                                                  
                                                                                                                                                                  
end;                                                                                                                                                              
$function$
"
"proc_trans_table_asn_jitrule_ref_2","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_asn_jitrule_ref_2(v_sap_log_id character varying, v_need_update_id integer, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                           
                                                                                                                                                                  
declare                                                                                                                                                           
v_rc	record;                                                                                                                                                    
v_pre_period_id integer;                                                                                                                                          
v_start_datetime varchar;                                                                                                                                         
v_end_datetime varchar;                                                                                                                                           
v_count_1	integer;                                                                                                                                               
                                                                                                                                                                  
--异常捕获信息                                                                                                                                                    
v_table_name varchar;                                                                                                                                             
v_column_name varchar;                                                                                                                                            
v_message_text text;                                                                                                                                              
v_exception_detail text;                                                                                                                                          
v_src_id int4;                                                                                                                                                    
                                                                                                                                                                  
--记录处理日志相关                                                                                                                                                
v_proc_line_count int4;                                                                                                                                           
v_proc_line_fail_count int4;                                                                                                                                      
v_start_time TIMESTAMP;                                                                                                                                           
v_end_time TIMESTAMP;                                                                                                                                             
begin                                                                                                                                                             
v_proc_line_count:=0;                                                                                                                                             
v_proc_line_fail_count:=0;                                                                                                                                        
v_start_time:=now();                             

o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;  
                                                                                                                 
--遍历 正式 vendor 表,处理关联字段列表如下                                                                                                                        
                                                                                                                                                                  
for v_rc in select * from ""public"".asn_jitrule where need_update_id=v_need_update_id   order by id LIMIT v_limit offset v_offset                                                                                            
loop                                                                                                                                                              
			begin
					--perform proc_update_table_ref('asn_jitrule' , 'part_id', 'material_master' , 'part_no', v_rc.id, v_rc.part_no);  
          perform ep_temp_master.proc_update_table_ref('asn_jitrule' , 'part_id', 'material_master' , 'part_unique_code', v_rc.id, v_rc.part_no||v_rc.plant_code);
					perform ep_temp_master.proc_update_table_ref('asn_jitrule' , 'vendor_id', 'iac_vendor' , 'vendor_code', v_rc.id, v_rc.vendor_code);
					perform ep_temp_master.proc_update_table_ref('asn_jitrule' , 'vendor_reg_id', 'iac_vendor_register' , 'vendor_code', v_rc.id, v_rc.vendor_code);   
					perform ep_temp_master.proc_update_table_ref('asn_jitrule' , 'buyer_id', 'buyer_code' , 'buyer_erp_id', v_rc.id, v_rc.buyer_erp_id); 
					perform ep_temp_master.proc_update_table_ref('asn_jitrule' , 'plant_id', 'pur_org_data' , 'plant_code', v_rc.id, v_rc.plant_code);                                                                                                                                                 
				  v_proc_line_count:=v_proc_line_count+1;            
          
          o_update_count:=o_update_count+1;                                                                                              
			EXCEPTION                                                                                                                                              
			when OTHERS THEN                                                                                                                                       
           GET STACKED DIAGNOSTICS                                                                                             
                                   v_message_text = MESSAGE_TEXT,                                                                                                 
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                       
          v_table_name:='asn_jitrule';                                                                                                                                 
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                  
					v_src_id=v_rc.id;                                                                                                                              
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);    
          v_proc_line_fail_count=v_proc_line_fail_count+1;     
          
          o_fail_count:=o_fail_count+1;                                                                                                   
      end;                                                                                                                                                        
end loop;                                                                                                                                                         
                                                                                                                                                      
  return ;                                                                                                                                                       
                                                                                                                                                                  
                                                                                                                                                                  
end;                                                                                                                                                              
$function$
"
"proc_trans_table_asn_maxqty","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_asn_maxqty(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                         
                                                                                                                                                                
declare                                                                                                                                                         
v_rc	record;                                                                                                                                                  
v_pre_period_id integer;                                                                                                                                        
v_start_datetime varchar;                                                                                                                                       
v_end_datetime varchar;                                                                                                                                         
v_count_1	integer;                                                                                                                                             
                                                                                                                                                                
--异常捕获信息                                                                                                                                                  
v_table_name varchar;                                                                                                                                           
v_column_name varchar;                                                                                                                                          
v_message_text text;                                                                                                                                            
v_exception_detail text;                                                                                                                                        
v_src_id int4;                                                                                                                                                  
                                                                                                                                                                
--记录处理日志相关                                                                                                                                              
v_proc_line_count int4;                                                                                                                                         
v_proc_line_fail_count int4;                                                                                                                                    
v_start_time TIMESTAMP;                                                                                                                                         
v_end_time TIMESTAMP;                                                                                                                                           
begin                                                                                                                                                           
v_proc_line_count:=0;                                                                                                                                           
v_proc_line_fail_count:=0;                                                                                                                                      
v_start_time:=now();                                                                                                                                            

o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;  
                                                                                                                                                                
--遍历 address 表,数据转移到odoo正式表中                                                                                                                        
for v_rc in select * from ep_temp_master.asn_maxqty   order by id LIMIT v_limit offset v_offset                                                                                                                                
loop                                                                                                                                                            
			begin                                                                                                                                                
				 select count(*) into v_count_1 from ""public"".asn_maxqty where vendorcode=v_rc.vendorcode 
         and plant=v_rc.plant and material=v_rc.material and division=v_rc.division;                                                          
				 --目标表中不存在相关记录,进行插入操作                                                                                                           
				 if v_count_1=0 THEN
						INSERT INTO ""public"".asn_maxqty (
							VERSION,
							vendorcode,
							plant,
							material,
							deliverytype,
							maxqty,
							engineid,
							createdate,
							division,
							shipped,
							sap_log_id,
							sap_temp_id
						)
						VALUES
							(
								v_rc. VERSION,
								v_rc.vendorcode,
								v_rc.plant,
								v_rc.material,
								v_rc.deliverytype,
								v_rc.maxqty,
								v_rc.engineid,
								v_rc.createdate,
								v_rc.division,
                0,
								v_sap_log_id,
								v_rc.id
							);        
            o_insert_count:=o_insert_count+1;                                                                                                                     
				 end if;                                                                                                                                         
                                                                                                                                                                
				 --目标数据存在,进行更新操作                                                                                                                     
				if v_count_1=1 THEN        
						UPDATE ""public"".asn_maxqty
						SET VERSION = v_rc. VERSION,
						 vendorcode = v_rc.vendorcode,
						 plant = v_rc.plant,
						 material = v_rc.material,
						 deliverytype = v_rc.deliverytype,
						 maxqty = v_rc.maxqty,
						 engineid = v_rc.engineid,
						 createdate = v_rc.createdate,
						 division = v_rc.division,
						 shipped=0,
						 sap_log_id = v_sap_log_id,
						 sap_temp_id = v_rc.id
						WHERE
							vendorcode = v_rc.vendorcode
						AND plant = v_rc.plant
						AND material = v_rc.material
						AND division = v_rc.division;   
           o_update_count:=o_update_count+1;                                                                                                                   
				end if;                                                                                                                                          
				v_proc_line_count:=v_proc_line_count+1;                                                                                                          
			EXCEPTION                                                                                                                                            
			when OTHERS THEN                                                                                                                                     
           GET STACKED DIAGNOSTICS                                                                                                 
                                   v_message_text = MESSAGE_TEXT,                                                                                               
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                     
          v_table_name:='asn_maxqty';                                                                                                                              
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                
					v_src_id=v_rc.id;                                                                                                                            
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);  
          v_proc_line_fail_count=v_proc_line_fail_count+1;      

          o_fail_count:=o_fail_count+1;                                                                                                
      end;                                                                                                                                                      
end loop;                                                                                                                                                       
                                                                                                                                                    
  return ;                                                                                                                                                     
                                                                                                                                                                
end;                                                                                                                                                            
$function$
"
"proc_trans_table_asn_maxqty_ref","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_asn_maxqty_ref(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                           
                                                                                                                                                                  
declare                                                                                                                                                           
v_rc	record;                                                                                                                                                    
v_pre_period_id integer;                                                                                                                                          
v_start_datetime varchar;                                                                                                                                         
v_end_datetime varchar;                                                                                                                                           
v_count_1	integer;                                                                                                                                               
                                                                                                                                                                  
--异常捕获信息                                                                                                                                                    
v_table_name varchar;                                                                                                                                             
v_column_name varchar;                                                                                                                                            
v_message_text text;                                                                                                                                              
v_exception_detail text;                                                                                                                                          
v_src_id int4;                                                                                                                                                    
                                                                                                                                                                  
--记录处理日志相关                                                                                                                                                
v_proc_line_count int4;                                                                                                                                           
v_proc_line_fail_count int4;                                                                                                                                      
v_start_time TIMESTAMP;                                                                                                                                           
v_end_time TIMESTAMP;                                                                                                                                             
begin                                                                                                                                                             
v_proc_line_count:=0;                                                                                                                                             
v_proc_line_fail_count:=0;                                                                                                                                        
v_start_time:=now();                                                                                                                                              
--遍历 正式 vendor 表,处理关联字段列表如下                                                                                                                        

o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;  
                                                                                                                                                                  
for v_rc in select * from ""public"".asn_maxqty where sap_log_id=v_sap_log_id  order by id LIMIT v_limit offset v_offset                                                                                             
loop                                                                                                                                                              
			begin
					--perform proc_update_table_ref('asn_maxqty' , 'part_id', 'material_master' , 'part_no', v_rc.id, v_rc.material);  
				  perform ep_temp_master.proc_update_table_ref('asn_maxqty' , 'part_id', 'material_master' , 'part_unique_code', v_rc.id, v_rc.material||v_rc.plant);
					perform ep_temp_master.proc_update_table_ref('asn_maxqty' , 'vendor_id', 'iac_vendor' , 'vendor_code', v_rc.id, v_rc.vendorcode);
					perform ep_temp_master.proc_update_table_ref('asn_maxqty' , 'vendor_reg_id', 'iac_vendor_register' , 'vendor_code', v_rc.id, v_rc.vendorcode);
					perform ep_temp_master.proc_update_table_ref('asn_maxqty' , 'division_id', 'division_code' , 'division', v_rc.id, v_rc.division);   
					perform ep_temp_master.proc_update_table_ref('asn_maxqty' , 'plant_id', 'pur_org_data' , 'plant_code', v_rc.id, v_rc.plant);   
                                                                                                                                               
				  v_proc_line_count:=v_proc_line_count+1;
          o_update_count:=o_update_count+1;                                                                                                          
			EXCEPTION                                                                                                                                              
			when OTHERS THEN                                                                                                                                       
           GET STACKED DIAGNOSTICS                                                                                                 
                                   v_message_text = MESSAGE_TEXT,                                                                                                 
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                       
          v_table_name:='asn_maxqty';                                                                                                                                 
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                  
					v_src_id=v_rc.id;                                                                                                                              
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);    
          v_proc_line_fail_count=v_proc_line_fail_count+1; 
          o_fail_count:=o_fail_count+1;                                                                                                       
      end;                                                                                                                                                        
end loop;                                                                                                                                                         
                                                                                                                                                       
  return ;                                                                                                                                                       
                                                                                                                                                                  
                                                                                                                                                                  
end;                                                                                                                                                              
$function$
"
"proc_trans_table_asn_maxqty_ref_2","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_asn_maxqty_ref_2(v_sap_log_id character varying, v_need_update_id integer, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                           
                                                                                                                                                                  
declare                                                                                                                                                           
v_rc	record;                                                                                                                                                    
v_pre_period_id integer;                                                                                                                                          
v_start_datetime varchar;                                                                                                                                         
v_end_datetime varchar;                                                                                                                                           
v_count_1	integer;                                                                                                                                               
                                                                                                                                                                  
--异常捕获信息                                                                                                                                                    
v_table_name varchar;                                                                                                                                             
v_column_name varchar;                                                                                                                                            
v_message_text text;                                                                                                                                              
v_exception_detail text;                                                                                                                                          
v_src_id int4;                                                                                                                                                    
                                                                                                                                                                  
--记录处理日志相关                                                                                                                                                
v_proc_line_count int4;                                                                                                                                           
v_proc_line_fail_count int4;                                                                                                                                      
v_start_time TIMESTAMP;                                                                                                                                           
v_end_time TIMESTAMP;                                                                                                                                             
begin                                                                                                                                                             
v_proc_line_count:=0;                                                                                                                                             
v_proc_line_fail_count:=0;                                                                                                                                        
v_start_time:=now();                                                                                                                                              
--遍历 正式 vendor 表,处理关联字段列表如下                                                                                                                        

o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;  
                                                                                                                                                                  
for v_rc in select * from ""public"".asn_maxqty where need_update_id=v_need_update_id  order by id LIMIT v_limit offset v_offset                                                                                             
loop                                                                                                                                                              
			begin
					--perform proc_update_table_ref('asn_maxqty' , 'part_id', 'material_master' , 'part_no', v_rc.id, v_rc.material);  
				  perform ep_temp_master.proc_update_table_ref('asn_maxqty' , 'part_id', 'material_master' , 'part_unique_code', v_rc.id, v_rc.material||v_rc.plant);
					perform ep_temp_master.proc_update_table_ref('asn_maxqty' , 'vendor_id', 'iac_vendor' , 'vendor_code', v_rc.id, v_rc.vendorcode);
					perform ep_temp_master.proc_update_table_ref('asn_maxqty' , 'vendor_reg_id', 'iac_vendor_register' , 'vendor_code', v_rc.id, v_rc.vendorcode);
					perform ep_temp_master.proc_update_table_ref('asn_maxqty' , 'division_id', 'division_code' , 'division', v_rc.id, v_rc.division);   
					perform ep_temp_master.proc_update_table_ref('asn_maxqty' , 'plant_id', 'pur_org_data' , 'plant_code', v_rc.id, v_rc.plant);   
                                                                                                                                               
				  v_proc_line_count:=v_proc_line_count+1;
          o_update_count:=o_update_count+1;                                                                                                          
			EXCEPTION                                                                                                                                              
			when OTHERS THEN                                                                                                                                       
           GET STACKED DIAGNOSTICS                                                                                                 
                                   v_message_text = MESSAGE_TEXT,                                                                                                 
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                       
          v_table_name:='asn_maxqty';                                                                                                                                 
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                  
					v_src_id=v_rc.id;                                                                                                                              
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);    
          v_proc_line_fail_count=v_proc_line_fail_count+1; 
          o_fail_count:=o_fail_count+1;                                                                                                       
      end;                                                                                                                                                        
end loop;                                                                                                                                                         
                                                                                                                                                       
  return ;                                                                                                                                                       
                                                                                                                                                                  
                                                                                                                                                                  
end;                                                                                                                                                              
$function$
"
"proc_trans_table_buyer_code","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_buyer_code(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                         
                                                                                                                                                                
declare                                                                                                                                                         
v_rc	record;                                                                                                                                                  
v_pre_period_id integer;                                                                                                                                        
v_start_datetime varchar;                                                                                                                                       
v_end_datetime varchar;                                                                                                                                         
v_count_1	integer;                                                                                                                                             
                                                                                                                                                                
--异常捕获信息                                                                                                                                                  
v_table_name varchar;                                                                                                                                           
v_column_name varchar;                                                                                                                                          
v_message_text text;                                                                                                                                            
v_exception_detail text;                                                                                                                                        
v_src_id int4;                                                                                                                                                  
                                                                                                                                                                
--记录处理日志相关                                                                                                                                              
v_proc_line_count int4;                                                                                                                                         
v_proc_line_fail_count int4;                                                                                                                                    
v_start_time TIMESTAMP;                                                                                                                                         
v_end_time TIMESTAMP;                                                                                                                                           
begin                                                                                                                                                           
v_proc_line_count:=0;                                                                                                                                           
v_proc_line_fail_count:=0;                                                                                                                                      
v_start_time:=now();                                                                                                                                            

o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;   
                                                                                                                                                                
--遍历 address 表,数据转移到odoo正式表中                                                                                                                        
for v_rc in select * from ep_temp_master.buyer_code  order by id LIMIT v_limit offset v_offset                                                                                                                                 
loop                                                                                                                                                            
			begin                                                                                                                                                
				 select count(*) into v_count_1 from ""public"".buyer_code where buyer_erp_id=v_rc.buyer_erp_id;                                                          
				 --目标表中不存在相关记录,进行插入操作                                                                                                           
				 if v_count_1=0 THEN    
						INSERT INTO ""public"".buyer_code (
							buyer_erp_id,
							buyer_name,
							buyer_ad_account,
							sap_log_id,
							sap_temp_id
						)
						VALUES
							(
								v_rc.buyer_erp_id,
								v_rc.buyer_name,
								v_rc.buyer_ad_account,
								v_sap_log_id,
								v_rc. ID
							); 
            o_insert_count:=o_insert_count+1;                                                                                                                        
				 end if;                                                                                                                                         
                                                                                                                                                                
				 --目标数据存在,进行更新操作                                                                                                                     
				if v_count_1=1 THEN  
						UPDATE ""public"".buyer_code
						SET buyer_name = v_rc.buyer_name,
						 buyer_ad_account = v_rc.buyer_ad_account,
						 sap_log_id = v_sap_log_id,
						 sap_temp_id = v_rc. ID
						WHERE
							buyer_erp_id = v_rc.buyer_erp_id;
            o_update_count:=o_update_count+1;                                                                                                                            
				end if;                                                                                                                                          
				v_proc_line_count:=v_proc_line_count+1;                                                                                                          
			EXCEPTION                                                                                                                                            
			when OTHERS THEN                                                                                                                                     
           GET STACKED DIAGNOSTICS                                                                                               
                                   v_message_text = MESSAGE_TEXT,                                                                                               
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                     
          v_table_name:='buyer_code';                                                                                                                              
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                
					v_src_id=v_rc.id;                                                                                                                            
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);  
          v_proc_line_fail_count=v_proc_line_fail_count+1;   
          o_fail_count:=o_fail_count+1;                                                                                                   
      end;                                                                                                                                                      
end loop;                                                                                                                                                       
                                                                                                                                                   
  return ;                                                                                                                                                     
                                                                                                                                                                
end;                                                                                                                                                            
$function$
"
"proc_trans_table_buyer_code_ref","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_buyer_code_ref(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                           
                                                                                                                                                                  
declare                                                                                                                                                           
v_rc	record;                                                                                                                                                    
v_pre_period_id integer;                                                                                                                                          
v_start_datetime varchar;                                                                                                                                         
v_end_datetime varchar;                                                                                                                                           
v_count_1	integer;                                                                                                                                               
                                                                                                                                                                  
--异常捕获信息                                                                                                                                                    
v_table_name varchar;                                                                                                                                             
v_column_name varchar;                                                                                                                                            
v_message_text text;                                                                                                                                              
v_exception_detail text;                                                                                                                                          
v_src_id int4;                                                                                                                                                    
                                                                                                                                                                  
--记录处理日志相关                                                                                                                                                
v_proc_line_count int4;                                                                                                                                           
v_proc_line_fail_count int4;                                                                                                                                      
v_start_time TIMESTAMP;                                                                                                                                           
v_end_time TIMESTAMP;                                                                                                                                             
begin                                                                                                                                                             
v_proc_line_count:=0;                                                                                                                                             
v_proc_line_fail_count:=0;                                                                                                                                        
v_start_time:=now();                                                                                                                                              
--遍历 正式 buyer_code 表,处理关联字段列表如下                                                                                                                        
o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;   
                                                                                                                                                                  
for v_rc in select * from ""public"".buyer_code where sap_log_id=v_sap_log_id order by id LIMIT v_limit offset v_offset                                                                                              
loop                                                                                                                                                              
			begin                                                                                                                                                  
				  v_proc_line_count:=v_proc_line_count+1;                                                                                                          
			EXCEPTION                                                                                                                                              
			when OTHERS THEN                                                                                                                                       
           GET STACKED DIAGNOSTICS                                                                                               
                                   v_message_text = MESSAGE_TEXT,                                                                                                 
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                       
          v_table_name:='buyer_code';                                                                                                                                 
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                  
					v_src_id=v_rc.id;                                                                                                                              
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);    
          v_proc_line_fail_count=v_proc_line_fail_count+1;       
          o_fail_count:=o_fail_count+1;                                                                                                 
      end;                                                                                                                                                        
end loop;                                                                                                                                                         
                                                                                                                                                        
  return ;                                                                                                                                                       
                                                                                                                                                                  
                                                                                                                                                                  
end;                                                                                                                                                              
$function$
"
"proc_trans_table_buyer_code_ref_2","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_buyer_code_ref_2(v_sap_log_id character varying, v_need_update_id integer, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                           
                                                                                                                                                                  
declare                                                                                                                                                           
v_rc	record;                                                                                                                                                    
v_pre_period_id integer;                                                                                                                                          
v_start_datetime varchar;                                                                                                                                         
v_end_datetime varchar;                                                                                                                                           
v_count_1	integer;                                                                                                                                               
                                                                                                                                                                  
--异常捕获信息                                                                                                                                                    
v_table_name varchar;                                                                                                                                             
v_column_name varchar;                                                                                                                                            
v_message_text text;                                                                                                                                              
v_exception_detail text;                                                                                                                                          
v_src_id int4;                                                                                                                                                    
                                                                                                                                                                  
--记录处理日志相关                                                                                                                                                
v_proc_line_count int4;                                                                                                                                           
v_proc_line_fail_count int4;                                                                                                                                      
v_start_time TIMESTAMP;                                                                                                                                           
v_end_time TIMESTAMP;                                                                                                                                             
begin                                                                                                                                                             
v_proc_line_count:=0;                                                                                                                                             
v_proc_line_fail_count:=0;                                                                                                                                        
v_start_time:=now();                                                                                                                                              
--遍历 正式 buyer_code 表,处理关联字段列表如下                                                                                                                        
o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;   
                                                                                                                                                                  
for v_rc in select * from ""public"".buyer_code where need_update_id=v_need_update_id order by id LIMIT v_limit offset v_offset                                                                                              
loop                                                                                                                                                              
			begin                                                                                                                                                  
				  v_proc_line_count:=v_proc_line_count+1;                                                                                                          
			EXCEPTION                                                                                                                                              
			when OTHERS THEN                                                                                                                                       
           GET STACKED DIAGNOSTICS                                                                                               
                                   v_message_text = MESSAGE_TEXT,                                                                                                 
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                       
          v_table_name:='buyer_code';                                                                                                                                 
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                  
					v_src_id=v_rc.id;                                                                                                                              
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);    
          v_proc_line_fail_count=v_proc_line_fail_count+1;       
          o_fail_count:=o_fail_count+1;                                                                                                 
      end;                                                                                                                                                        
end loop;                                                                                                                                                         
                                                                                                                                                        
  return ;                                                                                                                                                       
                                                                                                                                                                  
                                                                                                                                                                  
end;                                                                                                                                                              
$function$
"
"proc_trans_table_company","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_company(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                         
                                                                                                                                                                
declare                                                                                                                                                         
v_rc	record;                                                                                                                                                  
v_pre_period_id integer;                                                                                                                                        
v_start_datetime varchar;                                                                                                                                       
v_end_datetime varchar;                                                                                                                                         
v_count_1	integer;                                                                                                                                             
                                                                                                                                                                
--异常捕获信息                                                                                                                                                  
v_table_name varchar;                                                                                                                                           
v_column_name varchar;                                                                                                                                          
v_message_text text;                                                                                                                                            
v_exception_detail text;                                                                                                                                        
v_src_id int4;                                                                                                                                                  
                                                                                                                                                                
--记录处理日志相关                                                                                                                                              
v_proc_line_count int4;                                                                                                                                         
v_proc_line_fail_count int4;                                                                                                                                    
v_start_time TIMESTAMP;                                                                                                                                         
v_end_time TIMESTAMP;                                                                                                                                           
begin                                                                                                                                                           
v_proc_line_count:=0;                                                                                                                                           
v_proc_line_fail_count:=0;                                                                                                                                      
v_start_time:=now();                                                                                                                                            

o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;   
                                                                                                                                                                
--遍历 address 表,数据转移到odoo正式表中                                                                                                                        
for v_rc in select * from ep_temp_master.company   order by id LIMIT v_limit offset v_offset                                                                                                                                
loop                                                                                                                                                            
			begin                                                                                                                                                
				 select count(*) into v_count_1 from ""public"".company where company_code=v_rc.company_code;                                                          
				 --目标表中不存在相关记录,进行插入操作                                                                                                           
				 if v_count_1=0 THEN   
						INSERT INTO ""public"".company (
							company_code,
							company_name,
							city,
							company_code1,
							address_id,
							sap_log_id,
							sap_temp_id
						)
						VALUES
							(
								v_rc.company_code,
								v_rc.company_name,
								v_rc.city,
								v_rc.company_code1,
								v_rc.address_id,
								v_sap_log_id,
								v_rc. ID
							);
           o_insert_count:=o_insert_count+1;
				 end if;                                                                                                                                         
                                                                                                                                                                
				 --目标数据存在,进行更新操作                                                                                                                     
				if v_count_1=1 THEN   
						UPDATE ""public"".company
						SET company_name = v_rc.company_name,
						 city = v_rc.city,
						 company_code1 = v_rc.company_code1,
						 address_id = v_rc.address_id,
						 sap_log_id = v_sap_log_id,
						 sap_temp_id = v_rc. ID
						WHERE
							company_code = v_rc.company_code;  
            o_update_count:=o_update_count+1;                                                                                                                         
				end if;                                                                                                                                          
				v_proc_line_count:=v_proc_line_count+1;                                                                                                          
			EXCEPTION                                                                                                                                            
			when OTHERS THEN                                                                                                                                     
           GET STACKED DIAGNOSTICS                                                                                          
                                   v_message_text = MESSAGE_TEXT,                                                                                               
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                     
          v_table_name:='company';                                                                                                                              
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                
					v_src_id=v_rc.id;                                                                                                                            
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);  
          v_proc_line_fail_count=v_proc_line_fail_count+1;
          o_fail_count:=o_fail_count+1;                                                                                                      
      end;                                                                                                                                                      
end loop;                                                                                                                                                       
                                                                                                                                                    
  return ;                                                                                                                                                     
                                                                                                                                                                
end;                                                                                                                                                            
$function$
"
"proc_trans_table_company_ref","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_company_ref(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                           
                                                                                                                                                                  
declare                                                                                                                                                           
v_rc	record;                                                                                                                                                    
v_pre_period_id integer;                                                                                                                                          
v_start_datetime varchar;                                                                                                                                         
v_end_datetime varchar;                                                                                                                                           
v_count_1	integer;                                                                                                                                               
                                                                                                                                                                  
--异常捕获信息                                                                                                                                                    
v_table_name varchar;                                                                                                                                             
v_column_name varchar;                                                                                                                                            
v_message_text text;                                                                                                                                              
v_exception_detail text;                                                                                                                                          
v_src_id int4;                                                                                                                                                    
                                                                                                                                                                  
--记录处理日志相关                                                                                                                                                
v_proc_line_count int4;                                                                                                                                           
v_proc_line_fail_count int4;                                                                                                                                      
v_start_time TIMESTAMP;                                                                                                                                           
v_end_time TIMESTAMP;                                                                                                                                             
begin                                                                                                                                                             
v_proc_line_count:=0;                                                                                                                                             
v_proc_line_fail_count:=0;                                                                                                                                        
v_start_time:=now();    
o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;                                                                                                                                             
--遍历 正式 vendor 表,处理关联字段列表如下                                                                                                                        
/*
address_odoo_id=fields.Many2one('address','Address Info')
*/                                                                                                                                                                  
for v_rc in select * from ""public"".company where sap_log_id=v_sap_log_id   order by id LIMIT v_limit offset v_offset                                                                                            
loop                                                                                                                                                              
			begin
					--perform proc_update_table_ref('inforecord_history' , 'part_id', 'material_master' , 'part_no', v_rc.id, v_rc.part_no);         
					--perform proc_update_table_ref('inforecord_history' , 'vendor_id', 'iac_vendor' , 'vendor_code', v_rc.id, v_rc.vendor_code);
					--perform proc_update_table_ref('inforecord_history' , 'vendor_reg_id', 'iac_vendor_register' , 'vendor_code', v_rc.id, v_rc.vendor_code);
					--perform proc_update_table_ref('inforecord_history' , 'purchase_org_id', 'vendor_plant' , 'vendor_purchase_code', v_rc.id, v_rc.vendor_code||v_rc.purchase_org);
					--perform proc_update_table_ref('inforecord_history' , 'plant_id', 'pur_org_data' , 'plant_code', v_rc.id, v_rc.plant_code);
						perform ep_temp_master.proc_update_table_ref('company' , 'address_odoo_id', 'address' , 'address_id', v_rc.id, v_rc.address_id);
	                                                                                                                                                           
				  v_proc_line_count:=v_proc_line_count+1;    
          o_update_count:=o_update_count+1;                                                                                                      
			EXCEPTION                                                                                                                                              
			when OTHERS THEN                                                                                                                                       
           GET STACKED DIAGNOSTICS                                                                                                 
                                   v_message_text = MESSAGE_TEXT,                                                                                                 
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                       
          v_table_name:='company';                                                                                                                                 
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                  
					v_src_id=v_rc.id;                                                                                                                              
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);    
          v_proc_line_fail_count=v_proc_line_fail_count+1; 
          o_fail_count:=o_fail_count+1;                                                                                                       
      end;                                                                                                                                                        
end loop;                                                                                                                                                         
                                                                                                                                                        
  return ;                                                                                                                                                       
                                                                                                                                                                  
                                                                                                                                                                  
end;                                                                                                                                                              
$function$
"
"proc_trans_table_company_ref_2","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_company_ref_2(v_sap_log_id character varying, v_need_update_id integer, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                           
                                                                                                                                                                  
declare                                                                                                                                                           
v_rc	record;                                                                                                                                                    
v_pre_period_id integer;                                                                                                                                          
v_start_datetime varchar;                                                                                                                                         
v_end_datetime varchar;                                                                                                                                           
v_count_1	integer;                                                                                                                                               
                                                                                                                                                                  
--异常捕获信息                                                                                                                                                    
v_table_name varchar;                                                                                                                                             
v_column_name varchar;                                                                                                                                            
v_message_text text;                                                                                                                                              
v_exception_detail text;                                                                                                                                          
v_src_id int4;                                                                                                                                                    
                                                                                                                                                                  
--记录处理日志相关                                                                                                                                                
v_proc_line_count int4;                                                                                                                                           
v_proc_line_fail_count int4;                                                                                                                                      
v_start_time TIMESTAMP;                                                                                                                                           
v_end_time TIMESTAMP;                                                                                                                                             
begin                                                                                                                                                             
v_proc_line_count:=0;                                                                                                                                             
v_proc_line_fail_count:=0;                                                                                                                                        
v_start_time:=now();    
o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;                                                                                                                                             
--遍历 正式 vendor 表,处理关联字段列表如下                                                                                                                        
/*
address_odoo_id=fields.Many2one('address','Address Info')
*/                                                                                                                                                                  
for v_rc in select * from ""public"".company where need_update_id=v_need_update_id   order by id LIMIT v_limit offset v_offset                                                                                            
loop                                                                                                                                                              
			begin
					--perform proc_update_table_ref('inforecord_history' , 'part_id', 'material_master' , 'part_no', v_rc.id, v_rc.part_no);         
					--perform proc_update_table_ref('inforecord_history' , 'vendor_id', 'iac_vendor' , 'vendor_code', v_rc.id, v_rc.vendor_code);
					--perform proc_update_table_ref('inforecord_history' , 'vendor_reg_id', 'iac_vendor_register' , 'vendor_code', v_rc.id, v_rc.vendor_code);
					--perform proc_update_table_ref('inforecord_history' , 'purchase_org_id', 'vendor_plant' , 'vendor_purchase_code', v_rc.id, v_rc.vendor_code||v_rc.purchase_org);
					--perform proc_update_table_ref('inforecord_history' , 'plant_id', 'pur_org_data' , 'plant_code', v_rc.id, v_rc.plant_code);
						perform ep_temp_master.proc_update_table_ref('company' , 'address_odoo_id', 'address' , 'address_id', v_rc.id, v_rc.address_id);
	                                                                                                                                                           
				  v_proc_line_count:=v_proc_line_count+1;    
          o_update_count:=o_update_count+1;                                                                                                      
			EXCEPTION                                                                                                                                              
			when OTHERS THEN                                                                                                                                       
           GET STACKED DIAGNOSTICS                                                                                                 
                                   v_message_text = MESSAGE_TEXT,                                                                                                 
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                       
          v_table_name:='company';                                                                                                                                 
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                  
					v_src_id=v_rc.id;                                                                                                                              
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);    
          v_proc_line_fail_count=v_proc_line_fail_count+1; 
          o_fail_count:=o_fail_count+1;                                                                                                       
      end;                                                                                                                                                        
end loop;                                                                                                                                                         
                                                                                                                                                        
  return ;                                                                                                                                                       
                                                                                                                                                                  
                                                                                                                                                                  
end;                                                                                                                                                              
$function$
"
"proc_trans_table_division_code","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_division_code(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                         
                                                                                                                                                                
declare                                                                                                                                                         
v_rc	record;                                                                                                                                                  
v_pre_period_id integer;                                                                                                                                        
v_start_datetime varchar;                                                                                                                                       
v_end_datetime varchar;                                                                                                                                         
v_count_1	integer;                                                                                                                                             
                                                                                                                                                                
--异常捕获信息                                                                                                                                                  
v_table_name varchar;                                                                                                                                           
v_column_name varchar;                                                                                                                                          
v_message_text text;                                                                                                                                            
v_exception_detail text;                                                                                                                                        
v_src_id int4;                                                                                                                                                  
                                                                                                                                                                
--记录处理日志相关                                                                                                                                              
v_proc_line_count int4;                                                                                                                                         
v_proc_line_fail_count int4;                                                                                                                                    
v_start_time TIMESTAMP;                                                                                                                                         
v_end_time TIMESTAMP;                                                                                                                                           
begin                                                                                                                                                           
v_proc_line_count:=0;                                                                                                                                           
v_proc_line_fail_count:=0;                                                                                                                                      
v_start_time:=now();                                                                                                                                            

o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;   
                                                                                                                                                                
--遍历 address 表,数据转移到odoo正式表中                                                                                                                        
for v_rc in select * from ep_temp_master.division_code   order by id LIMIT v_limit offset v_offset                                                                                                                                
loop                                                                                                                                                            
			begin                                                                                                                                                
				 select count(*) into v_count_1 from ""public"".division_code where division=v_rc.division;                                                          
				 --目标表中不存在相关记录,进行插入操作                                                                                                           
				 if v_count_1=0 THEN 
						INSERT INTO ""public"".division_code (
							division,
							division_description,
							language_key,
							sap_log_id,
							sap_temp_id
						)
						VALUES
							(
								v_rc.division,
								v_rc.division_description,
								v_rc.language_key,
								v_sap_log_id,
								v_rc. ID
							); 
            o_insert_count:=o_insert_count+1;                                                                                                                           
				 end if;                                                                                                                                         
                                                                                                                                                                
				 --目标数据存在,进行更新操作                                                                                                                     
				if v_count_1=1 THEN  
						UPDATE ""public"".division_code
						SET division_description = v_rc.division_description,
						 language_key = v_rc.language_key,
						 sap_log_id = v_sap_log_id,
						 sap_temp_id = v_rc. ID
						WHERE
							division = v_rc.division;
            o_update_count:=o_update_count+1;                                                                                                                            
				end if;                                                                                                                                          
				v_proc_line_count:=v_proc_line_count+1;                                                                                                          
			EXCEPTION                                                                                                                                            
			when OTHERS THEN                                                                                                                                     
           GET STACKED DIAGNOSTICS                                                                                              
                                   v_message_text = MESSAGE_TEXT,                                                                                               
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                     
          v_table_name:='division_code';                                                                                                                              
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                
					v_src_id=v_rc.id;                                                                                                                            
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);  
          v_proc_line_fail_count=v_proc_line_fail_count+1;
          o_fail_count:=o_fail_count+1;                                                                                                      
      end;                                                                                                                                                      
end loop;                                                                                                                                                       
                                                                                                                                                     
  return ;                                                                                                                                                     
                                                                                                                                                                
end;                                                                                                                                                            
$function$
"
"proc_trans_table_division_code_ref","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_division_code_ref(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                           
                                                                                                                                                                  
declare                                                                                                                                                           
v_rc	record;                                                                                                                                                    
v_pre_period_id integer;                                                                                                                                          
v_start_datetime varchar;                                                                                                                                         
v_end_datetime varchar;                                                                                                                                           
v_count_1	integer;                                                                                                                                               
                                                                                                                                                                  
--异常捕获信息                                                                                                                                                    
v_table_name varchar;                                                                                                                                             
v_column_name varchar;                                                                                                                                            
v_message_text text;                                                                                                                                              
v_exception_detail text;                                                                                                                                          
v_src_id int4;                                                                                                                                                    
                                                                                                                                                                  
--记录处理日志相关                                                                                                                                                
v_proc_line_count int4;                                                                                                                                           
v_proc_line_fail_count int4;                                                                                                                                      
v_start_time TIMESTAMP;                                                                                                                                           
v_end_time TIMESTAMP;                                                                                                                                             
begin                                                                                                                                                             
v_proc_line_count:=0;                                                                                                                                             
v_proc_line_fail_count:=0;                                                                                                                                        
v_start_time:=now();                                                                                                                                              
--遍历 正式 vendor 表,处理关联字段列表如下                                                                                                                        

o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;   
                                                                                                                                                                  
for v_rc in select * from ""public"".division_code where sap_log_id=v_sap_log_id   order by id LIMIT v_limit offset v_offset                                                                                            
loop                                                                                                                                                              
			begin                                                                                                                                                  
				  v_proc_line_count:=v_proc_line_count+1;                                                                                                          
			EXCEPTION                                                                                                                                              
			when OTHERS THEN                                                                                                                                       
           GET STACKED DIAGNOSTICS                                                                                                 
                                   v_message_text = MESSAGE_TEXT,                                                                                                 
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                       
          v_table_name:='division_code';                                                                                                                                 
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                  
					v_src_id=v_rc.id;                                                                                                                              
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);    
          v_proc_line_fail_count=v_proc_line_fail_count+1; 
          o_fail_count:=o_fail_count+1;                                                                                                       
      end;                                                                                                                                                        
end loop;                                                                                                                                                         
                                                                                                                                                       
  return ;                                                                                                                                                       
                                                                                                                                                                  
                                                                                                                                                                  
end;                                                                                                                                                              
$function$
"
"proc_trans_table_division_code_ref_2","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_division_code_ref_2(v_sap_log_id character varying, v_need_update_id integer, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                           
                                                                                                                                                                  
declare                                                                                                                                                           
v_rc	record;                                                                                                                                                    
v_pre_period_id integer;                                                                                                                                          
v_start_datetime varchar;                                                                                                                                         
v_end_datetime varchar;                                                                                                                                           
v_count_1	integer;                                                                                                                                               
                                                                                                                                                                  
--异常捕获信息                                                                                                                                                    
v_table_name varchar;                                                                                                                                             
v_column_name varchar;                                                                                                                                            
v_message_text text;                                                                                                                                              
v_exception_detail text;                                                                                                                                          
v_src_id int4;                                                                                                                                                    
                                                                                                                                                                  
--记录处理日志相关                                                                                                                                                
v_proc_line_count int4;                                                                                                                                           
v_proc_line_fail_count int4;                                                                                                                                      
v_start_time TIMESTAMP;                                                                                                                                           
v_end_time TIMESTAMP;                                                                                                                                             
begin                                                                                                                                                             
v_proc_line_count:=0;                                                                                                                                             
v_proc_line_fail_count:=0;                                                                                                                                        
v_start_time:=now();                                                                                                                                              
--遍历 正式 vendor 表,处理关联字段列表如下                                                                                                                        

o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;   
                                                                                                                                                                  
for v_rc in select * from ""public"".division_code where need_update_id=v_need_update_id   order by id LIMIT v_limit offset v_offset                                                                                            
loop                                                                                                                                                              
			begin                                                                                                                                                  
				  v_proc_line_count:=v_proc_line_count+1;                                                                                                          
			EXCEPTION                                                                                                                                              
			when OTHERS THEN                                                                                                                                       
           GET STACKED DIAGNOSTICS                                                                                                 
                                   v_message_text = MESSAGE_TEXT,                                                                                                 
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                       
          v_table_name:='division_code';                                                                                                                                 
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                  
					v_src_id=v_rc.id;                                                                                                                              
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);    
          v_proc_line_fail_count=v_proc_line_fail_count+1; 
          o_fail_count:=o_fail_count+1;                                                                                                       
      end;                                                                                                                                                        
end loop;                                                                                                                                                         
                                                                                                                                                       
  return ;                                                                                                                                                       
                                                                                                                                                                  
                                                                                                                                                                  
end;                                                                                                                                                              
$function$
"
"proc_trans_table_goods_receipts","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_goods_receipts(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                         
                                                                                                                                                                
declare                                                                                                                                                         
v_rc	record;                                                                                                                                                  
v_pre_period_id integer;                                                                                                                                        
v_start_datetime varchar;                                                                                                                                       
v_end_datetime varchar;                                                                                                                                         
v_count_1	integer;                                                                                                                                             
                                                                                                                                                                
--异常捕获信息                                                                                                                                                  
v_table_name varchar;                                                                                                                                           
v_column_name varchar;                                                                                                                                          
v_message_text text;                                                                                                                                            
v_exception_detail text;                                                                                                                                        
v_src_id int4;                                                                                                                                                  
                                                                                                                                                                
--记录处理日志相关                                                                                                                                              
v_proc_line_count int4;                                                                                                                                         
v_proc_line_fail_count int4;                                                                                                                                    
v_start_time TIMESTAMP;                                                                                                                                         
v_end_time TIMESTAMP;                                                                                                                                           
begin                                                                                                                                                           
v_proc_line_count:=0;                                                                                                                                           
v_proc_line_fail_count:=0;                                                                                                                                      
v_start_time:=now();                                                                                                                                            

o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;   
                                                                                                                                                                
--遍历 address 表,数据转移到odoo正式表中                                                                                                                        
for v_rc in select * from ep_temp_master.goods_receipts    order by id LIMIT v_limit offset v_offset                                                                                                                               
loop                                                                                                                                                            
			begin                                                                                                                                                
				 select count(*) into v_count_1 from ""public"".goods_receipts where 	sap_control_no = v_rc.sap_control_no;                                                          
				 --目标表中不存在相关记录,进行插入操作                                                                                                           
				 if v_count_1=0 THEN  
						INSERT INTO ""public"".goods_receipts (
							sap_control_no,
							document_erp_id,
							po_line_no,
							gr_document_year,
							gr_document_no,
							gr_document_line_no,
							asn_no,
							asn_line_no,
							gr_document_date,
							gr_document_time,
							company_code,
							buyer_erp_id,
							plant_code,
							part_no,
							movement_type,
							qty_total,
							qty_received,
							sap_log_id,
							sap_temp_id
						)
						VALUES
							(
								v_rc.sap_control_no,
								v_rc.document_erp_id,
								v_rc.po_line_no,
								v_rc.gr_document_year,
								v_rc.gr_document_no,
								v_rc.gr_document_line_no,
								v_rc.asn_no,
								v_rc.asn_line_no,
								v_rc.gr_document_date,
								v_rc.gr_document_time,
								v_rc.company_code,
								v_rc.buyer_erp_id,
								v_rc.plant_code,
								v_rc.part_no,
								v_rc.movement_type,
								cast(v_rc.qty_total as float),
								cast(v_rc.qty_received as float),
								v_sap_log_id,
								v_rc. ID
							); 
             o_insert_count:=o_insert_count+1;  
                                                                                                                              
				 end if;                                                                                                                                         
                                                                                                                                                                
				 --目标数据存在,进行更新操作  
        /*                                                                                                                   
				if v_count_1=1 THEN    
						UPDATE ""public"".goods_receipts
						SET document_erp_id = v_rc.document_erp_id,
						 po_line_no = v_rc.po_line_no,
						 gr_document_year = v_rc.gr_document_year,
						 gr_document_no = v_rc.gr_document_no,
						 gr_document_line_no = v_rc.gr_document_line_no,
						 asn_no = v_rc.asn_no,
						 asn_line_no = v_rc.asn_line_no,
						 gr_document_date = v_rc.gr_document_date,
						 gr_document_time = v_rc.gr_document_time,
						 company_code = v_rc.company_code,
						 buyer_erp_id = v_rc.buyer_erp_id,
						 plant_code = v_rc.plant_code,
						 part_no = v_rc.part_no,
						 movement_type = v_rc.movement_type,
						 qty_total = cast(v_rc.qty_total as float),
						 qty_received = cast(v_rc.qty_received as float),
						 sap_log_id = v_sap_log_id,
						 sap_temp_id = v_rc. ID
						WHERE
							sap_control_no = v_rc.sap_control_no; 
            o_update_count:=o_update_count+1;                                                                                                                         
				end if; 
        */
                                                                                                                                         
				v_proc_line_count:=v_proc_line_count+1;                                                                                                          
			EXCEPTION                                                                                                                                            
			when OTHERS THEN                                                                                                                                     
           GET STACKED DIAGNOSTICS                                                                                                
                                   v_message_text = MESSAGE_TEXT,                                                                                               
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                     
          v_table_name:='goods_receipts';                                                                                                                              
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                
					v_src_id=v_rc.id;                                                                                                                            
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);  
          v_proc_line_fail_count=v_proc_line_fail_count+1;   
          o_fail_count:=o_fail_count+1;                                                                                                   
      end;                                                                                                                                                      
end loop;                                                                                                                                                       
                                                                                                                                                   
  return ;                                                                                                                                                     
                                                                                                                                                                
end;                                                                                                                                                            
$function$
"
"proc_trans_table_goods_receipts_ref","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_goods_receipts_ref(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                           
                                                                                                                                                                  
declare                                                                                                                                                           
v_rc	record;                                                                                                                                                    
v_pre_period_id integer;                                                                                                                                          
v_start_datetime varchar;                                                                                                                                         
v_end_datetime varchar;                                                                                                                                           
v_count_1	integer;                                                                                                                                               
                                                                                                                                                                  
--异常捕获信息                                                                                                                                                    
v_table_name varchar;                                                                                                                                             
v_column_name varchar;                                                                                                                                            
v_message_text text;                                                                                                                                              
v_exception_detail text;                                                                                                                                          
v_src_id int4;                                                                                                                                                    
                                                                                                                                                                  
--记录处理日志相关                                                                                                                                                
v_proc_line_count int4;                                                                                                                                           
v_proc_line_fail_count int4;                                                                                                                                      
v_start_time TIMESTAMP;                                                                                                                                           
v_end_time TIMESTAMP;
v_sql_text	text;                                                                                                                                             
begin                                                                                                                                                             
v_proc_line_count:=0;                                                                                                                                             
v_proc_line_fail_count:=0;                                                                                                                                        
v_start_time:=now();    

o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;  
                                                                                                                                          
--遍历 正式 vendor 表,处理关联字段列表如下                                                                                                                        
/*
    part_id = fields.Many2one('material.master', 'Part No')
    plant_id = fields.Many2one('vendor.plant', 'Plant')
    sap_log_id = fields.Char(string=""Sap log Info"")
    sap_temp_id = fields.Integer(string=""Sap Temp Info"")
    po_line_id = fields.Many2one('iac.po.item', string='PO Line')#
*/                                                                                                                                                                  
for v_rc in select * from ""public"".goods_receipts where sap_log_id=v_sap_log_id   order by id LIMIT v_limit offset v_offset                                                                                            
loop                                                                                                                                                              
			begin
					--perform proc_update_table_ref('goods_receipts' , 'part_id', 'material_master' , 'part_no', v_rc.id, v_rc.part_no);
				  perform ep_temp_master.proc_update_table_ref('goods_receipts' , 'part_id', 'material_master' , 'part_unique_code', v_rc.id, v_rc.part_no||v_rc.plant_code);                   
          --更新 vendor_id
          if  v_rc.asn_no is not null then
					perform ep_temp_master.proc_update_table_ref_2('goods_receipts' , 'vendor_id', 'iac_asn' , 'asn_no', v_rc.id, v_rc.asn_no,'vendor_id');
          end if;

			    --更新 plant_id
					perform ep_temp_master.proc_update_table_ref('goods_receipts' , 'plant_id', 'pur_org_data' , 'plant_code', v_rc.id, v_rc.plant_code);
          --更新 po_id
          if v_rc.document_erp_id is not null then
					   perform ep_temp_master.proc_update_table_ref('goods_receipts' , 'po_id', 'iac_purchase_order' , 'document_erp_id', v_rc.id, v_rc.document_erp_id);
          end if;
          --更新 asn_id
         if v_rc.asn_no is not null then
					  perform ep_temp_master.proc_update_table_ref('goods_receipts' , 'asn_id', 'iac_asn' , 'asn_no', v_rc.id, v_rc.asn_no);
         end if;

          
					--更新 po_line_id
          if v_rc.document_erp_id is null THEN
            raise EXCEPTION  ' document_epr_id is null ';
          end if;

				  v_sql_text:='UPDATE public.goods_receipts gr
					SET po_line_id = (
						SELECT
							ID
						FROM
							iac_purchase_order_line po_line
						WHERE
							po_line.document_erp_id = '||v_rc.document_erp_id||' 
						AND po_line.document_line_erp_id = cast('||v_rc.po_line_no||' as varchar)
					)
					WHERE
						gr.id = '||v_rc.id||'
					AND EXISTS (
						SELECT
							1
						FROM
							iac_purchase_order_line po_line
						WHERE
							po_line.document_erp_id = '||v_rc.document_erp_id||'
						AND po_line.document_line_erp_id = cast ('||v_rc.po_line_no||' as varchar)
					)';


         --RAISE NOTICE 'Sql Text is: %', v_sql_text;
          --execute v_sql_text;
          perform ep_temp_master.proc_update_table_ref_3('goods_receipts' , v_sql_text,  v_rc.id);			
          /*
					UPDATE ""public"".goods_receipts gr
					SET po_line_id = (
						SELECT
							ID
						FROM
							iac_purchase_order_line po_line
						WHERE
							po_line.document_erp_id = v_rc.document_erp_id
						AND po_line.document_line_erp_id = cast (v_rc.po_line_no as varchar)
					)
					WHERE
						gr.id = v_rc.id
					AND EXISTS (
						SELECT
							1
						FROM
							iac_purchase_order_line po_line
						WHERE
							po_line.document_erp_id = v_rc.document_erp_id
						AND po_line.document_line_erp_id = cast (v_rc.po_line_no as varchar)
					);
          */

          --更新 asn_line_id,asn并非必定填写关联id
         
					UPDATE ""public"".goods_receipts gr
					SET asn_line_id = (
						SELECT
							ID
						FROM
							iac_asn_line asn_line
						WHERE
							asn_line.asn_line_no = cast (v_rc.asn_line_no as varchar)
						AND asn_line.asn_id = v_rc.asn_id
					)
					WHERE
					   id = v_rc.id
					AND EXISTS (
						SELECT
							1
						FROM
							iac_asn_line asn_line
						WHERE
							asn_line.asn_line_no = cast (v_rc.asn_line_no as varchar)
						AND asn_line.asn_id = v_rc.asn_id
					);		
          
                                                                                                                                
				  v_proc_line_count:=v_proc_line_count+1;
          o_update_count:=o_update_count+1;                                                                                                          
			EXCEPTION                                                                                                                                              
			when OTHERS THEN                                                                                                                                       
           GET STACKED DIAGNOSTICS                                                                                                
                                   v_message_text = MESSAGE_TEXT,                                                                                                 
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                       
          v_table_name:='vendor';                                                                                                                                 
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                  
					v_src_id=v_rc.id;                                                                                                                              
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);    
          v_proc_line_fail_count=v_proc_line_fail_count+1;  
          o_fail_count:=o_fail_count+1;                                                                                                      
      end;                                                                                                                                                        
end loop;                                                                                                                                                         
                                                                                                                                                        
  return ;                                                                                                                                                       
                                                                                                                                                                  
                                                                                                                                                                  
end;                                                                                                                                                              
$function$
"
"proc_trans_table_goods_receipts_ref_2","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_goods_receipts_ref_2(v_sap_log_id character varying, v_need_update_id integer, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                           
                                                                                                                                                                  
declare                                                                                                                                                           
v_rc	record;                                                                                                                                                    
v_pre_period_id integer;                                                                                                                                          
v_start_datetime varchar;                                                                                                                                         
v_end_datetime varchar;                                                                                                                                           
v_count_1	integer;                                                                                                                                               
                                                                                                                                                                  
--异常捕获信息                                                                                                                                                    
v_table_name varchar;                                                                                                                                             
v_column_name varchar;                                                                                                                                            
v_message_text text;                                                                                                                                              
v_exception_detail text;                                                                                                                                          
v_src_id int4;                                                                                                                                                    
                                                                                                                                                                  
--记录处理日志相关                                                                                                                                                
v_proc_line_count int4;                                                                                                                                           
v_proc_line_fail_count int4;                                                                                                                                      
v_start_time TIMESTAMP;                                                                                                                                           
v_end_time TIMESTAMP;
v_sql_text varchar;                                                                                                                                             
begin                                                                                                                                                             
v_proc_line_count:=0;                                                                                                                                             
v_proc_line_fail_count:=0;                                                                                                                                        
v_start_time:=now();    

o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;  
                                                                                                                                          
--遍历 正式 vendor 表,处理关联字段列表如下                                                                                                                        
/*
    part_id = fields.Many2one('material.master', 'Part No')
    plant_id = fields.Many2one('vendor.plant', 'Plant')
    sap_log_id = fields.Char(string=""Sap log Info"")
    sap_temp_id = fields.Integer(string=""Sap Temp Info"")
    po_line_id = fields.Many2one('iac.po.item', string='PO Line')#
*/                                                                                                                                                                  
for v_rc in select * from ""public"".goods_receipts where need_update_id=v_need_update_id   order by id LIMIT v_limit offset v_offset                                                                                            
loop                                                                                                                                                              
			begin
					--perform proc_update_table_ref('goods_receipts' , 'part_id', 'material_master' , 'part_no', v_rc.id, v_rc.part_no);
				  perform ep_temp_master.proc_update_table_ref('goods_receipts' , 'part_id', 'material_master' , 'part_unique_code', v_rc.id, v_rc.part_no||v_rc.plant_code);                   
          --更新 vendor_id
          if  v_rc.asn_no is not null then
					perform ep_temp_master.proc_update_table_ref_2('goods_receipts' , 'vendor_id', 'iac_asn' , 'asn_no', v_rc.id, v_rc.asn_no,'vendor_id');
          end if;

			    --更新 plant_id
					perform ep_temp_master.proc_update_table_ref('goods_receipts' , 'plant_id', 'pur_org_data' , 'plant_code', v_rc.id, v_rc.plant_code);
          --更新 po_id
          if v_rc.document_erp_id is not null then
					   perform ep_temp_master.proc_update_table_ref('goods_receipts' , 'po_id', 'iac_purchase_order' , 'document_erp_id', v_rc.id, v_rc.document_erp_id);
          end if;
          --更新 asn_id
         if v_rc.asn_no is not null then
					  perform ep_temp_master.proc_update_table_ref('goods_receipts' , 'asn_id', 'iac_asn' , 'asn_no', v_rc.id, v_rc.asn_no);
         end if;

					--更新 po_line_id
          if v_rc.document_erp_id is null THEN
            raise EXCEPTION  ' document_epr_id is null ';
          end if;

					--更新 po_line_id
				  v_sql_text:='UPDATE public.goods_receipts gr
					SET po_line_id = (
						SELECT
							ID
						FROM
							iac_purchase_order_line po_line
						WHERE
							po_line.document_erp_id = '||v_rc.document_erp_id||' 
						AND po_line.document_line_erp_id = cast('||v_rc.po_line_no||'as varchar)
					)
					WHERE
						gr.id = '||v_rc.id||'
					AND EXISTS (
						SELECT
							1
						FROM
							iac_purchase_order_line po_line
						WHERE
							po_line.document_erp_id = '||v_rc.document_erp_id||'
						AND po_line.document_line_erp_id = cast ('||v_rc.po_line_no||')
					)';
          perform ep_temp_master.proc_update_table_ref_3('goods_receipts' , v_sql_text,  v_rc.id);	


          --更新 asn_line_id

					UPDATE ""public"".goods_receipts gr
					SET asn_line_id = (
						SELECT
							ID
						FROM
							iac_asn_line asn_line
						WHERE
							asn_line.asn_line_no = cast (v_rc.asn_line_no as varchar)
						AND asn_line.asn_id = v_rc.asn_id
					)
					WHERE
					   id = v_rc.id
					AND EXISTS (
						SELECT
							1
						FROM
							iac_asn_line asn_line
						WHERE
							asn_line.asn_line_no = cast (v_rc.asn_line_no as varchar)
						AND asn_line.asn_id = v_rc.asn_id
					);		
                                                                                                                                          
				  v_proc_line_count:=v_proc_line_count+1;
          o_update_count:=o_update_count+1;                                                                                                          
			EXCEPTION                                                                                                                                              
			when OTHERS THEN                                                                                                                                       
           GET STACKED DIAGNOSTICS                                                                                                
                                   v_message_text = MESSAGE_TEXT,                                                                                                 
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                       
          v_table_name:='vendor';                                                                                                                                 
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                  
					v_src_id=v_rc.id;                                                                                                                              
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);    
          v_proc_line_fail_count=v_proc_line_fail_count+1;  
          o_fail_count:=o_fail_count+1;                                                                                                      
      end;                                                                                                                                                        
end loop;                                                                                                                                                         
                                                                                                                                                        
  return ;                                                                                                                                                       
                                                                                                                                                                  
                                                                                                                                                                  
end;                                                                                                                                                              
$function$
"
"proc_trans_table_incoterm","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_incoterm(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                         
                                                                                                                                                                
declare                                                                                                                                                         
v_rc	record;                                                                                                                                                  
v_pre_period_id integer;                                                                                                                                        
v_start_datetime varchar;                                                                                                                                       
v_end_datetime varchar;                                                                                                                                         
v_count_1	integer;                                                                                                                                             
                                                                                                                                                                
--异常捕获信息                                                                                                                                                  
v_table_name varchar;                                                                                                                                           
v_column_name varchar;                                                                                                                                          
v_message_text text;                                                                                                                                            
v_exception_detail text;                                                                                                                                        
v_src_id int4;                                                                                                                                                  
                                                                                                                                                                
--记录处理日志相关                                                                                                                                              
v_proc_line_count int4;                                                                                                                                         
v_proc_line_fail_count int4;                                                                                                                                    
v_start_time TIMESTAMP;                                                                                                                                         
v_end_time TIMESTAMP;                                                                                                                                           
begin                                                                                                                                                           
v_proc_line_count:=0;                                                                                                                                           
v_proc_line_fail_count:=0;                                                                                                                                      
v_start_time:=now();                                                                                                                                            
o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;                                                                                                                                                                   
--遍历 address 表,数据转移到odoo正式表中                                                                                                                        
for v_rc in select * from ep_temp_master.incoterm  order by id LIMIT v_limit offset v_offset                                                                                                                                 
loop                                                                                                                                                            
			begin                                                                                                                                                
				 select count(*) into v_count_1 from ""public"".incoterm where incoterm = v_rc.incoterm
						AND incoterm_description = v_rc.incoterm_description;                                                          
				 --目标表中不存在相关记录,进行插入操作                                                                                                           
				 if v_count_1=0 THEN  
						INSERT INTO ""public"".incoterm (
							language_key,
							incoterm,
							incoterm_description,
							sap_log_id,
							sap_temp_id
						)
						VALUES
							(
								v_rc.language_key,
								v_rc.incoterm,
								v_rc.incoterm_description,
								v_sap_log_id,
								v_rc. ID
							);
            o_insert_count:=o_insert_count+1;                                                                                                                           
				 end if;                                                                                                                                         
                                                                                                                                                                
				 --目标数据存在,进行更新操作                                                                                                                     
				if v_count_1=1 THEN   
						UPDATE ""public"".incoterm
						SET language_key = v_rc.language_key,
						 sap_log_id = v_sap_log_id,
						 sap_temp_id = v_rc. ID
						WHERE
							incoterm = v_rc.incoterm
						AND incoterm_description = v_rc.incoterm_description; 
            o_update_count:=o_update_count+1;                                                                                                                          
				end if;                                                                                                                                          
				v_proc_line_count:=v_proc_line_count+1;                                                                                                          
			EXCEPTION                                                                                                                                            
			when OTHERS THEN                                                                                                                                     
           GET STACKED DIAGNOSTICS                                                                                                 
                                   v_message_text = MESSAGE_TEXT,                                                                                               
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                     
          v_table_name:='incoterm';                                                                                                                              
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                
					v_src_id=v_rc.id;                                                                                                                            
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);  
          v_proc_line_fail_count=v_proc_line_fail_count+1;
          o_fail_count:=o_fail_count+1;                                                                                                      
      end;                                                                                                                                                      
end loop;                                                                                                                                                       
                                                                                                                                                     
  return ;                                                                                                                                                     
                                                                                                                                                                
end;                                                                                                                                                            
$function$
"
"proc_trans_table_incoterm_ref","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_incoterm_ref(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                           
                                                                                                                                                                  
declare                                                                                                                                                           
v_rc	record;                                                                                                                                                    
v_pre_period_id integer;                                                                                                                                          
v_start_datetime varchar;                                                                                                                                         
v_end_datetime varchar;                                                                                                                                           
v_count_1	integer;                                                                                                                                               
                                                                                                                                                                  
--异常捕获信息                                                                                                                                                    
v_table_name varchar;                                                                                                                                             
v_column_name varchar;                                                                                                                                            
v_message_text text;                                                                                                                                              
v_exception_detail text;                                                                                                                                          
v_src_id int4;                                                                                                                                                    
                                                                                                                                                                  
--记录处理日志相关                                                                                                                                                
v_proc_line_count int4;                                                                                                                                           
v_proc_line_fail_count int4;                                                                                                                                      
v_start_time TIMESTAMP;                                                                                                                                           
v_end_time TIMESTAMP;                                                                                                                                             
begin                                                                                                                                                             
v_proc_line_count:=0;                                                                                                                                             
v_proc_line_fail_count:=0;                                                                                                                                        
v_start_time:=now();     
o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;                                                                                                                                            
--遍历 正式 vendor 表,处理关联字段列表如下                                                                                                                        
                                                                                                                                                                  
for v_rc in select * from ""public"".incoterm where sap_log_id=v_sap_log_id   order by id LIMIT v_limit offset v_offset                                                                                            
loop                                                                                                                                                              
			begin                                                                                                                                                  
				  v_proc_line_count:=v_proc_line_count+1;                                                                                                          
			EXCEPTION                                                                                                                                              
			when OTHERS THEN                                                                                                                                       
           GET STACKED DIAGNOSTICS                                                                                                 
                                   v_message_text = MESSAGE_TEXT,                                                                                                 
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                       
          v_table_name:='incoterm';                                                                                                                                 
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                  
					v_src_id=v_rc.id;                                                                                                                              
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);    
          v_proc_line_fail_count=v_proc_line_fail_count+1;    
          o_fail_count:=o_fail_count+1;                                                                                                    
      end;                                                                                                                                                        
end loop;                                                                                                                                                         
                                                                                                                                             
                                                                                                                                                       
  return ;                                                                                                                                                       
                                                                                                                                                                  
                                                                                                                                                                  
end;                                                                                                                                                              
$function$
"
"proc_trans_table_incoterm_ref_2","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_incoterm_ref_2(v_sap_log_id character varying, v_need_update_id integer, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                           
                                                                                                                                                                  
declare                                                                                                                                                           
v_rc	record;                                                                                                                                                    
v_pre_period_id integer;                                                                                                                                          
v_start_datetime varchar;                                                                                                                                         
v_end_datetime varchar;                                                                                                                                           
v_count_1	integer;                                                                                                                                               
                                                                                                                                                                  
--异常捕获信息                                                                                                                                                    
v_table_name varchar;                                                                                                                                             
v_column_name varchar;                                                                                                                                            
v_message_text text;                                                                                                                                              
v_exception_detail text;                                                                                                                                          
v_src_id int4;                                                                                                                                                    
                                                                                                                                                                  
--记录处理日志相关                                                                                                                                                
v_proc_line_count int4;                                                                                                                                           
v_proc_line_fail_count int4;                                                                                                                                      
v_start_time TIMESTAMP;                                                                                                                                           
v_end_time TIMESTAMP;                                                                                                                                             
begin                                                                                                                                                             
v_proc_line_count:=0;                                                                                                                                             
v_proc_line_fail_count:=0;                                                                                                                                        
v_start_time:=now();     
o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;                                                                                                                                            
--遍历 正式 vendor 表,处理关联字段列表如下                                                                                                                        
                                                                                                                                                                  
for v_rc in select * from ""public"".incoterm where need_update_id=v_need_update_id   order by id LIMIT v_limit offset v_offset                                                                                            
loop                                                                                                                                                              
			begin                                                                                                                                                  
				  v_proc_line_count:=v_proc_line_count+1;                                                                                                          
			EXCEPTION                                                                                                                                              
			when OTHERS THEN                                                                                                                                       
           GET STACKED DIAGNOSTICS                                                                                                 
                                   v_message_text = MESSAGE_TEXT,                                                                                                 
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                       
          v_table_name:='incoterm';                                                                                                                                 
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                  
					v_src_id=v_rc.id;                                                                                                                              
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);    
          v_proc_line_fail_count=v_proc_line_fail_count+1;    
          o_fail_count:=o_fail_count+1;                                                                                                    
      end;                                                                                                                                                        
end loop;                                                                                                                                                         
                                                                                                                                             
                                                                                                                                                       
  return ;                                                                                                                                                       
                                                                                                                                                                  
                                                                                                                                                                  
end;                                                                                                                                                              
$function$
"
"proc_trans_table_inforecord_history","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_inforecord_history(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                         
                                                                                                                                                                
declare                                                                                                                                                         
v_rc	record;                                                                                                                                                  
v_pre_period_id integer;                                                                                                                                        
v_start_datetime varchar;                                                                                                                                       
v_end_datetime varchar;                                                                                                                                         
v_count_1	integer;                                                                                                                                             
                                                                                                                                                                
--异常捕获信息                                                                                                                                                  
v_table_name varchar;                                                                                                                                           
v_column_name varchar;                                                                                                                                          
v_message_text text;                                                                                                                                            
v_exception_detail text;                                                                                                                                        
v_src_id int4;                                                                                                                                                  
                                                                                                                                                                
--记录处理日志相关                                                                                                                                              
v_proc_line_count int4;                                                                                                                                         
v_proc_line_fail_count int4;                                                                                                                                    
v_start_time TIMESTAMP;                                                                                                                                         
v_end_time TIMESTAMP;                                                                                                                                           
begin                                                                                                                                                           
v_proc_line_count:=0;                                                                                                                                           
v_proc_line_fail_count:=0;                                                                                                                                      
v_start_time:=now();                                                                                                                                            

o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;  
                                                                                                                                                                
--遍历 address 表,数据转移到odoo正式表中                                                                                                                        
for v_rc in select * from ep_temp_master.inforecord_history   order by id LIMIT v_limit offset v_offset                                                                                                                                
loop                                                                                                                                                            
			begin                                                                                                                                                
				 select count(*) into v_count_1 from ""public"".inforecord_history where condition_record = v_rc.condition_record;                                                           
				 --目标表中不存在相关记录,进行插入操作                                                                                                           
				 if v_count_1=0 THEN
						INSERT INTO ""public"".inforecord_history (
							condition_record,
							application,
							vendor_code,
							part_no,
							purchase_org,
							plant_code,
							creation_date,
							valid_from,
							valid_to,
							currency,
							price,
							price_unit,
							ltime,
							mpq,
							moq,
							rw,
							cw,
							taxcode,
							price_control,
							sap_log_id,
							sap_temp_id
						)
						VALUES
							(
								v_rc.condition_record,
								v_rc.application,
								v_rc.vendor_code,
								v_rc.part_no,
								v_rc.purchase_org,
								v_rc.plant_code,
								v_rc.creation_date,
								v_rc.valid_from,
								v_rc.valid_to,
								v_rc.currency,
								v_rc.price,
								v_rc.price_unit,
								v_rc.ltime,
								v_rc.mpq,
								v_rc.moq,
								v_rc.rw,
								v_rc.cw,
								v_rc.taxcode,
								v_rc.price_control,
								v_sap_log_id,
								v_rc. ID
							);  
            o_insert_count:=o_insert_count+1;                                                                                                                           
				 end if;                                                                                                                                         
                                                                                                                                                                
				 --目标数据存在,进行更新操作                                                                                                                     
				if v_count_1=1 THEN
					UPDATE ""public"".inforecord_history
					SET application = v_rc.application,
					 vendor_code = v_rc.vendor_code,
					 part_no = v_rc.part_no,
					 purchase_org = v_rc.purchase_org,
					 plant_code = v_rc.plant_code,
					 creation_date = v_rc.creation_date,
					 valid_from = v_rc.valid_from,
					 valid_to = v_rc.valid_to,
					 currency = v_rc.currency,
					 price = v_rc.price,
					 price_unit = v_rc.price_unit,
					 ltime = v_rc.ltime,
					 mpq = v_rc.mpq,
					 moq = v_rc.moq,
					 rw = v_rc.rw,
					 cw = v_rc.cw,
					 taxcode = v_rc.taxcode,
					 price_control = v_rc.price_control,
					 sap_log_id = v_sap_log_id,
					 sap_temp_id = v_rc. ID
					WHERE
						condition_record = v_rc.condition_record;   
          o_update_count:=o_update_count+1;                                                                                                                      
				end if;                                                                                                                                          
				v_proc_line_count:=v_proc_line_count+1;                                                                                                          
			EXCEPTION                                                                                                                                            
			when OTHERS THEN                                                                                                                                     
           GET STACKED DIAGNOSTICS                                                                                               
                                   v_message_text = MESSAGE_TEXT,                                                                                               
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                     
          v_table_name:='inforecord_history';                                                                                                                              
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                
					v_src_id=v_rc.id;                                                                                                                            
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);  
          v_proc_line_fail_count=v_proc_line_fail_count+1;       
          o_fail_count:=o_fail_count+1;                                                                                               
      end;                                                                                                                                                      
end loop;                                                                                                                                                       
                                                                                                                                                    
  return ;                                                                                                                                                     
                                                                                                                                                                
end;                                                                                                                                                            
$function$
"
"proc_trans_table_inforecord_history_ref","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_inforecord_history_ref(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                           
                                                                                                                                                                  
declare                                                                                                                                                           
v_rc	record;                                                                                                                                                    
v_pre_period_id integer;                                                                                                                                          
v_start_datetime varchar;                                                                                                                                         
v_end_datetime varchar;                                                                                                                                           
v_count_1	integer;                                                                                                                                               
                                                                                                                                                                  
--异常捕获信息                                                                                                                                                    
v_table_name varchar;                                                                                                                                             
v_column_name varchar;                                                                                                                                            
v_message_text text;                                                                                                                                              
v_exception_detail text;                                                                                                                                          
v_src_id int4;                                                                                                                                                    
                                                                                                                                                                  
--记录处理日志相关                                                                                                                                                
v_proc_line_count int4;                                                                                                                                           
v_proc_line_fail_count int4;                                                                                                                                      
v_start_time TIMESTAMP;                                                                                                                                           
v_end_time TIMESTAMP;                                                                                                                                             
begin                                                                                                                                                             
v_proc_line_count:=0;                                                                                                                                             
v_proc_line_fail_count:=0;                                                                                                                                        
v_start_time:=now();        

o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;                                                                                                                                        
--遍历 正式 vendor 表,处理关联字段列表如下                                                                                                                        
/*
    part_id = fields.Many2one('material.master', 'Part No')
    vendor_id = fields.Many2one('iac.vendor', string=""Vendor Info"")
    vendor_reg_id = fields.Many2one('iac.vendor.register', string=""Vendor Registration"")
    purchase_org_id=fields.Many2one(""vendor.plant"",string=""Purchase Org Info"")
    plant_id = fields.Many2one('pur.org.data', string=""Plant Info"")
*/                                                                                                                                                                  
for v_rc in select * from ""public"".inforecord_history where sap_log_id=v_sap_log_id   order by id LIMIT v_limit offset v_offset                                                                                            
loop                                                                                                                                                              
			begin
					--perform proc_update_table_ref('inforecord_history' , 'part_id', 'material_master' , 'part_no', v_rc.id, v_rc.part_no);         
					perform ep_temp_master.proc_update_table_ref('inforecord_history' , 'part_id', 'material_master' , 'part_unique_code', v_rc.id, v_rc.part_no||v_rc.plant_code);
					perform ep_temp_master.proc_update_table_ref('inforecord_history' , 'vendor_id', 'iac_vendor' , 'vendor_code', v_rc.id, v_rc.vendor_code);
					perform ep_temp_master.proc_update_table_ref('inforecord_history' , 'vendor_reg_id', 'iac_vendor_register' , 'vendor_code', v_rc.id, v_rc.vendor_code);
					perform ep_temp_master.proc_update_table_ref('inforecord_history' , 'purchase_org_id', 'vendor_plant' , 'vendor_purchase_code', v_rc.id, v_rc.vendor_code||v_rc.purchase_org);
					perform ep_temp_master.proc_update_table_ref('inforecord_history' , 'plant_id', 'pur_org_data' , 'plant_code', v_rc.id, v_rc.plant_code);
	        perform ep_temp_master.proc_update_table_ref('inforecord_history' , 'currency_id', 'res_currency' , 'name', v_rc.id, v_rc.currency);    
                                                                                                                                         
				  v_proc_line_count:=v_proc_line_count+1;      

          o_update_count:=o_update_count+1;                                                                                                    
			EXCEPTION                                                                                                                                              
			when OTHERS THEN                                                                                                                                       
           GET STACKED DIAGNOSTICS                                                                                                 
                                   v_message_text = MESSAGE_TEXT,                                                                                                 
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                       
          v_table_name:='inforecord_history';                                                                                                                                 
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                  
					v_src_id=v_rc.id;                                                                                                                              
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);    
          v_proc_line_fail_count=v_proc_line_fail_count+1;
          o_fail_count:=o_fail_count+1;                                                                                                        
      end;                                                                                                                                                        
end loop;                                                                                                                                                         
                                                                                                                                                    
  return ;                                                                                                                                                       
                                                                                                                                                                  
                                                                                                                                                                  
end;                                                                                                                                                              
$function$
"
"proc_trans_table_inforecord_history_ref_2","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_inforecord_history_ref_2(v_sap_log_id character varying, v_need_update_id integer, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                           
                                                                                                                                                                  
declare                                                                                                                                                           
v_rc	record;                                                                                                                                                    
v_pre_period_id integer;                                                                                                                                          
v_start_datetime varchar;                                                                                                                                         
v_end_datetime varchar;                                                                                                                                           
v_count_1	integer;                                                                                                                                               
                                                                                                                                                                  
--异常捕获信息                                                                                                                                                    
v_table_name varchar;                                                                                                                                             
v_column_name varchar;                                                                                                                                            
v_message_text text;                                                                                                                                              
v_exception_detail text;                                                                                                                                          
v_src_id int4;                                                                                                                                                    
                                                                                                                                                                  
--记录处理日志相关                                                                                                                                                
v_proc_line_count int4;                                                                                                                                           
v_proc_line_fail_count int4;                                                                                                                                      
v_start_time TIMESTAMP;                                                                                                                                           
v_end_time TIMESTAMP;                                                                                                                                             
begin                                                                                                                                                             
v_proc_line_count:=0;                                                                                                                                             
v_proc_line_fail_count:=0;                                                                                                                                        
v_start_time:=now();        

o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;                                                                                                                                        
--遍历 正式 vendor 表,处理关联字段列表如下                                                                                                                        
/*
    part_id = fields.Many2one('material.master', 'Part No')
    vendor_id = fields.Many2one('iac.vendor', string=""Vendor Info"")
    vendor_reg_id = fields.Many2one('iac.vendor.register', string=""Vendor Registration"")
    purchase_org_id=fields.Many2one(""vendor.plant"",string=""Purchase Org Info"")
    plant_id = fields.Many2one('pur.org.data', string=""Plant Info"")
*/                                                                                                                                                                  
for v_rc in select * from ""public"".inforecord_history where need_update_id=v_need_update_id   order by id LIMIT v_limit offset v_offset                                                                                            
loop                                                                                                                                                              
			begin
					--perform proc_update_table_ref('inforecord_history' , 'part_id', 'material_master' , 'part_no', v_rc.id, v_rc.part_no);         
					perform ep_temp_master.proc_update_table_ref('inforecord_history' , 'part_id', 'material_master' , 'part_unique_code', v_rc.id, v_rc.part_no||v_rc.plant_code);
					perform ep_temp_master.proc_update_table_ref('inforecord_history' , 'vendor_id', 'iac_vendor' , 'vendor_code', v_rc.id, v_rc.vendor_code);
					perform ep_temp_master.proc_update_table_ref('inforecord_history' , 'vendor_reg_id', 'iac_vendor_register' , 'vendor_code', v_rc.id, v_rc.vendor_code);
					perform ep_temp_master.proc_update_table_ref('inforecord_history' , 'purchase_org_id', 'vendor_plant' , 'vendor_purchase_code', v_rc.id, v_rc.vendor_code||v_rc.purchase_org);
					perform ep_temp_master.proc_update_table_ref('inforecord_history' , 'plant_id', 'pur_org_data' , 'plant_code', v_rc.id, v_rc.plant_code);
	        perform ep_temp_master.proc_update_table_ref('inforecord_history' , 'currency_id', 'res_currency' , 'name', v_rc.id, v_rc.currency);      
                                                                                                                                         
				  v_proc_line_count:=v_proc_line_count+1;      

          o_update_count:=o_update_count+1;                                                                                                    
			EXCEPTION                                                                                                                                              
			when OTHERS THEN                                                                                                                                       
           GET STACKED DIAGNOSTICS                                                                                                 
                                   v_message_text = MESSAGE_TEXT,                                                                                                 
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                       
          v_table_name:='inforecord_history';                                                                                                                                 
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                  
					v_src_id=v_rc.id;                                                                                                                              
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);    
          v_proc_line_fail_count=v_proc_line_fail_count+1;
          o_fail_count:=o_fail_count+1;                                                                                                        
      end;                                                                                                                                                        
end loop;                                                                                                                                                         
                                                                                                                                                    
  return ;                                                                                                                                                       
                                                                                                                                                                  
                                                                                                                                                                  
end;                                                                                                                                                              
$function$
"
"proc_trans_table_material_custmaster","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_material_custmaster(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                         
                                                                                                                                                                
declare                                                                                                                                                         
v_rc	record;                                                                                                                                                  
v_pre_period_id integer;                                                                                                                                        
v_start_datetime varchar;                                                                                                                                       
v_end_datetime varchar;                                                                                                                                         
v_count_1	integer;                                                                                                                                             
                                                                                                                                                                
--异常捕获信息                                                                                                                                                  
v_table_name varchar;                                                                                                                                           
v_column_name varchar;                                                                                                                                          
v_message_text text;                                                                                                                                            
v_exception_detail text;                                                                                                                                        
v_src_id int4;                                                                                                                                                  
                                                                                                                                                                
--记录处理日志相关                                                                                                                                              
v_proc_line_count int4;                                                                                                                                         
v_proc_line_fail_count int4;                                                                                                                                    
v_start_time TIMESTAMP;                                                                                                                                         
v_end_time TIMESTAMP;                                                                                                                                           
begin                                                                                                                                                           
v_proc_line_count:=0;                                                                                                                                           
v_proc_line_fail_count:=0;                                                                                                                                      
v_start_time:=now();  

o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;   
                                                                                                                                          
                                                                                                                                                                
--遍历 address 表,数据转移到odoo正式表中                                                                                                                        
for v_rc in select * from ep_temp_master.material_custmaster   order by id LIMIT v_limit offset v_offset                                                                                                                                
loop                                                                                                                                                            
			begin                                                                                                                                                
				 select count(*) into v_count_1 from ""public"".material_custmaster where part_no=v_rc.part_no and plant_code=v_rc.plant_code;                                                          
				 --目标表中不存在相关记录,进行插入操作                                                                                                           
				 if v_count_1=0 THEN     
						INSERT INTO ""public"".material_custmaster (
							plant_code,
							part_no,
							buy_sell_flag,
							last_buy_flag,
							material_group_cn,
							rma_flag,
							sourcer,
							gr_location,
							part_status_by_site,
							sap_log_id,
							sap_temp_id
						)

						VALUES
							(
								v_rc.plant_code,
								v_rc.part_no,
								v_rc.buy_sell_flag,
								v_rc.last_buy_flag,
								v_rc.material_group_cn,
								v_rc.rma_flag,
								v_rc.sourcer,
								v_rc.gr_location,
								v_rc.part_status_by_site,
								v_sap_log_id,
								v_rc. ID
							);   
					  o_insert_count:=o_insert_count+1;																																																							
				 end if;                                                                                                                                         
                                                                                                                                                                
				 --目标数据存在,进行更新操作                                                                                                                     
				if v_count_1=1 THEN   
						UPDATE ""public"".material_custmaster
						SET plant_code = v_rc.plant_code,
						 buy_sell_flag = v_rc.buy_sell_flag,
						 last_buy_flag = v_rc.last_buy_flag,
						 material_group_cn = v_rc.material_group_cn,
						 rma_flag = v_rc.rma_flag,
						 sourcer = v_rc.sourcer,
						 gr_location = v_rc.gr_location,
						 part_status_by_site = v_rc.part_status_by_site,
						 sap_log_id = v_sap_log_id,
						 sap_temp_id = v_rc. ID
						WHERE
							part_no = v_rc.part_no and plant_code=v_rc.plant_code;  
           o_update_count:=o_update_count+1;                                                                                                                         
				end if;                                                                                                                                          
				v_proc_line_count:=v_proc_line_count+1;                                                                                                          
			EXCEPTION                                                                                                                                            
			when OTHERS THEN                                                                                                                                     
           GET STACKED DIAGNOSTICS                                                                                                 
                                   v_message_text = MESSAGE_TEXT,                                                                                               
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                     
          v_table_name:='material_custmaster';                                                                                                                              
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                
					v_src_id=v_rc.id;                                                                                                                            
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);  
          v_proc_line_fail_count=v_proc_line_fail_count+1;      
          o_fail_count:=o_fail_count+1;                                                                                                
      end;                                                                                                                                                      
end loop;                                                                                                                                                       
return;                                                                                                                                                 
                                                                                                                                                                
end;                                                                                                                                                            
$function$
"
"proc_trans_table_material_custmaster_ref","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_material_custmaster_ref(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                           
                                                                                                                                                                  
declare                                                                                                                                                           
v_rc	record;                                                                                                                                                    
v_pre_period_id integer;                                                                                                                                          
v_start_datetime varchar;                                                                                                                                         
v_end_datetime varchar;                                                                                                                                           
v_count_1	integer;                                                                                                                                               
                                                                                                                                                                  
--异常捕获信息                                                                                                                                                    
v_table_name varchar;                                                                                                                                             
v_column_name varchar;                                                                                                                                            
v_message_text text;                                                                                                                                              
v_exception_detail text;                                                                                                                                          
v_src_id int4;                                                                                                                                                    
                                                                                                                                                                  
--记录处理日志相关                                                                                                                                                
v_proc_line_count int4;                                                                                                                                           
v_proc_line_fail_count int4;                                                                                                                                      
v_start_time TIMESTAMP;                                                                                                                                           
v_end_time TIMESTAMP;                                                                                                                                             
begin                                                                                                                                                             
v_proc_line_count:=0;                                                                                                                                             
v_proc_line_fail_count:=0;                                                                                                                                        
v_start_time:=now();   

o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;   
                                                                                                                                           
--遍历 正式 vendor 表,处理关联字段列表如下                                                                                                                        
                                                                                                                                                                  
for v_rc in select * from ""public"".material_custmaster where sap_log_id=v_sap_log_id    order by id LIMIT v_limit offset v_offset                                                                                           
loop                                                                                                                                                              
			begin 
					--perform proc_update_table_ref('material_custmaster' , 'part_id', 'material_master' , 'part_no', v_rc.id, v_rc.part_no);         
          perform ep_temp_master.proc_update_table_ref('material_custmaster' , 'part_id', 'material_master' , 'part_unique_code', v_rc.id, v_rc.part_no||v_rc.plant_code);          
					perform ep_temp_master.proc_update_table_ref('material_custmaster' , 'plant_id', 'pur_org_data' , 'plant_code', v_rc.id, v_rc.plant_code);                                                                                                                                                  
           
					--复制字段数据到material_master表中
					UPDATE ""public"".material_master M
					SET buy_sell_flag = v_rc.buy_sell_flag,
					 last_buy_flag = v_rc.last_buy_flag,
					 material_group_cn = v_rc.material_group_cn,
					 rma_flag = v_rc.rma_flag,
					 sourcer = v_rc.sourcer,
					 gr_location = v_rc.gr_location,
					 part_status_by_site = v_rc.part_status_by_site
					WHERE
						M . ID = v_rc.part_id;
                                                                                                                                      
				  v_proc_line_count:=v_proc_line_count+1;  
          o_update_count:=o_update_count+1;                                                                                                        
			EXCEPTION                                                                                                                                              
			when OTHERS THEN                                                                                                                                       
           GET STACKED DIAGNOSTICS                                                                                          
                                   v_message_text = MESSAGE_TEXT,                                                                                                 
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                       
          v_table_name:='material_custmaster';                                                                                                                                 
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                  
					v_src_id=v_rc.id;                                                                                                                              
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);    
          v_proc_line_fail_count=v_proc_line_fail_count+1;    
          o_fail_count:=o_fail_count+1;                                                                                                    
      end;                                                                                                                                                        
end loop;                                                                                                                                                         
return;                                                                                                                                                       
                                                                                                                                                                  
                                                                                                                                                                  
end;                                                                                                                                                              
$function$
"
"proc_trans_table_material_custmaster_ref_2","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_material_custmaster_ref_2(v_sap_log_id character varying, v_need_update_id integer, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                           
                                                                                                                                                                  
declare                                                                                                                                                           
v_rc	record;                                                                                                                                                    
v_pre_period_id integer;                                                                                                                                          
v_start_datetime varchar;                                                                                                                                         
v_end_datetime varchar;                                                                                                                                           
v_count_1	integer;                                                                                                                                               
                                                                                                                                                                  
--异常捕获信息                                                                                                                                                    
v_table_name varchar;                                                                                                                                             
v_column_name varchar;                                                                                                                                            
v_message_text text;                                                                                                                                              
v_exception_detail text;                                                                                                                                          
v_src_id int4;                                                                                                                                                    
                                                                                                                                                                  
--记录处理日志相关                                                                                                                                                
v_proc_line_count int4;                                                                                                                                           
v_proc_line_fail_count int4;                                                                                                                                      
v_start_time TIMESTAMP;                                                                                                                                           
v_end_time TIMESTAMP;                                                                                                                                             
begin                                                                                                                                                             
v_proc_line_count:=0;                                                                                                                                             
v_proc_line_fail_count:=0;                                                                                                                                        
v_start_time:=now();   

o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;   
                                                                                                                                           
--遍历 正式 vendor 表,处理关联字段列表如下                                                                                                                        
                                                                                                                                                                  
for v_rc in select * from ""public"".material_custmaster where need_update_id=v_need_update_id    order by id LIMIT v_limit offset v_offset                                                                                           
loop                                                                                                                                                              
			begin 
					--perform proc_update_table_ref('material_custmaster' , 'part_id', 'material_master' , 'part_no', v_rc.id, v_rc.part_no);         
          perform ep_temp_master.proc_update_table_ref('material_custmaster' , 'part_id', 'material_master' , 'part_unique_code', v_rc.id, v_rc.part_no||v_rc.plant_code);          
					perform ep_temp_master.proc_update_table_ref('material_custmaster' , 'plant_id', 'pur_org_data' , 'plant_code', v_rc.id, v_rc.plant_code);                                                                                                                                                  
           
					--复制字段数据到material_master表中
					UPDATE ""public"".material_master M
					SET buy_sell_flag = v_rc.buy_sell_flag,
					 last_buy_flag = v_rc.last_buy_flag,
					 material_group_cn = v_rc.material_group_cn,
					 rma_flag = v_rc.rma_flag,
					 sourcer = v_rc.sourcer,
					 gr_location = v_rc.gr_location,
					 part_status_by_site = v_rc.part_status_by_site
					WHERE
						M . ID = v_rc.part_id;
                                                                                                                                      
				  v_proc_line_count:=v_proc_line_count+1;  
          o_update_count:=o_update_count+1;                                                                                                        
			EXCEPTION                                                                                                                                              
			when OTHERS THEN                                                                                                                                       
           GET STACKED DIAGNOSTICS                                                                                          
                                   v_message_text = MESSAGE_TEXT,                                                                                                 
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                       
          v_table_name:='material_custmaster';                                                                                                                                 
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                  
					v_src_id=v_rc.id;                                                                                                                              
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);    
          v_proc_line_fail_count=v_proc_line_fail_count+1;    
          o_fail_count:=o_fail_count+1;                                                                                                    
      end;                                                                                                                                                        
end loop;                                                                                                                                                         
return;                                                                                                                                                       
                                                                                                                                                                  
                                                                                                                                                                  
end;                                                                                                                                                              
$function$
"
"proc_trans_table_material_description","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_material_description(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                         
                                                                                                                                                                
declare                                                                                                                                                         
v_rc	record;                                                                                                                                                  
v_pre_period_id integer;                                                                                                                                        
v_start_datetime varchar;                                                                                                                                       
v_end_datetime varchar;                                                                                                                                         
v_count_1	integer;                                                                                                                                             
                                                                                                                                                                
--异常捕获信息                                                                                                                                                  
v_table_name varchar;                                                                                                                                           
v_column_name varchar;                                                                                                                                          
v_message_text text;                                                                                                                                            
v_exception_detail text;                                                                                                                                        
v_src_id int4;                                                                                                                                                  
                                                                                                                                                                
--记录处理日志相关                                                                                                                                              
v_proc_line_count int4;                                                                                                                                         
v_proc_line_fail_count int4;                                                                                                                                    
v_start_time TIMESTAMP;                                                                                                                                         
v_end_time TIMESTAMP;                                                                                                                                           
begin                                                                                                                                                           
v_proc_line_count:=0;                                                                                                                                           
v_proc_line_fail_count:=0;                                                                                                                                      
v_start_time:=now();  
o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;                                                                                                                                             
                                                                                                                                                                
--遍历 address 表,数据转移到odoo正式表中                                                                                                                        
for v_rc in select * from ep_temp_master.material_description   order by id LIMIT v_limit offset v_offset                                                                                                                                
loop                                                                                                                                                            
			begin                                                                                                                                                
				 select count(*) into v_count_1 from ""public"".material_description where part_no=v_rc.part_no and plant_code=v_rc.plant_code;                                                          
				 --目标表中不存在相关记录,进行插入操作                                                                                                           
				 if v_count_1=0 THEN  
						INSERT INTO ""public"".material_description (
							part_no,
							language_key,
							part_description,
							part_description1,
							plant_code,
							sap_log_id,
							sap_temp_id
						)
						VALUES
							(
								v_rc.part_no,
								v_rc.language_key,
								v_rc.part_description,
								v_rc.part_description1,
								v_rc.plant_code,
								v_sap_log_id,
								v_rc. ID
							); 
             o_insert_count:=o_insert_count+1;                                                                                                                          
				 end if;                                                                                                                                         
                                                                                                                                                                
				 --目标数据存在,进行更新操作                                                                                                                     
				if v_count_1=1 THEN  
           update ""public"".material_description set 
             		language_key=		v_rc.language_key,
								part_description=v_rc.part_description,
								part_description1=v_rc.part_description1
           where part_no=v_rc.part_no and plant_code=v_rc.plant_code;
           o_update_count:=o_update_count+1;                                                                                                                            
				end if;                                                                                                                                          
				v_proc_line_count:=v_proc_line_count+1;                                                                                                          
			EXCEPTION                                                                                                                                            
			when OTHERS THEN                                                                                                                                     
           GET STACKED DIAGNOSTICS                                                                                             
                                   v_message_text = MESSAGE_TEXT,                                                                                               
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                     
          v_table_name:='material_description';                                                                                                                              
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                
					v_src_id=v_rc.id;                                                                                                                            
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);  
          v_proc_line_fail_count=v_proc_line_fail_count+1; 
          o_fail_count:=o_fail_count+1;                                                                                                     
      end;                                                                                                                                                      
end loop;                                                                                                                                                       
return;                                                                                                                                                 
                                                                                                                                                                
end;                                                                                                                                                            
$function$
"
"proc_trans_table_material_description_ref","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_material_description_ref(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                           
                                                                                                                                                                  
declare                                                                                                                                                           
v_rc	record;                                                                                                                                                    
v_pre_period_id integer;                                                                                                                                          
v_start_datetime varchar;                                                                                                                                         
v_end_datetime varchar;                                                                                                                                           
v_count_1	integer;                                                                                                                                               
                                                                                                                                                                  
--异常捕获信息                                                                                                                                                    
v_table_name varchar;                                                                                                                                             
v_column_name varchar;                                                                                                                                            
v_message_text text;                                                                                                                                              
v_exception_detail text;                                                                                                                                          
v_src_id int4;                                                                                                                                                    
                                                                                                                                                                  
--记录处理日志相关                                                                                                                                                
v_proc_line_count int4;                                                                                                                                           
v_proc_line_fail_count int4;                                                                                                                                      
v_start_time TIMESTAMP;                                                                                                                                           
v_end_time TIMESTAMP;                                                                                                                                             
begin                                                                                                                                                             
v_proc_line_count:=0;                                                                                                                                             
v_proc_line_fail_count:=0;                                                                                                                                        
v_start_time:=now();                      
o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;                                                                                                                           
--遍历 正式 vendor 表,处理关联字段列表如下                                                                                                                        
                                                                                                                                                                  
for v_rc in select * from ""public"".material_description where sap_log_id=v_sap_log_id  order by id LIMIT v_limit offset v_offset                                                                                             
loop                                                                                                                                                              
			begin
          --perform proc_update_table_ref('material_description' , 'part_id', 'material_master' , 'part_unique_code', v_rc.id, v_rc.part_no||v_rc.plant_code);         
					perform ep_temp_master.proc_update_table_ref('material_description' , 'part_id', 'material_master' , 'part_unique_code', v_rc.id, v_rc.part_no||v_rc.plant_code);          
          perform ep_temp_master.proc_update_table_ref('material_description' , 'plant_id', 'pur_org_data' , 'plant_code', v_rc.id, v_rc.plant_code);
          
          --更新字段到material_master表中
          UPDATE public.material_master M
					SET part_description = v_rc.part_description,
					 part_description1 = v_rc.part_description1
					WHERE
						M . ID = v_rc.part_id;      
                                                                                                                        
				  v_proc_line_count:=v_proc_line_count+1; 
          o_update_count:=o_update_count+1;                                                                                                         
			EXCEPTION                                                                                                                                              
			when OTHERS THEN                                                                                                                                       
           GET STACKED DIAGNOSTICS                                                                                            
                                   v_message_text = MESSAGE_TEXT,                                                                                                 
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                       
          v_table_name:='material_description';                                                                                                                                 
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                  
					v_src_id=v_rc.id;                                                                                                                              
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);    
          v_proc_line_fail_count=v_proc_line_fail_count+1;    
          o_fail_count:=o_fail_count+1;                                                                                                    
      end;                                                                                                                                                        
end loop;                                                                                                                                                         
return;                                                                                                                                                       
                                                                                                                                                                  
                                                                                                                                                                  
end;                                                                                                                                                              
$function$
"
"proc_trans_table_material_description_ref_2","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_material_description_ref_2(v_sap_log_id character varying, v_need_update_id integer, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                           
                                                                                                                                                                  
declare                                                                                                                                                           
v_rc	record;                                                                                                                                                    
v_pre_period_id integer;                                                                                                                                          
v_start_datetime varchar;                                                                                                                                         
v_end_datetime varchar;                                                                                                                                           
v_count_1	integer;                                                                                                                                               
                                                                                                                                                                  
--异常捕获信息                                                                                                                                                    
v_table_name varchar;                                                                                                                                             
v_column_name varchar;                                                                                                                                            
v_message_text text;                                                                                                                                              
v_exception_detail text;                                                                                                                                          
v_src_id int4;                                                                                                                                                    
                                                                                                                                                                  
--记录处理日志相关                                                                                                                                                
v_proc_line_count int4;                                                                                                                                           
v_proc_line_fail_count int4;                                                                                                                                      
v_start_time TIMESTAMP;                                                                                                                                           
v_end_time TIMESTAMP;                                                                                                                                             
begin                                                                                                                                                             
v_proc_line_count:=0;                                                                                                                                             
v_proc_line_fail_count:=0;                                                                                                                                        
v_start_time:=now();                      
o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;                                                                                                                           
--遍历 正式 vendor 表,处理关联字段列表如下                                                                                                                        
                                                                                                                                                                  
for v_rc in select * from ""public"".material_description where need_update_id=v_need_update_id  order by id LIMIT v_limit offset v_offset                                                                                             
loop                                                                                                                                                              
			begin
          --perform proc_update_table_ref('material_description' , 'part_id', 'material_master' , 'part_unique_code', v_rc.id, v_rc.part_no||v_rc.plant_code);         
					perform ep_temp_master.proc_update_table_ref('material_description' , 'part_id', 'material_master' , 'part_unique_code', v_rc.id, v_rc.part_no||v_rc.plant_code);          
          perform ep_temp_master.proc_update_table_ref('material_description' , 'plant_id', 'pur_org_data' , 'plant_code', v_rc.id, v_rc.plant_code);
          
          --更新字段到material_master表中
          UPDATE public.material_master M
					SET part_description = v_rc.part_description,
					 part_description1 = v_rc.part_description1
					WHERE
						M . ID = v_rc.part_id;      
                                                                                                                        
				  v_proc_line_count:=v_proc_line_count+1; 
          o_update_count:=o_update_count+1;                                                                                                         
			EXCEPTION                                                                                                                                              
			when OTHERS THEN                                                                                                                                       
           GET STACKED DIAGNOSTICS                                                                                            
                                   v_message_text = MESSAGE_TEXT,                                                                                                 
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                       
          v_table_name:='material_description';                                                                                                                                 
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                  
					v_src_id=v_rc.id;                                                                                                                              
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);    
          v_proc_line_fail_count=v_proc_line_fail_count+1;    
          o_fail_count:=o_fail_count+1;                                                                                                    
      end;                                                                                                                                                        
end loop;                                                                                                                                                         
return;                                                                                                                                                       
                                                                                                                                                                  
                                                                                                                                                                  
end;                                                                                                                                                              
$function$
"
"proc_trans_table_material_division","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_material_division(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                         
                                                                                                                                                                
declare                                                                                                                                                         
v_rc	record;                                                                                                                                                  
v_pre_period_id integer;                                                                                                                                        
v_start_datetime varchar;                                                                                                                                       
v_end_datetime varchar;                                                                                                                                         
v_count_1	integer;                                                                                                                                             
                                                                                                                                                                
--异常捕获信息                                                                                                                                                  
v_table_name varchar;                                                                                                                                           
v_column_name varchar;                                                                                                                                          
v_message_text text;                                                                                                                                            
v_exception_detail text;                                                                                                                                        
v_src_id int4;                                                                                                                                                  
                                                                                                                                                                
--记录处理日志相关                                                                                                                                              
v_proc_line_count int4;                                                                                                                                         
v_proc_line_fail_count int4;                                                                                                                                    
v_start_time TIMESTAMP;                                                                                                                                         
v_end_time TIMESTAMP;                                                                                                                                           
begin                                                                                                                                                           
v_proc_line_count:=0;                                                                                                                                           
v_proc_line_fail_count:=0;                                                                                                                                      
v_start_time:=now();                                                                                                                                            

o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;   
                                                                                                                                                                
--遍历 address 表,数据转移到odoo正式表中                                                                                                                        
for v_rc in select * from ep_temp_master.material_division   order by id LIMIT v_limit offset v_offset                                                                                                                                
loop                                                                                                                                                            
			begin                                                                                                                                                
				 select count(*) into v_count_1 from ""public"".material_division where plant_code = v_rc.plant_code
						AND part_no = v_rc.part_no
						AND division = v_rc.division;                                                            
				 --目标表中不存在相关记录,进行插入操作                                                                                                           
				 if v_count_1=0 THEN
						INSERT INTO ""public"".material_division (
							plant_code,
							part_no,
							division,
							creation_date,
							created_by,
							change_date,
							changed_by,
							deletion_flag,
							sap_log_id,
							sap_temp_id
						)
						VALUES
							(
								v_rc.plant_code,
								v_rc.part_no,
								v_rc.division,
								v_rc.creation_date,
								v_rc.created_by,
								v_rc.change_date,
								v_rc.changed_by,
								v_rc.deletion_flag,
								v_sap_log_id,
								v_rc. ID
							); 
            o_insert_count:=o_insert_count+1;                                                                                                                            
				 end if;                                                                                                                                         
                                                                                                                                                                
				 --目标数据存在,进行更新操作                                                                                                                     
				if v_count_1=1 THEN
						UPDATE ""public"".material_division
						SET creation_date = v_rc.creation_date,
						 created_by = v_rc.created_by,
						 change_date = v_rc.change_date,
						 changed_by = v_rc.changed_by,
						 deletion_flag = v_rc.deletion_flag,
						 sap_log_id = v_sap_log_id,
						 sap_temp_id = v_rc. ID
						WHERE
							plant_code = v_rc.plant_code
						AND part_no = v_rc.part_no
						AND division = v_rc.division;   
           o_update_count:=o_update_count+1;                                                                                                                           
				end if;                                                                                                                                          
				v_proc_line_count:=v_proc_line_count+1;                                                                                                          
			EXCEPTION                                                                                                                                            
			when OTHERS THEN                                                                                                                                     
           GET STACKED DIAGNOSTICS                                                                                                
                                   v_message_text = MESSAGE_TEXT,                                                                                               
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                     
          v_table_name:='material_division';                                                                                                                              
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                
					v_src_id=v_rc.id;                                                                                                                            
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);  
          v_proc_line_fail_count=v_proc_line_fail_count+1;        
          o_fail_count:=o_fail_count+1;                                                                                              
      end;                                                                                                                                                      
end loop;                                                                                                                                                       
return;                                                                                                                                                   
                                                                                                                                                                
end;                                                                                                                                                            
$function$
"
"proc_trans_table_material_division_ref","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_material_division_ref(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                           
                                                                                                                                                                  
declare                                                                                                                                                           
v_rc	record;                                                                                                                                                    
v_pre_period_id integer;                                                                                                                                          
v_start_datetime varchar;                                                                                                                                         
v_end_datetime varchar;                                                                                                                                           
v_count_1	integer;                                                                                                                                               
                                                                                                                                                                  
--异常捕获信息                                                                                                                                                    
v_table_name varchar;                                                                                                                                             
v_column_name varchar;                                                                                                                                            
v_message_text text;                                                                                                                                              
v_exception_detail text;                                                                                                                                          
v_src_id int4;                                                                                                                                                    
                                                                                                                                                                  
--记录处理日志相关                                                                                                                                                
v_proc_line_count int4;                                                                                                                                           
v_proc_line_fail_count int4;                                                                                                                                      
v_start_time TIMESTAMP;                                                                                                                                           
v_end_time TIMESTAMP;                                                                                                                                             
begin                                                                                                                                                             
v_proc_line_count:=0;                                                                                                                                             
v_proc_line_fail_count:=0;                                                                                                                                        
v_start_time:=now();          
o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;                                                                                                                                       
--遍历 正式 vendor 表,处理关联字段列表如下                                                                                                                        
/*
    division_id=fields.Many2one('division.code',string='Division Info')
    part_id = fields.Many2one('material.master', 'Part No')
    plant_id = fields.Many2one('vendor.plant', string=""Plant Info"")
*/                                                                                                                                                                  
for v_rc in select * from ""public"".material_division where sap_log_id=v_sap_log_id  order by id LIMIT v_limit offset v_offset                                                                                             
loop                                                                                                                                                              
			begin
			    perform ep_temp_master.proc_update_table_ref('material_division' , 'part_id', 'material_master' , 'part_unique_code', v_rc.id, v_rc.part_no||v_rc.plant_code);          
					perform ep_temp_master.proc_update_table_ref('material_division' , 'plant_id', 'pur_org_data' , 'plant_code', v_rc.id, v_rc.plant_code);                                                                                                                                                  
					perform ep_temp_master.proc_update_table_ref('material_division' , 'division_id', 'division_code' , 'division', v_rc.id, v_rc.division);  

					--复制字段数据到material_master表中
					UPDATE public.material_master M
					SET  division= v_rc.division
					 
					WHERE
						M . ID = v_rc.part_id;
                                                                                                                                                 
				  v_proc_line_count:=v_proc_line_count+1;  
          o_update_count:=o_update_count+1;                                                                                                        
			EXCEPTION                                                                                                                                              
			when OTHERS THEN                                                                                                                                       
           GET STACKED DIAGNOSTICS                                                                                               
                                   v_message_text = MESSAGE_TEXT,                                                                                                 
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                       
          v_table_name:='material_division';                                                                                                                                 
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                  
					v_src_id=v_rc.id;                                                                                                                              
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);    
          v_proc_line_fail_count=v_proc_line_fail_count+1; 
          o_fail_count:=o_fail_count+1;                                                                                                       
      end;                                                                                                                                                        
end loop;                                                                                                                                                         
return;                                                                                                                                                       
                                                                                                                                                                  
                                                                                                                                                                  
end;                                                                                                                                                              
$function$
"
"proc_trans_table_material_division_ref_2","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_material_division_ref_2(v_sap_log_id character varying, v_need_update_id integer, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                           
                                                                                                                                                                  
declare                                                                                                                                                           
v_rc	record;                                                                                                                                                    
v_pre_period_id integer;                                                                                                                                          
v_start_datetime varchar;                                                                                                                                         
v_end_datetime varchar;                                                                                                                                           
v_count_1	integer;                                                                                                                                               
                                                                                                                                                                  
--异常捕获信息                                                                                                                                                    
v_table_name varchar;                                                                                                                                             
v_column_name varchar;                                                                                                                                            
v_message_text text;                                                                                                                                              
v_exception_detail text;                                                                                                                                          
v_src_id int4;                                                                                                                                                    
                                                                                                                                                                  
--记录处理日志相关                                                                                                                                                
v_proc_line_count int4;                                                                                                                                           
v_proc_line_fail_count int4;                                                                                                                                      
v_start_time TIMESTAMP;                                                                                                                                           
v_end_time TIMESTAMP;                                                                                                                                             
begin                                                                                                                                                             
v_proc_line_count:=0;                                                                                                                                             
v_proc_line_fail_count:=0;                                                                                                                                        
v_start_time:=now();          
o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;                                                                                                                                       
--遍历 正式 vendor 表,处理关联字段列表如下                                                                                                                        
/*
    division_id=fields.Many2one('division.code',string='Division Info')
    part_id = fields.Many2one('material.master', 'Part No')
    plant_id = fields.Many2one('vendor.plant', string=""Plant Info"")
*/                                                                                                                                                                  
for v_rc in select * from ""public"".material_division where need_update_id=v_need_update_id  order by id LIMIT v_limit offset v_offset                                                                                             
loop                                                                                                                                                              
			begin
          perform ep_temp_master.proc_update_table_ref('material_division' , 'part_id', 'material_master' , 'part_unique_code', v_rc.id, v_rc.part_no||v_rc.plant_code);          					     
					perform ep_temp_master.proc_update_table_ref('material_division' , 'plant_id', 'pur_org_data' , 'plant_code', v_rc.id, v_rc.plant_code);                                                                                                                                                  
					perform ep_temp_master.proc_update_table_ref('material_division' , 'division_id', 'division_code' , 'division', v_rc.id, v_rc.division);  

					--复制字段数据到material_master表中
					UPDATE public.material_master M
					SET  division= v_rc.division
					 
					WHERE
						M . ID = v_rc.part_id;
                                                                                                                                                 
				  v_proc_line_count:=v_proc_line_count+1;  
          o_update_count:=o_update_count+1;                                                                                                        
			EXCEPTION                                                                                                                                              
			when OTHERS THEN                                                                                                                                       
           GET STACKED DIAGNOSTICS                                                                                               
                                   v_message_text = MESSAGE_TEXT,                                                                                                 
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                       
          v_table_name:='material_division';                                                                                                                                 
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                  
					v_src_id=v_rc.id;                                                                                                                              
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);    
          v_proc_line_fail_count=v_proc_line_fail_count+1; 
          o_fail_count:=o_fail_count+1;                                                                                                       
      end;                                                                                                                                                        
end loop;                                                                                                                                                         
return;                                                                                                                                                       
                                                                                                                                                                  
                                                                                                                                                                  
end;                                                                                                                                                              
$function$
"
"proc_trans_table_material_group","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_material_group(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                         
                                                                                                                                                                
declare                                                                                                                                                         
v_rc	record;                                                                                                                                                  
v_pre_period_id integer;                                                                                                                                        
v_start_datetime varchar;                                                                                                                                       
v_end_datetime varchar;                                                                                                                                         
v_count_1	integer;                                                                                                                                             
                                                                                                                                                                
--异常捕获信息                                                                                                                                                  
v_table_name varchar;                                                                                                                                           
v_column_name varchar;                                                                                                                                          
v_message_text text;                                                                                                                                            
v_exception_detail text;                                                                                                                                        
v_src_id int4;                                                                                                                                                  
                                                                                                                                                                
--记录处理日志相关                                                                                                                                              
v_proc_line_count int4;                                                                                                                                         
v_proc_line_fail_count int4;                                                                                                                                    
v_start_time TIMESTAMP;                                                                                                                                         
v_end_time TIMESTAMP;                                                                                                                                           
begin                                                                                                                                                           
v_proc_line_count:=0;                                                                                                                                           
v_proc_line_fail_count:=0;                                                                                                                                      
v_start_time:=now();                                                                                                                                            
o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;                                                                                                                                                                   
--遍历 address 表,数据转移到odoo正式表中                                                                                                                        
for v_rc in select * from ep_temp_master.material_group    order by id LIMIT v_limit offset v_offset                                                                                                                               
loop                                                                                                                                                            
			begin                                                                                                                                                
				 select count(*) into v_count_1 from ""public"".material_group where material_group=v_rc.material_group;                                                          
				 --目标表中不存在相关记录,进行插入操作                                                                                                           
				 if v_count_1=0 THEN
						INSERT INTO ""public"".material_group (
							material_group,
							description,
							sap_log_id,
							sap_temp_id
						)
						VALUES
							(
								v_rc.material_group,
								v_rc.description,
								v_sap_log_id,
								v_rc. ID
							);
            o_insert_count:=o_insert_count+1;
				 end if;                                                                                                                                         
                                                                                                                                                                
				 --目标数据存在,进行更新操作                                                                                                                     
				if v_count_1=1 THEN  
						UPDATE ""public"".material_group
						SET material_group = v_rc.material_group,
						 description = v_rc.description,
						 sap_log_id = v_sap_log_id,
						 sap_temp_id = v_rc. ID
						WHERE
							material_group = v_rc.material_group; 
            o_update_count:=o_update_count+1;                                                                                                                           
				end if;                                                                                                                                          
				v_proc_line_count:=v_proc_line_count+1;                                                                                                          
			EXCEPTION                                                                                                                                            
			when OTHERS THEN                                                                                                                                     
           GET STACKED DIAGNOSTICS                                                                                              
                                   v_message_text = MESSAGE_TEXT,                                                                                               
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                     
          v_table_name:='material_group';                                                                                                                              
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                
					v_src_id=v_rc.id;                                                                                                                            
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);  
          v_proc_line_fail_count=v_proc_line_fail_count+1;     
          o_fail_count:=o_fail_count+1;                                                                                                 
      end;                                                                                                                                                      
end loop;                                                                                                                                                       
RETURN;                                                                                                                                                     
                                                                                                                                                                
end;                                                                                                                                                            
$function$
"
"proc_trans_table_material_group_ref","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_material_group_ref(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                           
                                                                                                                                                                  
declare                                                                                                                                                           
v_rc	record;                                                                                                                                                    
v_pre_period_id integer;                                                                                                                                          
v_start_datetime varchar;                                                                                                                                         
v_end_datetime varchar;                                                                                                                                           
v_count_1	integer;                                                                                                                                               
                                                                                                                                                                  
--异常捕获信息                                                                                                                                                    
v_table_name varchar;                                                                                                                                             
v_column_name varchar;                                                                                                                                            
v_message_text text;                                                                                                                                              
v_exception_detail text;                                                                                                                                          
v_src_id int4;                                                                                                                                                    
                                                                                                                                                                  
--记录处理日志相关                                                                                                                                                
v_proc_line_count int4;                                                                                                                                           
v_proc_line_fail_count int4;                                                                                                                                      
v_start_time TIMESTAMP;                                                                                                                                           
v_end_time TIMESTAMP;                                                                                                                                             
begin                                                                                                                                                             
v_proc_line_count:=0;                                                                                                                                             
v_proc_line_fail_count:=0;                                                                                                                                        
v_start_time:=now();   
o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;                                                                                                                                              
--遍历 正式 vendor 表,处理关联字段列表如下                                                                                                                        
                                                                                                                                                                  
for v_rc in select * from ""public"".material_group where sap_log_id=v_sap_log_id  order by id LIMIT v_limit offset v_offset                                                                                             
loop                                                                                                                                                              
			begin                                                                                                                                                  
				  v_proc_line_count:=v_proc_line_count+1;                                                                                                          
			EXCEPTION                                                                                                                                              
			when OTHERS THEN                                                                                                                                       
           GET STACKED DIAGNOSTICS                                                                                               
                                   v_message_text = MESSAGE_TEXT,                                                                                                 
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                       
          v_table_name:='material_group';                                                                                                                                 
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                  
					v_src_id=v_rc.id;                                                                                                                              
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);    
          v_proc_line_fail_count=v_proc_line_fail_count+1;   
          o_fail_count:=o_fail_count+1;
                                                                                                     
      end;                                                                                                                                                        
end loop;                                                                                                                                                         
                                                                                                                                                      
  return ;                                                                                                                                                       
                                                                                                                                                                  
                                                                                                                                                                  
end;                                                                                                                                                              
$function$
"
"proc_trans_table_material_group_ref_2","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_material_group_ref_2(v_sap_log_id character varying, v_need_update_id integer, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                           
                                                                                                                                                                  
declare                                                                                                                                                           
v_rc	record;                                                                                                                                                    
v_pre_period_id integer;                                                                                                                                          
v_start_datetime varchar;                                                                                                                                         
v_end_datetime varchar;                                                                                                                                           
v_count_1	integer;                                                                                                                                               
                                                                                                                                                                  
--异常捕获信息                                                                                                                                                    
v_table_name varchar;                                                                                                                                             
v_column_name varchar;                                                                                                                                            
v_message_text text;                                                                                                                                              
v_exception_detail text;                                                                                                                                          
v_src_id int4;                                                                                                                                                    
                                                                                                                                                                  
--记录处理日志相关                                                                                                                                                
v_proc_line_count int4;                                                                                                                                           
v_proc_line_fail_count int4;                                                                                                                                      
v_start_time TIMESTAMP;                                                                                                                                           
v_end_time TIMESTAMP;                                                                                                                                             
begin                                                                                                                                                             
v_proc_line_count:=0;                                                                                                                                             
v_proc_line_fail_count:=0;                                                                                                                                        
v_start_time:=now();   
o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;                                                                                                                                              
--遍历 正式 vendor 表,处理关联字段列表如下                                                                                                                        
                                                                                                                                                                  
for v_rc in select * from ""public"".material_group where need_update_id=v_need_update_id  order by id LIMIT v_limit offset v_offset                                                                                             
loop                                                                                                                                                              
			begin                                                                                                                                                  
				  v_proc_line_count:=v_proc_line_count+1;                                                                                                          
			EXCEPTION                                                                                                                                              
			when OTHERS THEN                                                                                                                                       
           GET STACKED DIAGNOSTICS                                                                                               
                                   v_message_text = MESSAGE_TEXT,                                                                                                 
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                       
          v_table_name:='material_group';                                                                                                                                 
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                  
					v_src_id=v_rc.id;                                                                                                                              
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);    
          v_proc_line_fail_count=v_proc_line_fail_count+1;   
          o_fail_count:=o_fail_count+1;
                                                                                                     
      end;                                                                                                                                                        
end loop;                                                                                                                                                         
                                                                                                                                                      
  return ;                                                                                                                                                       
                                                                                                                                                                  
                                                                                                                                                                  
end;                                                                                                                                                              
$function$
"
"proc_trans_table_material_map","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_material_map(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                         
                                                                                                                                                                
declare                                                                                                                                                         
v_rc	record;                                                                                                                                                  
v_pre_period_id integer;                                                                                                                                        
v_start_datetime varchar;                                                                                                                                       
v_end_datetime varchar;                                                                                                                                         
v_count_1	integer;                                                                                                                                             
                                                                                                                                                                
--异常捕获信息                                                                                                                                                  
v_table_name varchar;                                                                                                                                           
v_column_name varchar;                                                                                                                                          
v_message_text text;                                                                                                                                            
v_exception_detail text;                                                                                                                                        
v_src_id int4;                                                                                                                                                  
                                                                                                                                                                
--记录处理日志相关                                                                                                                                              
v_proc_line_count int4;                                                                                                                                         
v_proc_line_fail_count int4;                                                                                                                                    
v_start_time TIMESTAMP;                                                                                                                                         
v_end_time TIMESTAMP;                                                                                                                                           
begin                                                                                                                                                           
v_proc_line_count:=0;                                                                                                                                           
v_proc_line_fail_count:=0;                                                                                                                                      
v_start_time:=now();                                                                                                                                            
o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;                                                                                                                                                                   
--遍历 address 表,数据转移到odoo正式表中                                                                                                                        
for v_rc in select * from ep_temp_master.material_map   order by id LIMIT v_limit offset v_offset                                                                                                                                
loop                                                                                                                                                            
			begin                                                                                                                                                
				 select count(*) into v_count_1 from ""public"".material_map where part_no=v_rc.part_no and plant_code=v_rc.plant_code;                                                          
				 --目标表中不存在相关记录,进行插入操作                                                                                                           
				 if v_count_1=0 THEN 
						INSERT INTO ""public"".material_map (
							part_no,
							price,
							price_unit,
							plant_code,
							sap_log_id,
							sap_temp_id
						)
						VALUES
							(
								v_rc.part_no,
								v_rc.price,
								v_rc.price_unit,
								v_rc.plant_code,
								v_sap_log_id,
								v_rc. ID
							); 
             o_insert_count:=o_insert_count+1;                                                                                                                           
				 end if;                                                                                                                                         
                                                                                                                                                                
				 --目标数据存在,进行更新操作                                                                                                                     
				if v_count_1=1 THEN  
						UPDATE ""public"".material_map
						SET price = v_rc.price,
						 price_unit = v_rc.price_unit,
						 plant_code = v_rc.plant_code,
						 sap_log_id = v_sap_log_id,
						 sap_temp_id = v_rc. ID
						WHERE
							part_no = v_rc.part_no and plant_code=v_rc.plant_code; 
           o_update_count:=o_update_count+1;                                                                                                                           
				end if;                                                                                                                                          
				v_proc_line_count:=v_proc_line_count+1;                                                                                                          
			EXCEPTION                                                                                                                                            
			when OTHERS THEN                                                                                                                                     
           GET STACKED DIAGNOSTICS                                                                                                 
                                   v_message_text = MESSAGE_TEXT,                                                                                               
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                     
          v_table_name:='material_map';                                                                                                                              
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                
					v_src_id=v_rc.id;                                                                                                                            
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);  
          v_proc_line_fail_count=v_proc_line_fail_count+1;  
          o_fail_count:=o_fail_count+1;                                                                                                    
      end;                                                                                                                                                      
end loop;                                                                                                                                                       
return;                                                                                                                                                     
                                                                                                                                                                
end;                                                                                                                                                            
$function$
"
"proc_trans_table_material_map_ref","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_material_map_ref(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                           
                                                                                                                                                                  
declare                                                                                                                                                           
v_rc	record;                                                                                                                                                    
v_pre_period_id integer;                                                                                                                                          
v_start_datetime varchar;                                                                                                                                         
v_end_datetime varchar;                                                                                                                                           
v_count_1	integer;                                                                                                                                               
                                                                                                                                                                  
--异常捕获信息                                                                                                                                                    
v_table_name varchar;                                                                                                                                             
v_column_name varchar;                                                                                                                                            
v_message_text text;                                                                                                                                              
v_exception_detail text;                                                                                                                                          
v_src_id int4;                                                                                                                                                    
                                                                                                                                                                  
--记录处理日志相关                                                                                                                                                
v_proc_line_count int4;                                                                                                                                           
v_proc_line_fail_count int4;                                                                                                                                      
v_start_time TIMESTAMP;                                                                                                                                           
v_end_time TIMESTAMP;                                                                                                                                             
begin                                                                                                                                                             
v_proc_line_count:=0;                                                                                                                                             
v_proc_line_fail_count:=0;                                                                                                                                        
v_start_time:=now();                                                                                                                                              
--遍历 正式 vendor 表,处理关联字段列表如下                                                                                                                        
o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;   
                                                                                                                                                                  
for v_rc in select * from ""public"".material_map where sap_log_id=v_sap_log_id order by id LIMIT v_limit offset v_offset                                                                                              
loop                                                                                                                                                              
			begin 
					--perform proc_update_table_ref('material_map' , 'part_id', 'material_master' , 'part_no', v_rc.id, v_rc.part_no); 
					perform ep_temp_master.proc_update_table_ref('material_map' , 'part_id', 'material_master' , 'part_unique_code', v_rc.id, v_rc.part_no||v_rc.plant_code);          
					perform ep_temp_master.proc_update_table_ref('material_map' , 'plant_id', 'pur_org_data' , 'plant_code', v_rc.id, v_rc.plant_code);                                                                                                                                                                                                                                                                                                      
				  v_proc_line_count:=v_proc_line_count+1;   
          o_update_count:=o_update_count+1;                                                                                                       
			EXCEPTION                                                                                                                                              
			when OTHERS THEN                                                                                                                                       
           GET STACKED DIAGNOSTICS                                                                                               
                                   v_message_text = MESSAGE_TEXT,                                                                                                 
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                       
          v_table_name:='material_map';                                                                                                                                 
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                  
					v_src_id=v_rc.id;                                                                                                                              
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);    
          v_proc_line_fail_count=v_proc_line_fail_count+1;     
          o_fail_count:=o_fail_count+1;                                                                                                   
      end;                                                                                                                                                        
end loop;                                                                                                                                                         
                                                                                                                                                        
  return ;                                                                                                                                                       
                                                                                                                                                                  
                                                                                                                                                                  
end;                                                                                                                                                              
$function$
"
"proc_trans_table_material_map_ref_2","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_material_map_ref_2(v_sap_log_id character varying, v_need_update_id integer, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                           
                                                                                                                                                                  
declare                                                                                                                                                           
v_rc	record;                                                                                                                                                    
v_pre_period_id integer;                                                                                                                                          
v_start_datetime varchar;                                                                                                                                         
v_end_datetime varchar;                                                                                                                                           
v_count_1	integer;                                                                                                                                               
                                                                                                                                                                  
--异常捕获信息                                                                                                                                                    
v_table_name varchar;                                                                                                                                             
v_column_name varchar;                                                                                                                                            
v_message_text text;                                                                                                                                              
v_exception_detail text;                                                                                                                                          
v_src_id int4;                                                                                                                                                    
                                                                                                                                                                  
--记录处理日志相关                                                                                                                                                
v_proc_line_count int4;                                                                                                                                           
v_proc_line_fail_count int4;                                                                                                                                      
v_start_time TIMESTAMP;                                                                                                                                           
v_end_time TIMESTAMP;                                                                                                                                             
begin                                                                                                                                                             
v_proc_line_count:=0;                                                                                                                                             
v_proc_line_fail_count:=0;                                                                                                                                        
v_start_time:=now();                                                                                                                                              
--遍历 正式 vendor 表,处理关联字段列表如下                                                                                                                        
o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;   
                                                                                                                                                                  
for v_rc in select * from ""public"".material_map where need_update_id=v_need_update_id order by id LIMIT v_limit offset v_offset                                                                                              
loop                                                                                                                                                              
			begin 
					--perform proc_update_table_ref('material_map' , 'part_id', 'material_master' , 'part_no', v_rc.id, v_rc.part_no); 
					perform ep_temp_master.proc_update_table_ref('material_map' , 'part_id', 'material_master' , 'part_unique_code', v_rc.id, v_rc.part_no||v_rc.plant_code);          
					perform ep_temp_master.proc_update_table_ref('material_map' , 'plant_id', 'pur_org_data' , 'plant_code', v_rc.id, v_rc.plant_code);                                                                                                                                                                                                                                                                                                      
				  v_proc_line_count:=v_proc_line_count+1;   
          o_update_count:=o_update_count+1;                                                                                                       
			EXCEPTION                                                                                                                                              
			when OTHERS THEN                                                                                                                                       
           GET STACKED DIAGNOSTICS                                                                                               
                                   v_message_text = MESSAGE_TEXT,                                                                                                 
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                       
          v_table_name:='material_map';                                                                                                                                 
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                  
					v_src_id=v_rc.id;                                                                                                                              
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);    
          v_proc_line_fail_count=v_proc_line_fail_count+1;     
          o_fail_count:=o_fail_count+1;                                                                                                   
      end;                                                                                                                                                        
end loop;                                                                                                                                                         
                                                                                                                                                        
  return ;                                                                                                                                                       
                                                                                                                                                                  
                                                                                                                                                                  
end;                                                                                                                                                              
$function$
"
"proc_trans_table_material_master","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_material_master(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                         
                                                                                                                                                                
declare                                                                                                                                                         
v_rc	record;                                                                                                                                                  
v_pre_period_id integer;                                                                                                                                        
v_start_datetime varchar;                                                                                                                                       
v_end_datetime varchar;                                                                                                                                         
v_count_1	integer;                                                                                                                                             
                                                                                                                                                                
--异常捕获信息                                                                                                                                                  
v_table_name varchar;                                                                                                                                           
v_column_name varchar;                                                                                                                                          
v_message_text text;                                                                                                                                            
v_exception_detail text;                                                                                                                                        
v_src_id int4;                                                                                                                                                  
                                                                                                                                                                
--记录处理日志相关                                                                                                                                              
v_proc_line_count int4;                                                                                                                                         
v_proc_line_fail_count int4;                                                                                                                                    
v_start_time TIMESTAMP;                                                                                                                                         
v_end_time TIMESTAMP;                                                                                                                                           
begin                                                                                                                                                           
v_proc_line_count:=0;                                                                                                                                           
v_proc_line_fail_count:=0;                                                                                                                                      
v_start_time:=now();                                                                                                                                            
o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;                                                                                                                                                                   
--遍历 address 表,数据转移到odoo正式表中                                                                                                                        
for v_rc in select * from ep_temp_master.material_master order by id LIMIT v_limit offset v_offset                                                                                                                                  
loop                                                                                                                                                            
			begin                                                                                                                                                
				 select count(*) into v_count_1 from ""public"".material_master where part_no=v_rc.part_no and plant_code=v_rc.plant_code;                                                          
				 --目标表中不存在相关记录,进行插入操作                                                                                                           
				 if v_count_1=0 THEN    
						INSERT INTO ""public"".material_master (
							part_no,
							creation_date,
							change_date,
							part_type,
							material_group,
							unit,
							order_uom,
							division,
							material_category,
							plant_code,
							part_unique_code,
							sap_log_id,
							sap_temp_id
						)
						VALUES
							(
								v_rc.part_no,
								v_rc.creation_date,
								v_rc.change_date,
								v_rc.part_type,
								v_rc.material_group,
								v_rc.unit,
								v_rc.order_uom,
								v_rc.division,
								v_rc.material_category,
								v_rc.plant_code,
								v_rc.part_no||v_rc.plant_code,
								v_sap_log_id,
								v_rc. ID
							);
            o_insert_count:=o_insert_count+1;                                                                                                                         
				 end if;                                                                                                                                         
                                                                                                                                                                
				 --目标数据存在,进行更新操作                                                                                                                     
				if v_count_1=1 THEN  
						UPDATE ""public"".material_master
						SET creation_date = v_rc.creation_date,
						 change_date = v_rc.change_date,
						 part_type = v_rc.part_type,
						 material_group = v_rc.material_group,
						 unit = v_rc.unit,
						 order_uom = v_rc.order_uom,
						 division = v_rc.division,
						 material_category = v_rc.material_category,
						 plant_code = v_rc.plant_code,
						 part_unique_code=v_rc.part_no||v_rc.plant_code,
						 sap_log_id = v_sap_log_id,
						 sap_temp_id = v_rc. ID
						WHERE
							part_no = v_rc.part_no and plant_code=v_rc.plant_code; 
            o_update_count:=o_update_count+1;                                                                                                                           
				end if;                                                                                                                                          
				v_proc_line_count:=v_proc_line_count+1;

                                                                                                      
			EXCEPTION                                                                                                                                            
			when OTHERS THEN                                                                                                                                     
           GET STACKED DIAGNOSTICS                                                                                                 
                                   v_message_text = MESSAGE_TEXT,                                                                                               
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                     
          v_table_name:='material_master';                                                                                                                              
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                
					v_src_id=v_rc.id;                                                                                                                            
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);  
          v_proc_line_fail_count=v_proc_line_fail_count+1;   
          o_fail_count:=o_fail_count+1;                                                                                                   
      end;                                                                                                                                                      
end loop;                                                                                                                                                       
return;                                                                                                                                                   
                                                                                                                                                                
end;                                                                                                                                                            
$function$
"
"proc_trans_table_material_master_ref","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_material_master_ref(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                           
                                                                                                                                                                  
declare                                                                                                                                                           
v_rc	record;                                                                                                                                                    
v_pre_period_id integer;                                                                                                                                          
v_start_datetime varchar;                                                                                                                                         
v_end_datetime varchar;                                                                                                                                           
v_count_1	integer;                                                                                                                                               
                                                                                                                                                                  
--异常捕获信息                                                                                                                                                    
v_table_name varchar;                                                                                                                                             
v_column_name varchar;                                                                                                                                            
v_message_text text;                                                                                                                                              
v_exception_detail text;                                                                                                                                          
v_src_id int4;                                                                                                                                                    
                                                                                                                                                                  
--记录处理日志相关                                                                                                                                                
v_proc_line_count int4;                                                                                                                                           
v_proc_line_fail_count int4;                                                                                                                                      
v_start_time TIMESTAMP;                                                                                                                                           
v_end_time TIMESTAMP;                                                                                                                                             
begin                                                                                                                                                             
v_proc_line_count:=0;                                                                                                                                             
v_proc_line_fail_count:=0;                                                                                                                                        
v_start_time:=now();     
o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;                                                                                                                                            
--遍历 正式 vendor 表,处理关联字段列表如下                                                                                                                        
                                                                                                                                                                  
for v_rc in select * from ""public"".material_master where sap_log_id=v_sap_log_id   order by id LIMIT v_limit offset v_offset                                                                                            
loop                                                                                                                                                              
			begin
					perform ep_temp_master.proc_update_table_ref('material_master' , 'division_id', 'division_code' , 'division', v_rc.id, v_rc.division); 
					perform ep_temp_master.proc_update_table_ref('material_master' , 'plant_id', 'pur_org_data' , 'plant_code', v_rc.id, v_rc.plant_code);
					perform ep_temp_master.proc_update_table_ref('material_master' , 'buyer_code_id', 'buyer_code' , 'buyer_erp_id', v_rc.id, v_rc.buyer_erp_id);
          perform ep_temp_master.proc_update_table_ref('material_master' , 'material_group_id', 'material_group' , 'material_group', v_rc.id, v_rc.material_group);                                                                                                                                                      
				  v_proc_line_count:=v_proc_line_count+1;      
          o_update_count:=o_update_count+1;                                                                                                    
			EXCEPTION                                                                                                                                              
			when OTHERS THEN                                                                                                                                       
           GET STACKED DIAGNOSTICS                                                                                                 
                                   v_message_text = MESSAGE_TEXT,                                                                                                 
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                       
          v_table_name:='material_master';                                                                                                                                 
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                  
					v_src_id=v_rc.id;                                                                                                                              
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);    
          v_proc_line_fail_count=v_proc_line_fail_count+1;
          o_fail_count:=o_fail_count+1;                                                                                                        
      end;                                                                                                                                                        
end loop;                                                                                                                                                         
                                                                                                                                                      
  return ;                                                                                                                                                       
                                                                                                                                                                  
                                                                                                                                                                  
end;                                                                                                                                                              
$function$
"
"proc_trans_table_material_master_ref_2","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_material_master_ref_2(v_sap_log_id character varying, v_need_update_id integer, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                           
                                                                                                                                                                  
declare                                                                                                                                                           
v_rc	record;                                                                                                                                                    
v_pre_period_id integer;                                                                                                                                          
v_start_datetime varchar;                                                                                                                                         
v_end_datetime varchar;                                                                                                                                           
v_count_1	integer;                                                                                                                                               
                                                                                                                                                                  
--异常捕获信息                                                                                                                                                    
v_table_name varchar;                                                                                                                                             
v_column_name varchar;                                                                                                                                            
v_message_text text;                                                                                                                                              
v_exception_detail text;                                                                                                                                          
v_src_id int4;                                                                                                                                                    
                                                                                                                                                                  
--记录处理日志相关                                                                                                                                                
v_proc_line_count int4;                                                                                                                                           
v_proc_line_fail_count int4;                                                                                                                                      
v_start_time TIMESTAMP;                                                                                                                                           
v_end_time TIMESTAMP;                                                                                                                                             
begin                                                                                                                                                             
v_proc_line_count:=0;                                                                                                                                             
v_proc_line_fail_count:=0;                                                                                                                                        
v_start_time:=now();     
o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;                                                                                                                                            
--遍历 正式 vendor 表,处理关联字段列表如下                                                                                                                        
                                                                                                                                                                  
for v_rc in select * from ""public"".material_master where need_update_id=v_need_update_id   order by id LIMIT v_limit offset v_offset                                                                                            
loop                                                                                                                                                              
			begin
					perform ep_temp_master.proc_update_table_ref('material_master' , 'division_id', 'division_code' , 'division', v_rc.id, v_rc.division); 
					perform ep_temp_master.proc_update_table_ref('material_master' , 'plant_id', 'pur_org_data' , 'plant_code', v_rc.id, v_rc.plant_code);
          perform ep_temp_master.proc_update_table_ref('material_master' , 'buyer_code_id', 'buyer_code' , 'buyer_erp_id', v_rc.id, v_rc.buyer_erp_id);
          perform ep_temp_master.proc_update_table_ref('material_master' , 'material_group_id', 'material_group' , 'material_group', v_rc.id, v_rc.material_group);                                                                                                                                                         
				  v_proc_line_count:=v_proc_line_count+1;      
          o_update_count:=o_update_count+1;                                                                                                    
			EXCEPTION                                                                                                                                              
			when OTHERS THEN                                                                                                                                       
           GET STACKED DIAGNOSTICS                                                                                                 
                                   v_message_text = MESSAGE_TEXT,                                                                                                 
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                       
          v_table_name:='material_master';                                                                                                                                 
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                  
					v_src_id=v_rc.id;                                                                                                                              
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);    
          v_proc_line_fail_count=v_proc_line_fail_count+1;
          o_fail_count:=o_fail_count+1;                                                                                                        
      end;                                                                                                                                                        
end loop;                                                                                                                                                         
                                                                                                                                                      
  return ;                                                                                                                                                       
                                                                                                                                                                  
                                                                                                                                                                  
end;                                                                                                                                                              
$function$
"
"proc_trans_table_material_plant","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_material_plant(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                         
                                                                                                                                                                
declare                                                                                                                                                         
v_rc	record;                                                                                                                                                  
v_pre_period_id integer;                                                                                                                                        
v_start_datetime varchar;                                                                                                                                       
v_end_datetime varchar;                                                                                                                                         
v_count_1	integer;                                                                                                                                             
                                                                                                                                                                
--异常捕获信息                                                                                                                                                  
v_table_name varchar;                                                                                                                                           
v_column_name varchar;                                                                                                                                          
v_message_text text;                                                                                                                                            
v_exception_detail text;                                                                                                                                        
v_src_id int4;                                                                                                                                                  
                                                                                                                                                                
--记录处理日志相关                                                                                                                                              
v_proc_line_count int4;                                                                                                                                         
v_proc_line_fail_count int4;                                                                                                                                    
v_start_time TIMESTAMP;                                                                                                                                         
v_end_time TIMESTAMP;                                                                                                                                           
begin                                                                                                                                                           
v_proc_line_count:=0;                                                                                                                                           
v_proc_line_fail_count:=0;                                                                                                                                      
v_start_time:=now(); 

o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;                                                                                                                                                                 
                                                                                                                                                                
--遍历 address 表,数据转移到odoo正式表中                                                                                                                        
for v_rc in select * from ep_temp_master.material_plant order by id LIMIT v_limit offset v_offset                                                                                                                              
loop                                                                                                                                                            
			begin                                                                                                                                                
				 select count(*) into v_count_1 from ""public"".material_plant where part_no=v_rc.part_no 
         and plant_code=v_rc.plant_code;                                                          
				 --目标表中不存在相关记录,进行插入操作                                                                                                           
				 if v_count_1=0 THEN 
                 
						INSERT INTO ""public"".material_plant (
							part_no,
							plant_code,
							part_status,
							abc_indicator,
							critical_part_flag,
							buyer_erp_id,
							planner_erp_id,
							ltime,
							procurement_type,
							record_point,
							safety_stock,
							maximum_stock_level,
							quota_arrangement_usage,
							auto_po_allowed,
							commodity_code,
							issue_storage_location,
							special_procurement_type,
							post_to_insp_stock,
							deletion_flag,
							rounding_value,
							gr_days,
							sap_log_id,
							sap_temp_id
						)
						VALUES
							(
								v_rc.part_no,
								v_rc.plant_code,
								v_rc.part_status,
								v_rc.abc_indicator,
								v_rc.critical_part_flag,
								v_rc.buyer_erp_id,
								v_rc.planner_erp_id,
								v_rc.ltime,
								v_rc.procurement_type,
								v_rc.record_point,
								v_rc.safety_stock,
								v_rc.maximum_stock_level,
								v_rc.quota_arrangement_usage,
								v_rc.auto_po_allowed,
								v_rc.commodity_code,
								v_rc.issue_storage_location,
								v_rc.special_procurement_type,
								v_rc.post_to_insp_stock,
								v_rc.deletion_flag,
								v_rc.rounding_value,
								v_rc.gr_days,
								v_sap_log_id,
								v_rc. ID
							);   
              o_insert_count:=o_insert_count+1;                                                                                                                
				 end if;                                                                                                                                         
                                                                                                                                                                
				 --目标数据存在,进行更新操作                                                                                                                     
				if v_count_1=1 THEN  
						UPDATE ""public"".material_plant
						SET plant_code = v_rc.plant_code,
						 part_status = v_rc.part_status,
						 abc_indicator = v_rc.abc_indicator,
						 critical_part_flag = v_rc.critical_part_flag,
						 buyer_erp_id = v_rc.buyer_erp_id,
						 planner_erp_id = v_rc.planner_erp_id,
						 ltime = v_rc.ltime,
						 procurement_type = v_rc.procurement_type,
						 record_point = v_rc.record_point,
						 safety_stock = v_rc.safety_stock,
						 maximum_stock_level = v_rc.maximum_stock_level,
						 quota_arrangement_usage = v_rc.quota_arrangement_usage,
						 auto_po_allowed = v_rc.auto_po_allowed,
						 commodity_code = v_rc.commodity_code,
						 issue_storage_location = v_rc.issue_storage_location,
						 special_procurement_type = v_rc.special_procurement_type,
						 post_to_insp_stock = v_rc.post_to_insp_stock,
						 deletion_flag = v_rc.deletion_flag,
						 rounding_value = v_rc.rounding_value,
						 gr_days = v_rc.gr_days,
						 sap_log_id = v_sap_log_id,
						 sap_temp_id = v_rc. ID
						WHERE
							part_no = v_rc.part_no and plant_code=v_rc.plant_code;  
            o_update_count:=o_update_count+1;                                                                                                                          
				end if;                                                                                                                                          
				v_proc_line_count:=v_proc_line_count+1;  
                                                                                                                      
			EXCEPTION                                                                                                                                            
			when OTHERS THEN                                                                                                                                     
           GET STACKED DIAGNOSTICS                                                                                                  
                                   v_message_text = MESSAGE_TEXT,                                                                                               
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                     
          v_table_name:='material_plant';                                                                                                                              
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                
					v_src_id=v_rc.id;                                                                                                                            
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);  
          v_proc_line_fail_count=v_proc_line_fail_count+1;  
          o_fail_count:=o_fail_count+1;                                                                                                    
      end;   
                                                                                                                                                      
end loop; 
                                                                                                                                                                                                                                                                                                                                                                                                                                                             
  return ;                                                                                                                          
                                                                                                                                                                
end;                                                                                                                                                            
$function$
"
"proc_trans_table_material_plant_ref","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_material_plant_ref(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                           
                                                                                                                                                                  
declare                                                                                                                                                           
v_rc	record;                                                                                                                                                    
v_pre_period_id integer;                                                                                                                                          
v_start_datetime varchar;                                                                                                                                         
v_end_datetime varchar;                                                                                                                                           
v_count_1	integer;                                                                                                                                               
                                                                                                                                                                  
--异常捕获信息                                                                                                                                                    
v_table_name varchar;                                                                                                                                             
v_column_name varchar;                                                                                                                                            
v_message_text text;                                                                                                                                              
v_exception_detail text;                                                                                                                                          
v_src_id int4;                                                                                                                                                    
                                                                                                                                                                  
--记录处理日志相关                                                                                                                                                
v_proc_line_count int4;                                                                                                                                           
v_proc_line_fail_count int4;                                                                                                                                      
v_start_time TIMESTAMP;                                                                                                                                           
v_end_time TIMESTAMP;                                                                                                                                             
begin                                                                                                                                                             
v_proc_line_count:=0;                                                                                                                                             
v_proc_line_fail_count:=0;                                                                                                                                        
v_start_time:=now();                     

o_update_count:=0;
o_insert_count:=0;
o_fail_count:=0;                                                                                                                         
--遍历 正式 vendor 表,处理关联字段列表如下                                                                                                                        
                                                                                                                                                                  
for v_rc in select * from ""public"".material_plant where sap_log_id=v_sap_log_id order by id limit v_limit offset v_offset                                                                                          
loop                                                                                                                                                              
			begin
					--perform proc_update_table_ref('material_plant' , 'part_id', 'material_master' , 'part_no', v_rc.id, v_rc.part_no); 
          perform ep_temp_master.proc_update_table_ref('material_plant' , 'part_id', 'material_master' , 'part_unique_code', v_rc.id, v_rc.part_no||v_rc.plant_code);          
					perform ep_temp_master.proc_update_table_ref('material_plant' , 'plant_id', 'pur_org_data' , 'plant_code', v_rc.id, v_rc.plant_code);                                                                                                                                                  

				  --复制字段数据到material_master表中
					UPDATE public.material_master M
					SET part_status = v_rc.part_status,
					 abc_indicator = v_rc.abc_indicator,
					 critical_part_flag = v_rc.critical_part_flag,
					 buyer_erp_id = v_rc.buyer_erp_id,
					 planner_erp_id = v_rc.planner_erp_id,
					 ltime = v_rc.ltime,
					 procurement_type = v_rc.procurement_type,
					 record_point = v_rc.record_point,
					 safety_stock = v_rc.safety_stock,
					 maximum_stock_level = v_rc.maximum_stock_level,
					 quota_arrangement_usage = v_rc.quota_arrangement_usage,
					 auto_po_allowed = v_rc.auto_po_allowed,
					 commodity_code = v_rc.commodity_code,
					 issue_storage_location = v_rc.issue_storage_location,
					 special_procurement_type = v_rc.special_procurement_type,
					 post_to_insp_stock = v_rc.post_to_insp_stock,
					 deletion_flag = v_rc.deletion_flag,
					 rounding_value = v_rc.rounding_value,
					 gr_days = v_rc.gr_days
					WHERE
						M . ID = v_rc.part_id;

				  v_proc_line_count:=v_proc_line_count+1;   
          o_update_count:=o_update_count+1;                                                                                                       
			EXCEPTION                                                                                                                                              
			when OTHERS THEN                                                                                                                                       
           GET STACKED DIAGNOSTICS                                                                                           
                                   v_message_text = MESSAGE_TEXT,                                                                                                 
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                       
          v_table_name:='material_plant';                                                                                                                                 
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                  
					v_src_id=v_rc.id;                                                                                                                              
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);    
          v_proc_line_fail_count=v_proc_line_fail_count+1;   
          o_fail_count:=o_fail_count+1;                                                                                                     
      end;                                                                                                                                                        
end loop;                                                                                                                                                         
return;                                                                                                                                                     
                                                                                                                                                                  
                                                                                                                                                                  
end;                                                                                                                                                              
$function$
"
"proc_trans_table_material_plant_ref_2","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_material_plant_ref_2(v_sap_log_id character varying, v_need_update_id integer, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                           
                                                                                                                                                                  
declare                                                                                                                                                           
v_rc	record;                                                                                                                                                    
v_pre_period_id integer;                                                                                                                                          
v_start_datetime varchar;                                                                                                                                         
v_end_datetime varchar;                                                                                                                                           
v_count_1	integer;                                                                                                                                               
                                                                                                                                                                  
--异常捕获信息                                                                                                                                                    
v_table_name varchar;                                                                                                                                             
v_column_name varchar;                                                                                                                                            
v_message_text text;                                                                                                                                              
v_exception_detail text;                                                                                                                                          
v_src_id int4;                                                                                                                                                    
                                                                                                                                                                  
--记录处理日志相关                                                                                                                                                
v_proc_line_count int4;                                                                                                                                           
v_proc_line_fail_count int4;                                                                                                                                      
v_start_time TIMESTAMP;                                                                                                                                           
v_end_time TIMESTAMP;                                                                                                                                             
begin                                                                                                                                                             
v_proc_line_count:=0;                                                                                                                                             
v_proc_line_fail_count:=0;                                                                                                                                        
v_start_time:=now();                     

o_update_count:=0;
o_insert_count:=0;
o_fail_count:=0;                                                                                                                         
--遍历 正式 vendor 表,处理关联字段列表如下                                                                                                                        
                                                                                                                                                                  
for v_rc in select * from ""public"".material_plant where need_update_id=v_need_update_id order by id limit v_limit offset v_offset                                                                                          
loop                                                                                                                                                              
			begin
					--perform proc_update_table_ref('material_plant' , 'part_id', 'material_master' , 'part_no', v_rc.id, v_rc.part_no); 
          perform ep_temp_master.proc_update_table_ref('material_plant' , 'part_id', 'material_master' , 'part_unique_code', v_rc.id, v_rc.part_no||v_rc.plant_code);          
					perform ep_temp_master.proc_update_table_ref('material_plant' , 'plant_id', 'pur_org_data' , 'plant_code', v_rc.id, v_rc.plant_code);                                                                                                                                                  

				  --复制字段数据到material_master表中
					UPDATE public.material_master M
					SET part_status = v_rc.part_status,
					 abc_indicator = v_rc.abc_indicator,
					 critical_part_flag = v_rc.critical_part_flag,
					 buyer_erp_id = v_rc.buyer_erp_id,
					 planner_erp_id = v_rc.planner_erp_id,
					 ltime = v_rc.ltime,
					 procurement_type = v_rc.procurement_type,
					 record_point = v_rc.record_point,
					 safety_stock = v_rc.safety_stock,
					 maximum_stock_level = v_rc.maximum_stock_level,
					 quota_arrangement_usage = v_rc.quota_arrangement_usage,
					 auto_po_allowed = v_rc.auto_po_allowed,
					 commodity_code = v_rc.commodity_code,
					 issue_storage_location = v_rc.issue_storage_location,
					 special_procurement_type = v_rc.special_procurement_type,
					 post_to_insp_stock = v_rc.post_to_insp_stock,
					 deletion_flag = v_rc.deletion_flag,
					 rounding_value = v_rc.rounding_value,
					 gr_days = v_rc.gr_days
					WHERE
						M . ID = v_rc.part_id;

				  v_proc_line_count:=v_proc_line_count+1;   
          o_update_count:=o_update_count+1;                                                                                                       
			EXCEPTION                                                                                                                                              
			when OTHERS THEN                                                                                                                                       
           GET STACKED DIAGNOSTICS                                                                                           
                                   v_message_text = MESSAGE_TEXT,                                                                                                 
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                       
          v_table_name:='material_plant';                                                                                                                                 
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                  
					v_src_id=v_rc.id;                                                                                                                              
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);    
          v_proc_line_fail_count=v_proc_line_fail_count+1;   
          o_fail_count:=o_fail_count+1;                                                                                                     
      end;                                                                                                                                                        
end loop;                                                                                                                                                         
return;                                                                                                                                                     
                                                                                                                                                                  
                                                                                                                                                                  
end;                                                                                                                                                              
$function$
"
"proc_trans_table_payment_info","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_payment_info(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                         
                                                                                                                                                                
declare                                                                                                                                                         
v_rc	record;                                                                                                                                                  
v_pre_period_id integer;                                                                                                                                        
v_start_datetime varchar;                                                                                                                                       
v_end_datetime varchar;                                                                                                                                         
v_count_1	integer;                                                                                                                                             
                                                                                                                                                                
--异常捕获信息                                                                                                                                                  
v_table_name varchar;                                                                                                                                           
v_column_name varchar;                                                                                                                                          
v_message_text text;                                                                                                                                            
v_exception_detail text;                                                                                                                                        
v_src_id int4;                                                                                                                                                  
                                                                                                                                                                
--记录处理日志相关                                                                                                                                              
v_proc_line_count int4;                                                                                                                                         
v_proc_line_fail_count int4;                                                                                                                                    
v_start_time TIMESTAMP;                                                                                                                                         
v_end_time TIMESTAMP;                                                                                                                                           
begin                                                                                                                                                           
v_proc_line_count:=0;                                                                                                                                           
v_proc_line_fail_count:=0;                                                                                                                                      
v_start_time:=now();                                                                                                                                            

o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;                                                                                                                                                                 
                                                                                                                                                                                   
--遍历 address 表,数据转移到odoo正式表中                                                                                                                        
for v_rc in select * from ep_temp_master.payment_info    order by id LIMIT v_limit offset v_offset                                                                                                                               
loop                                                                                                                                                            
			begin                                                                                                                                                
				 select count(*) into v_count_1 from ""public"".payment_info where DOCUMENT=v_rc.DOCUMENT;                                                          
				 --目标表中不存在相关记录,进行插入操作                                                                                                           
				 if v_count_1=0 THEN 
						INSERT INTO ""public"".payment_info (
							vendor_code,
							ASSIGNMENT,
							DOCUMENT,
							referenece,
							TEXT,
							currency,
							b,
							amount,
							M,
							vendor_name,
							sap_log_id,
							sap_temp_id
						)
						VALUES
							(
								v_rc.vendor_code,
								v_rc. ASSIGNMENT,
								v_rc. DOCUMENT,
								v_rc.referenece,
								v_rc. TEXT,
								v_rc.currency,
								v_rc.b,
								v_rc.amount,
								v_rc. M,
								v_rc.vendor_name,
								v_sap_log_id,
								v_rc. ID
							);  
          o_insert_count:=o_insert_count+1;                                                                                                                          
				 end if;                                                                                                                                         
                                                                                                                                                                
				 --目标数据存在,进行更新操作                                                                                                                     
				if v_count_1=1 THEN
						UPDATE ""public"".payment_info
						SET vendor_code = v_rc.vendor_code,
						 DOCUMENT = v_rc. DOCUMENT,
						 referenece = v_rc.referenece,
						 TEXT = v_rc. TEXT,
						 currency = v_rc.currency,
						 b = v_rc.b,
						 amount = v_rc.amount,
						 M = v_rc. M,
						 vendor_name = v_rc.vendor_name,
						 sap_log_id = v_sap_log_id,
						 sap_temp_id = v_rc. ID
						WHERE
							DOCUMENT = v_rc. DOCUMENT;   
            o_update_count:=o_update_count+1;                                                                                                                           
				end if;                                                                                                                                          
				v_proc_line_count:=v_proc_line_count+1;                                                                                                          
			EXCEPTION                                                                                                                                            
			when OTHERS THEN                                                                                                                                     
           GET STACKED DIAGNOSTICS                                                                                               
                                   v_message_text = MESSAGE_TEXT,                                                                                               
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                     
          v_table_name:='payment_info';                                                                                                                              
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                
					v_src_id=v_rc.id;                                                                                                                            
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);  
          v_proc_line_fail_count=v_proc_line_fail_count+1;   
          o_fail_count:=o_fail_count+1;                                                                                                   
      end;                                                                                                                                                      
end loop;                                                                                                                                                       
                                                                                                                                                      
  return ;                                                                                                                                                     
                                                                                                                                                                
end;                                                                                                                                                            
$function$
"
"proc_trans_table_payment_info_ref","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_payment_info_ref(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                           
                                                                                                                                                                  
declare                                                                                                                                                           
v_rc	record;                                                                                                                                                    
v_pre_period_id integer;                                                                                                                                          
v_start_datetime varchar;                                                                                                                                         
v_end_datetime varchar;                                                                                                                                           
v_count_1	integer;                                                                                                                                               
                                                                                                                                                                  
--异常捕获信息                                                                                                                                                    
v_table_name varchar;                                                                                                                                             
v_column_name varchar;                                                                                                                                            
v_message_text text;                                                                                                                                              
v_exception_detail text;                                                                                                                                          
v_src_id int4;                                                                                                                                                    
                                                                                                                                                                  
--记录处理日志相关                                                                                                                                                
v_proc_line_count int4;                                                                                                                                           
v_proc_line_fail_count int4;                                                                                                                                      
v_start_time TIMESTAMP;                                                                                                                                           
v_end_time TIMESTAMP;                                                                                                                                             
begin                                                                                                                                                             
v_proc_line_count:=0;                                                                                                                                             
v_proc_line_fail_count:=0;                                                                                                                                        
v_start_time:=now();  
o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;                                                                                                                                                                 
                                                                                                                                                               
--遍历 正式 vendor 表,处理关联字段列表如下                                                                                                                        
/*
    vendor_id=fields.Many2one('iac.vendor',string='Vendor Info')
    vendor_reg_id=fields.Many2one('iac.vendor.register',string='Vendor Info')
    currency_id=fields.Many2one('res.currency',string='Currency Info')
*/                                                                                                                                                                  
for v_rc in select * from ""public"".payment_info where sap_log_id=v_sap_log_id    order by id LIMIT v_limit offset v_offset                                                                                           
loop                                                                                                                                                              
			begin
					--perform proc_update_table_ref('inforecord_history' , 'part_id', 'material_master' , 'part_no', v_rc.id, v_rc.part_no);         
					--perform proc_update_table_ref('inforecord_history' , 'vendor_id', 'iac_vendor' , 'vendor_code', v_rc.id, v_rc.vendor_code);
					--perform proc_update_table_ref('inforecord_history' , 'vendor_reg_id', 'iac_vendor_register' , 'vendor_code', v_rc.id, v_rc.vendor_code);
					--perform proc_update_table_ref('inforecord_history' , 'purchase_org_id', 'vendor_plant' , 'vendor_purchase_code', v_rc.id, v_rc.vendor_code||v_rc.purchase_org);
					--perform proc_update_table_ref('inforecord_history' , 'plant_id', 'pur_org_data' , 'plant_code', v_rc.id, v_rc.plant_code);
					--perform proc_update_table_ref('company' , 'address_odoo_id', 'address' , 'address_id', v_rc.id, v_rc.address_id);
					--perform proc_update_table_ref('payment_info' , 'currency_id', 'res_currency' , 'currency', v_rc.id, v_rc.name);	

					perform ep_temp_master.proc_update_table_ref('payment_info' , 'vendor_id', 'iac_vendor' , 'vendor_code', v_rc.id, v_rc.vendor_code);
					perform ep_temp_master.proc_update_table_ref('payment_info' , 'vendor_reg_id', 'iac_vendor_register' , 'vendor_code', v_rc.id, v_rc.vendor_code);	                                                                                                                                                
					perform ep_temp_master.proc_update_table_ref('payment_info' , 'currency_id', 'res_currency' , 'name', v_rc.id, v_rc.currency);

				  v_proc_line_count:=v_proc_line_count+1;  
          o_update_count:=o_update_count+1;                                                                                                        
			EXCEPTION                                                                                                                                              
			when OTHERS THEN                                                                                                                                       
           GET STACKED DIAGNOSTICS                                                                                                 
                                   v_message_text = MESSAGE_TEXT,                                                                                                 
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                       
          v_table_name:='payment_info';                                                                                                                                 
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                  
					v_src_id=v_rc.id;                                                                                                                              
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);    
          v_proc_line_fail_count=v_proc_line_fail_count+1; 
          o_fail_count:=o_fail_count+1;                                                                                                       
      end;                                                                                                                                                        
end loop;                                                                                                                                                         
                                                                                                                                                       
  return ;                                                                                                                                                       
                                                                                                                                                                  
                                                                                                                                                                  
end;                                                                                                                                                              
$function$
"
"proc_trans_table_payment_info_ref_2","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_payment_info_ref_2(v_sap_log_id character varying, v_need_update_id integer, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                           
                                                                                                                                                                  
declare                                                                                                                                                           
v_rc	record;                                                                                                                                                    
v_pre_period_id integer;                                                                                                                                          
v_start_datetime varchar;                                                                                                                                         
v_end_datetime varchar;                                                                                                                                           
v_count_1	integer;                                                                                                                                               
                                                                                                                                                                  
--异常捕获信息                                                                                                                                                    
v_table_name varchar;                                                                                                                                             
v_column_name varchar;                                                                                                                                            
v_message_text text;                                                                                                                                              
v_exception_detail text;                                                                                                                                          
v_src_id int4;                                                                                                                                                    
                                                                                                                                                                  
--记录处理日志相关                                                                                                                                                
v_proc_line_count int4;                                                                                                                                           
v_proc_line_fail_count int4;                                                                                                                                      
v_start_time TIMESTAMP;                                                                                                                                           
v_end_time TIMESTAMP;                                                                                                                                             
begin                                                                                                                                                             
v_proc_line_count:=0;                                                                                                                                             
v_proc_line_fail_count:=0;                                                                                                                                        
v_start_time:=now();  
o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;                                                                                                                                                                 
                                                                                                                                                               
--遍历 正式 vendor 表,处理关联字段列表如下                                                                                                                        
/*
    vendor_id=fields.Many2one('iac.vendor',string='Vendor Info')
    vendor_reg_id=fields.Many2one('iac.vendor.register',string='Vendor Info')
    currency_id=fields.Many2one('res.currency',string='Currency Info')
*/                                                                                                                                                                  
for v_rc in select * from ""public"".payment_info where need_update_id=v_need_update_id    order by id LIMIT v_limit offset v_offset                                                                                           
loop                                                                                                                                                              
			begin
					--perform proc_update_table_ref('inforecord_history' , 'part_id', 'material_master' , 'part_no', v_rc.id, v_rc.part_no);         
					--perform proc_update_table_ref('inforecord_history' , 'vendor_id', 'iac_vendor' , 'vendor_code', v_rc.id, v_rc.vendor_code);
					--perform proc_update_table_ref('inforecord_history' , 'vendor_reg_id', 'iac_vendor_register' , 'vendor_code', v_rc.id, v_rc.vendor_code);
					--perform proc_update_table_ref('inforecord_history' , 'purchase_org_id', 'vendor_plant' , 'vendor_purchase_code', v_rc.id, v_rc.vendor_code||v_rc.purchase_org);
					--perform proc_update_table_ref('inforecord_history' , 'plant_id', 'pur_org_data' , 'plant_code', v_rc.id, v_rc.plant_code);
					--perform proc_update_table_ref('company' , 'address_odoo_id', 'address' , 'address_id', v_rc.id, v_rc.address_id);
					--perform proc_update_table_ref('payment_info' , 'currency_id', 'res_currency' , 'currency', v_rc.id, v_rc.name);	

					perform ep_temp_master.proc_update_table_ref('payment_info' , 'vendor_id', 'iac_vendor' , 'vendor_code', v_rc.id, v_rc.vendor_code);
					perform ep_temp_master.proc_update_table_ref('payment_info' , 'vendor_reg_id', 'iac_vendor_register' , 'vendor_code', v_rc.id, v_rc.vendor_code);	                                                                                                                                                
					perform ep_temp_master.proc_update_table_ref('payment_info' , 'currency_id', 'res_currency' , 'name', v_rc.id, v_rc.currency);

				  v_proc_line_count:=v_proc_line_count+1;  
          o_update_count:=o_update_count+1;                                                                                                        
			EXCEPTION                                                                                                                                              
			when OTHERS THEN                                                                                                                                       
           GET STACKED DIAGNOSTICS                                                                                                 
                                   v_message_text = MESSAGE_TEXT,                                                                                                 
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                       
          v_table_name:='payment_info';                                                                                                                                 
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                  
					v_src_id=v_rc.id;                                                                                                                              
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);    
          v_proc_line_fail_count=v_proc_line_fail_count+1; 
          o_fail_count:=o_fail_count+1;                                                                                                       
      end;                                                                                                                                                        
end loop;                                                                                                                                                         
                                                                                                                                                       
  return ;                                                                                                                                                       
                                                                                                                                                                  
                                                                                                                                                                  
end;                                                                                                                                                              
$function$
"
"proc_trans_table_payment_term","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_payment_term(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                         
                                                                                                                                                                
declare                                                                                                                                                         
v_rc	record;                                                                                                                                                  
v_pre_period_id integer;                                                                                                                                        
v_start_datetime varchar;                                                                                                                                       
v_end_datetime varchar;                                                                                                                                         
v_count_1	integer;                                                                                                                                             
                                                                                                                                                                
--异常捕获信息                                                                                                                                                  
v_table_name varchar;                                                                                                                                           
v_column_name varchar;                                                                                                                                          
v_message_text text;                                                                                                                                            
v_exception_detail text;                                                                                                                                        
v_src_id int4;                                                                                                                                                  
                                                                                                                                                                
--记录处理日志相关                                                                                                                                              
v_proc_line_count int4;                                                                                                                                         
v_proc_line_fail_count int4;                                                                                                                                    
v_start_time TIMESTAMP;                                                                                                                                         
v_end_time TIMESTAMP;                                                                                                                                           
begin                                                                                                                                                           
v_proc_line_count:=0;                                                                                                                                           
v_proc_line_fail_count:=0;                                                                                                                                      
v_start_time:=now();                                                                                                                                            
o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;   
                                                                                                                                                                
--遍历 address 表,数据转移到odoo正式表中                                                                                                                        
for v_rc in select * from ep_temp_master.payment_term     order by id LIMIT v_limit offset v_offset                                                                                                                              
loop                                                                                                                                                            
			begin                                                                                                                                                
				 select count(*) into v_count_1 from ""public"".payment_term where payment_term=v_rc.payment_term;                                                          
				 --目标表中不存在相关记录,进行插入操作                                                                                                           
				 if v_count_1=0 THEN 
						INSERT INTO ""public"".payment_term (
							language_key,
							payment_term,
							payment_description,
							sap_log_id,
							sap_temp_id
						)
						VALUES
							(
								v_rc.language_key,
								v_rc.payment_term,
								v_rc.payment_description,
								v_sap_log_id,
								v_rc. ID
							);    
            o_insert_count:=o_insert_count+1;                                                                                                                        
				 end if;                                                                                                                                         
                                                                                                                                                                
				 --目标数据存在,进行更新操作                                                                                                                     
				if v_count_1=1 THEN   
						UPDATE ""public"".payment_term
						SET language_key = v_rc.language_key,
						 payment_description = v_rc.payment_description,
						 sap_log_id = v_sap_log_id,
						 sap_temp_id = v_rc. ID
						WHERE
							payment_term = v_rc.payment_term;    
            o_update_count:=o_update_count+1;                                                                                                                       
				end if;                                                                                                                                          
				v_proc_line_count:=v_proc_line_count+1;                                                                                                          
			EXCEPTION                                                                                                                                            
			when OTHERS THEN                                                                                                                                     
           GET STACKED DIAGNOSTICS                                                                                             
                                   v_message_text = MESSAGE_TEXT,                                                                                               
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                     
          v_table_name:='payment_term';                                                                                                                              
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                
					v_src_id=v_rc.id;                                                                                                                            
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);  
          v_proc_line_fail_count=v_proc_line_fail_count+1;   
          o_fail_count:=o_fail_count+1;                                                                                                   
      end;                                                                                                                                                      
end loop;                                                                                                                                                       
                                                                                                                                                      
  return ;                                                                                                                                                     
                                                                                                                                                                
end;                                                                                                                                                            
$function$
"
"proc_trans_table_payment_term_ref","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_payment_term_ref(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                           
                                                                                                                                                                  
declare                                                                                                                                                           
v_rc	record;                                                                                                                                                    
v_pre_period_id integer;                                                                                                                                          
v_start_datetime varchar;                                                                                                                                         
v_end_datetime varchar;                                                                                                                                           
v_count_1	integer;                                                                                                                                               
                                                                                                                                                                  
--异常捕获信息                                                                                                                                                    
v_table_name varchar;                                                                                                                                             
v_column_name varchar;                                                                                                                                            
v_message_text text;                                                                                                                                              
v_exception_detail text;                                                                                                                                          
v_src_id int4;                                                                                                                                                    
                                                                                                                                                                  
--记录处理日志相关                                                                                                                                                
v_proc_line_count int4;                                                                                                                                           
v_proc_line_fail_count int4;                                                                                                                                      
v_start_time TIMESTAMP;                                                                                                                                           
v_end_time TIMESTAMP;                                                                                                                                             
begin                                                                                                                                                             
v_proc_line_count:=0;                                                                                                                                             
v_proc_line_fail_count:=0;                                                                                                                                        
v_start_time:=now();                                                                                                                                              
--遍历 正式 vendor 表,处理关联字段列表如下                                                                                                                        
o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;                                                                                                                                                                     
for v_rc in select * from ""public"".payment_term where sap_log_id=v_sap_log_id  order by id LIMIT v_limit offset v_offset                                                                                             
loop                                                                                                                                                              
			begin                                                                                                                                                  
				  v_proc_line_count:=v_proc_line_count+1;                                                                                                          
			EXCEPTION                                                                                                                                              
			when OTHERS THEN                                                                                                                                       
           GET STACKED DIAGNOSTICS                                                                                               
                                   v_message_text = MESSAGE_TEXT,                                                                                                 
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                       
          v_table_name:='payment_term';                                                                                                                                 
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                  
					v_src_id=v_rc.id;                                                                                                                              
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);    
          v_proc_line_fail_count=v_proc_line_fail_count+1;    
          
          o_fail_count:=o_fail_count+1;                                                                                                    
      end;                                                                                                                                                        
end loop;                                                                                                                                                         
                                                                                                                                                        
  return ;                                                                                                                                                       
                                                                                                                                                                  
                                                                                                                                                                  
end;                                                                                                                                                              
$function$
"
"proc_trans_table_payment_term_ref_2","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_payment_term_ref_2(v_sap_log_id character varying, v_need_update_id integer, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                           
                                                                                                                                                                  
declare                                                                                                                                                           
v_rc	record;                                                                                                                                                    
v_pre_period_id integer;                                                                                                                                          
v_start_datetime varchar;                                                                                                                                         
v_end_datetime varchar;                                                                                                                                           
v_count_1	integer;                                                                                                                                               
                                                                                                                                                                  
--异常捕获信息                                                                                                                                                    
v_table_name varchar;                                                                                                                                             
v_column_name varchar;                                                                                                                                            
v_message_text text;                                                                                                                                              
v_exception_detail text;                                                                                                                                          
v_src_id int4;                                                                                                                                                    
                                                                                                                                                                  
--记录处理日志相关                                                                                                                                                
v_proc_line_count int4;                                                                                                                                           
v_proc_line_fail_count int4;                                                                                                                                      
v_start_time TIMESTAMP;                                                                                                                                           
v_end_time TIMESTAMP;                                                                                                                                             
begin                                                                                                                                                             
v_proc_line_count:=0;                                                                                                                                             
v_proc_line_fail_count:=0;                                                                                                                                        
v_start_time:=now();                                                                                                                                              
--遍历 正式 vendor 表,处理关联字段列表如下                                                                                                                        
o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;                                                                                                                                                                     
for v_rc in select * from ""public"".payment_term where need_update_id=v_need_update_id  order by id LIMIT v_limit offset v_offset                                                                                             
loop                                                                                                                                                              
			begin                                                                                                                                                  
				  v_proc_line_count:=v_proc_line_count+1;                                                                                                          
			EXCEPTION                                                                                                                                              
			when OTHERS THEN                                                                                                                                       
           GET STACKED DIAGNOSTICS                                                                                               
                                   v_message_text = MESSAGE_TEXT,                                                                                                 
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                       
          v_table_name:='payment_term';                                                                                                                                 
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                  
					v_src_id=v_rc.id;                                                                                                                              
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);    
          v_proc_line_fail_count=v_proc_line_fail_count+1;    
          
          o_fail_count:=o_fail_count+1;                                                                                                    
      end;                                                                                                                                                        
end loop;                                                                                                                                                         
                                                                                                                                                        
  return ;                                                                                                                                                       
                                                                                                                                                                  
                                                                                                                                                                  
end;                                                                                                                                                              
$function$
"
"proc_trans_table_plm_actual_vendor","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_plm_actual_vendor(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                         
                                                                                                                                                                
declare                                                                                                                                                         
v_rc	record;                                                                                                                                                  
v_pre_period_id integer;                                                                                                                                        
v_start_datetime varchar;                                                                                                                                       
v_end_datetime varchar;                                                                                                                                         
v_count_1	integer;                                                                                                                                             
                                                                                                                                                                
--异常捕获信息                                                                                                                                                  
v_table_name varchar;                                                                                                                                           
v_column_name varchar;                                                                                                                                          
v_message_text text;                                                                                                                                            
v_exception_detail text;                                                                                                                                        
v_src_id int4;                                                                                                                                                  
                                                                                                                                                                
--记录处理日志相关                                                                                                                                              
v_proc_line_count int4;                                                                                                                                         
v_proc_line_fail_count int4;                                                                                                                                    
v_start_time TIMESTAMP;                                                                                                                                         
v_end_time TIMESTAMP;                                                                                                                                           
begin                                                                                                                                                           
v_proc_line_count:=0;                                                                                                                                           
v_proc_line_fail_count:=0;                                                                                                                                      
v_start_time:=now();                                                                                                                                            

o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;  
                                                                                                                                                                
--遍历 address 表,数据转移到odoo正式表中                                                                                                                        
for v_rc in select * from ep_temp_master.plm_actual_vendor  order by id LIMIT v_limit offset v_offset                                                                                                                                 
loop                                                                                                                                                            
			begin                                                                                                                                                
				 select count(*) into v_count_1 from ""public"".plm_actual_vendor where NAME = v_rc. NAME;                                                                 
				 --目标表中不存在相关记录,进行插入操作                                                                                                           
				 if v_count_1=0 THEN
						INSERT INTO ""public"".plm_actual_vendor (
							NAME,
							fullname,
							sap_log_id,
							sap_temp_id
						)
						VALUES
							(
								v_rc. NAME,
								v_rc.fullname,
								v_sap_log_id,
								v_rc. ID
							);   
            o_insert_count:=o_insert_count+1;                                                                                                                          
				 end if;                                                                                                                                         
                                                                                                                                                                
				 --目标数据存在,进行更新操作                                                                                                                     
				if v_count_1=1 THEN    

						UPDATE ""public"".plm_actual_vendor
						SET NAME = v_rc. NAME,
						 fullname = v_rc.fullname,
						 sap_log_id = v_sap_log_id,
						 sap_temp_id = v_rc. ID
						WHERE
							NAME = v_rc. NAME;    
            o_update_count:=o_update_count+1;                                                                                                                      
				end if;                                                                                                                                          
				v_proc_line_count:=v_proc_line_count+1;                                                                                                          
			EXCEPTION                                                                                                                                            
			when OTHERS THEN                                                                                                                                     
           GET STACKED DIAGNOSTICS                                                                                             
                                   v_message_text = MESSAGE_TEXT,                                                                                               
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                     
          v_table_name:='plm_actual_vendor';                                                                                                                              
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                
					v_src_id=v_rc.id;                                                                                                                            
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);  
          v_proc_line_fail_count=v_proc_line_fail_count+1;   
          o_fail_count:=o_fail_count+1;                                                                                                   
      end;                                                                                                                                                      
end loop;                                                                                                                                                       
                                                                                                                                                      
  return ;                                                                                                                                                     
                                                                                                                                                                
end;                                                                                                                                                            
$function$
"
"proc_trans_table_plm_actual_vendor_ref","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_plm_actual_vendor_ref(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                           
                                                                                                                                                                  
declare                                                                                                                                                           
v_rc	record;                                                                                                                                                    
v_pre_period_id integer;                                                                                                                                          
v_start_datetime varchar;                                                                                                                                         
v_end_datetime varchar;                                                                                                                                           
v_count_1	integer;                                                                                                                                               
                                                                                                                                                                  
--异常捕获信息                                                                                                                                                    
v_table_name varchar;                                                                                                                                             
v_column_name varchar;                                                                                                                                            
v_message_text text;                                                                                                                                              
v_exception_detail text;                                                                                                                                          
v_src_id int4;                                                                                                                                                    
                                                                                                                                                                  
--记录处理日志相关                                                                                                                                                
v_proc_line_count int4;                                                                                                                                           
v_proc_line_fail_count int4;                                                                                                                                      
v_start_time TIMESTAMP;                                                                                                                                           
v_end_time TIMESTAMP;                                                                                                                                             
begin                                                                                                                                                             
v_proc_line_count:=0;                                                                                                                                             
v_proc_line_fail_count:=0;                                                                                                                                        
v_start_time:=now();    

o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;                                                                                                                                            
--遍历 正式 vendor 表,处理关联字段列表如下                                                                                                                        
                                                                                                                                                                  
for v_rc in select * from ""public"".plm_actual_vendor where sap_log_id=v_sap_log_id   order by id LIMIT v_limit offset v_offset                                                                                            
loop                                                                                                                                                              
			begin                                                                                                                                                  
				  v_proc_line_count:=v_proc_line_count+1;                                                                                                          
			EXCEPTION                                                                                                                                              
			when OTHERS THEN                                                                                                                                       
           GET STACKED DIAGNOSTICS                                                                                                  
                                   v_message_text = MESSAGE_TEXT,                                                                                                 
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                       
          v_table_name:='plm_actual_vendor';                                                                                                                                 
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                  
					v_src_id=v_rc.id;                                                                                                                              
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);    
          v_proc_line_fail_count=v_proc_line_fail_count+1;     
          o_fail_count:=o_fail_count+1;                                                                                                   
      end;                                                                                                                                                        
end loop;                                                                                                                                                         
                                                                                                                                                      
  return ;                                                                                                                                                       
                                                                                                                                                                  
                                                                                                                                                                  
end;                                                                                                                                                              
$function$
"
"proc_trans_table_plm_actual_vendor_ref_2","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_plm_actual_vendor_ref_2(v_sap_log_id character varying, v_need_update_id integer, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                           
                                                                                                                                                                  
declare                                                                                                                                                           
v_rc	record;                                                                                                                                                    
v_pre_period_id integer;                                                                                                                                          
v_start_datetime varchar;                                                                                                                                         
v_end_datetime varchar;                                                                                                                                           
v_count_1	integer;                                                                                                                                               
                                                                                                                                                                  
--异常捕获信息                                                                                                                                                    
v_table_name varchar;                                                                                                                                             
v_column_name varchar;                                                                                                                                            
v_message_text text;                                                                                                                                              
v_exception_detail text;                                                                                                                                          
v_src_id int4;                                                                                                                                                    
                                                                                                                                                                  
--记录处理日志相关                                                                                                                                                
v_proc_line_count int4;                                                                                                                                           
v_proc_line_fail_count int4;                                                                                                                                      
v_start_time TIMESTAMP;                                                                                                                                           
v_end_time TIMESTAMP;                                                                                                                                             
begin                                                                                                                                                             
v_proc_line_count:=0;                                                                                                                                             
v_proc_line_fail_count:=0;                                                                                                                                        
v_start_time:=now();    

o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;                                                                                                                                            
--遍历 正式 vendor 表,处理关联字段列表如下                                                                                                                        
                                                                                                                                                                  
for v_rc in select * from ""public"".plm_actual_vendor where need_update_id=v_need_update_id   order by id LIMIT v_limit offset v_offset                                                                                            
loop                                                                                                                                                              
			begin                                                                                                                                                  
				  v_proc_line_count:=v_proc_line_count+1;                                                                                                          
			EXCEPTION                                                                                                                                              
			when OTHERS THEN                                                                                                                                       
           GET STACKED DIAGNOSTICS                                                                                                  
                                   v_message_text = MESSAGE_TEXT,                                                                                                 
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                       
          v_table_name:='plm_actual_vendor';                                                                                                                                 
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                  
					v_src_id=v_rc.id;                                                                                                                              
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);    
          v_proc_line_fail_count=v_proc_line_fail_count+1;     
          o_fail_count:=o_fail_count+1;                                                                                                   
      end;                                                                                                                                                        
end loop;                                                                                                                                                         
                                                                                                                                                      
  return ;                                                                                                                                                       
                                                                                                                                                                  
                                                                                                                                                                  
end;                                                                                                                                                              
$function$
"
"proc_trans_table_plm_subclass","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_plm_subclass(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                         
                                                                                                                                                                
declare                                                                                                                                                         
v_rc	record;                                                                                                                                                  
v_pre_period_id integer;                                                                                                                                        
v_start_datetime varchar;                                                                                                                                       
v_end_datetime varchar;                                                                                                                                         
v_count_1	integer;                                                                                                                                             
                                                                                                                                                                
--异常捕获信息                                                                                                                                                  
v_table_name varchar;                                                                                                                                           
v_column_name varchar;                                                                                                                                          
v_message_text text;                                                                                                                                            
v_exception_detail text;                                                                                                                                        
v_src_id int4;                                                                                                                                                  
                                                                                                                                                                
--记录处理日志相关                                                                                                                                              
v_proc_line_count int4;                                                                                                                                         
v_proc_line_fail_count int4;                                                                                                                                    
v_start_time TIMESTAMP;                                                                                                                                         
v_end_time TIMESTAMP;                                                                                                                                           
begin                                                                                                                                                           
v_proc_line_count:=0;                                                                                                                                           
v_proc_line_fail_count:=0;                                                                                                                                      
v_start_time:=now();                                                                                                                                            

o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;  
                                                                                                                                                                
--遍历 address 表,数据转移到odoo正式表中                                                                                                                        
for v_rc in select * from ep_temp_master.plm_subclass   order by id LIMIT v_limit offset v_offset                                                                                                                                
loop                                                                                                                                                            
			begin                                                                                                                                                
				 select count(*) into v_count_1 from ""public"".plm_subclass where subclass=v_rc.subclass
         and class_code=v_rc.class_code and material_code=v_rc.material_code;                                                          
				 --目标表中不存在相关记录,进行插入操作                                                                                                           
				 if v_count_1=0 THEN    
						INSERT INTO ""public"".plm_subclass (
							plm_id,
							subclass,
							class_code,
							material_code,
							cht_name,
							full_name,
							material_group,
							created_by,
							created_date,
							sap_log_id,
							sap_temp_id
						)
						VALUES
							(
								v_rc.plm_id,
								v_rc.subclass,
								v_rc.class_code,
								v_rc.material_code,
								v_rc.cht_name,
								v_rc.full_name,
								v_rc.material_group,
								v_rc.created_by,
								v_rc.created_date,
								v_sap_log_id,
								v_rc. ID
							);  
            o_insert_count:=o_insert_count+1;                                                                                                                       
				 end if;                                                                                                                                         
                                                                                                                                                                
				 --目标数据存在,进行更新操作                                                                                                                     
				if v_count_1=1 THEN 
						UPDATE ""public"".plm_subclass
						SET subclass = v_rc.subclass,
						 class_code = v_rc.class_code,
						 material_code = v_rc.material_code,
						 cht_name = v_rc.cht_name,
						 full_name = v_rc.full_name,
						 material_group = v_rc.material_group,
						 created_by = v_rc.created_by,
						 created_date = v_rc.created_date,
						 sap_log_id = v_sap_log_id,
						 sap_temp_id = v_rc. ID
						WHERE
							 subclass=v_rc.subclass
               and class_code=v_rc.class_code 
             and material_code=v_rc.material_code;   
            o_update_count:=o_update_count+1;                                                                                                                          
				end if;                                                                                                                                          
				v_proc_line_count:=v_proc_line_count+1;                                                                                                          
			EXCEPTION                                                                                                                                            
			when OTHERS THEN                                                                                                                                     
           GET STACKED DIAGNOSTICS                                                                                                 
                                   v_message_text = MESSAGE_TEXT,                                                                                               
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                     
          v_table_name:='plm_subclass';                                                                                                                              
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                
					v_src_id=v_rc.id;                                                                                                                            
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);  
          v_proc_line_fail_count=v_proc_line_fail_count+1;      
          o_fail_count:=o_fail_count+1;                                                                                                
      end;                                                                                                                                                      
end loop;                                                                                                                                                       
                                                                                                                                                       
  return ;                                                                                                                                                     
                                                                                                                                                                
end;                                                                                                                                                            
$function$
"
"proc_trans_table_plm_subclass_ref","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_plm_subclass_ref(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                           
                                                                                                                                                                  
declare                                                                                                                                                           
v_rc	record;                                                                                                                                                    
v_pre_period_id integer;                                                                                                                                          
v_start_datetime varchar;                                                                                                                                         
v_end_datetime varchar;                                                                                                                                           
v_count_1	integer;                                                                                                                                               
                                                                                                                                                                  
--异常捕获信息                                                                                                                                                    
v_table_name varchar;                                                                                                                                             
v_column_name varchar;                                                                                                                                            
v_message_text text;                                                                                                                                              
v_exception_detail text;                                                                                                                                          
v_src_id int4;                                                                                                                                                    
                                                                                                                                                                  
--记录处理日志相关                                                                                                                                                
v_proc_line_count int4;                                                                                                                                           
v_proc_line_fail_count int4;                                                                                                                                      
v_start_time TIMESTAMP;                                                                                                                                           
v_end_time TIMESTAMP;                                                                                                                                             
begin                                                                                                                                                             
v_proc_line_count:=0;                                                                                                                                             
v_proc_line_fail_count:=0;                                                                                                                                        
v_start_time:=now();                                                                                                                                              
--遍历 正式 vendor 表,处理关联字段列表如下                                                                                                                        
o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;  
                                                                                                                                                                  
for v_rc in select * from ""public"".plm_subclass where sap_log_id=v_sap_log_id   order by id LIMIT v_limit offset v_offset                                                                                            
loop                                                                                                                                                              
			begin                                                                                                                                                  
				  v_proc_line_count:=v_proc_line_count+1;                                                                                                          
			EXCEPTION                                                                                                                                              
			when OTHERS THEN                                                                                                                                       
           GET STACKED DIAGNOSTICS                                                                                                  
                                   v_message_text = MESSAGE_TEXT,                                                                                                 
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                       
          v_table_name:='plm_subclass';                                                                                                                                 
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                  
					v_src_id=v_rc.id;                                                                                                                              
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);    
          v_proc_line_fail_count=v_proc_line_fail_count+1;   
          o_fail_count:=o_fail_count+1;                                                                                                     
      end;                                                                                                                                                        
end loop;                                                                                                                                                         
                                                                                                                                                        
  return ;                                                                                                                                                       
                                                                                                                                                                  
                                                                                                                                                                  
end;                                                                                                                                                              
$function$
"
"proc_trans_table_plm_subclass_ref_2","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_plm_subclass_ref_2(v_sap_log_id character varying, v_need_update_id integer, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                           
                                                                                                                                                                  
declare                                                                                                                                                           
v_rc	record;                                                                                                                                                    
v_pre_period_id integer;                                                                                                                                          
v_start_datetime varchar;                                                                                                                                         
v_end_datetime varchar;                                                                                                                                           
v_count_1	integer;                                                                                                                                               
                                                                                                                                                                  
--异常捕获信息                                                                                                                                                    
v_table_name varchar;                                                                                                                                             
v_column_name varchar;                                                                                                                                            
v_message_text text;                                                                                                                                              
v_exception_detail text;                                                                                                                                          
v_src_id int4;                                                                                                                                                    
                                                                                                                                                                  
--记录处理日志相关                                                                                                                                                
v_proc_line_count int4;                                                                                                                                           
v_proc_line_fail_count int4;                                                                                                                                      
v_start_time TIMESTAMP;                                                                                                                                           
v_end_time TIMESTAMP;                                                                                                                                             
begin                                                                                                                                                             
v_proc_line_count:=0;                                                                                                                                             
v_proc_line_fail_count:=0;                                                                                                                                        
v_start_time:=now();                                                                                                                                              
--遍历 正式 vendor 表,处理关联字段列表如下                                                                                                                        
o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;  
                                                                                                                                                                  
for v_rc in select * from ""public"".plm_subclass where need_update_id=v_need_update_id   order by id LIMIT v_limit offset v_offset                                                                                            
loop                                                                                                                                                              
			begin                                                                                                                                                  
				  v_proc_line_count:=v_proc_line_count+1;                                                                                                          
			EXCEPTION                                                                                                                                              
			when OTHERS THEN                                                                                                                                       
           GET STACKED DIAGNOSTICS                                                                                                  
                                   v_message_text = MESSAGE_TEXT,                                                                                                 
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                       
          v_table_name:='plm_subclass';                                                                                                                                 
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                  
					v_src_id=v_rc.id;                                                                                                                              
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);    
          v_proc_line_fail_count=v_proc_line_fail_count+1;   
          o_fail_count:=o_fail_count+1;                                                                                                     
      end;                                                                                                                                                        
end loop;                                                                                                                                                         
                                                                                                                                                        
  return ;                                                                                                                                                       
                                                                                                                                                                  
                                                                                                                                                                  
end;                                                                                                                                                              
$function$
"
"proc_trans_table_po_detail","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_po_detail(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                         
                                                                                                                                                                
declare                                                                                                                                                         
v_rc	record;                                                                                                                                                  
v_pre_period_id integer;                                                                                                                                        
v_start_datetime varchar;                                                                                                                                       
v_end_datetime varchar;                                                                                                                                         
v_count_1	integer;                                                                                                                                             
v_vendor_code varchar;
v_buyer_code varchar;                                                                                                                                                                
--异常捕获信息                                                                                                                                                  
v_table_name varchar;                                                                                                                                           
v_column_name varchar;                                                                                                                                          
v_message_text text;                                                                                                                                            
v_exception_detail text;                                                                                                                                        
v_src_id int4;                                                                                                                                                  
                                                                                                                                                                
--记录处理日志相关                                                                                                                                              
v_proc_line_count int4;                                                                                                                                         
v_proc_line_fail_count int4;                                                                                                                                    
v_start_time TIMESTAMP;                                                                                                                                         
v_end_time TIMESTAMP;                                                                                                                                           
begin                                                                                                                                                           
v_proc_line_count:=0;                                                                                                                                           
v_proc_line_fail_count:=0;                                                                                                                                      
v_start_time:=now();                                                                                                                                            
o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;                                                                                                                                                                 
                                                                                                                                                                                   
--遍历 address 表,数据转移到odoo正式表中                                                                                                                        
for v_rc in select * from ep_temp_master.po_detail  order by id LIMIT v_limit offset v_offset                                                                                                                                 
loop                                                                                                                                                            
			begin                                                                                                                                                
				 select count(*) into v_count_1 from ""public"".iac_purchase_order_line where 	document_erp_id = v_rc.document_erp_id
						AND document_line_erp_id = v_rc.document_line_erp_id;                                                        
				 --目标表中不存在相关记录,进行插入操作                                                                                                           
				 if v_count_1=0 THEN
						INSERT INTO ""public"".iac_purchase_order_line (
							document_erp_id,
							document_line_erp_id,
							deletion_flag,
							quantity,
							rfq_status,
							change_date,
							short_text,
							part_no,
							part_no1,
							plant_code,
							manufacturer_part_no,
							price,
							storage_location,
							unit,
							tracking_number,
							revision_level,
							vendor_part_no,
							purchase_req_no,
							purchase_req_item_no,
							rfq_no,
							tax_code,
							reject_flag,
							price_date,
							address_id,
							vendor_to_be_supply,
							delivery_complete,
							delivery_date,
							price_unit,
              state,
              odoo_deletion_flag,
							sap_log_id,
							sap_temp_id,
              create_date,
              create_uid
						)
						VALUES
							(
								v_rc.document_erp_id,
								v_rc.document_line_erp_id,
								v_rc.deletion_flag,
								v_rc.quantity,
								v_rc.rfq_status,
								v_rc.change_date,
								v_rc.short_text,
								v_rc.part_no,
								v_rc.part_no1,
								v_rc.plant_code,
								v_rc.manufacturer_part_no,
								v_rc.price,
								v_rc.storage_location,
								v_rc.unit,
								v_rc.tracking_number,
								v_rc.revision_level,
								v_rc.vendor_part_no,
								v_rc.purchase_req_no,
								v_rc.purchase_req_item_no,
								v_rc.rfq_no,
								v_rc.tax_code,
								v_rc.reject_flag,
								v_rc.price_determine_date,
								v_rc.address_id,
								v_rc.vendor_to_be_supply,
								v_rc.delivery_complete,
								v_rc.delivery_date,
								v_rc.price_unit,
                'pending' ,
                (case when v_rc.deletion_flag ='L' then True else False end) ,
								v_sap_log_id,
								v_rc. ID,
                now(),
                1
							) returning id into v_src_id; 
             
             --更新vendor_code buyer_erp_id
             select t.vendor_code,t.buyer_erp_id into v_vendor_code,v_buyer_code
             from ep_temp_master.po_header t where t.document_erp_id=v_rc.document_erp_id;
             update  ""public"".iac_purchase_order_line t 
             set vendor_code=v_vendor_code,buyer_erp_id=v_buyer_code where id=v_src_id ;

             o_insert_count:=o_insert_count+1;                                                                                                                          
				 end if;                                                                                                                                         
                                                                                                                                                                
                                                                                                                                       
				v_proc_line_count:=v_proc_line_count+1;                                                                                                          
			EXCEPTION                                                                                                                                            
			when OTHERS THEN                                                                                                                                     
           GET STACKED DIAGNOSTICS                                                                                           
                                   v_message_text = MESSAGE_TEXT,                                                                                               
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                     
          v_table_name:='iac_purchase_order_line';                                                                                                                              
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                
					v_src_id=v_rc.id;       
          v_table_name:='po_detail';                                                                                                                       
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);  
          v_proc_line_fail_count=v_proc_line_fail_count+1; 
          o_fail_count:=o_fail_count+1;                                                                                                     
      end;                                                                                                                                                      
end loop;                                                                                                                                                       
return;                                                                                                                                                     
                                                                                                                                                                
end;                                                                                                                                                            
$function$
"
"proc_trans_table_po_detail_ref","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_po_detail_ref(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                           
                                                                                                                                                                  
declare                                                                                                                                                           
v_rc	record;                                                                                                                                                    
v_pre_period_id integer;                                                                                                                                          
v_start_datetime varchar;                                                                                                                                         
v_end_datetime varchar;                                                                                                                                           
v_count_1	integer;                                                                                                                                               
                                                                                                                                                                  
--异常捕获信息                                                                                                                                                    
v_table_name varchar;                                                                                                                                             
v_column_name varchar;                                                                                                                                            
v_message_text text;                                                                                                                                              
v_exception_detail text;                                                                                                                                          
v_src_id int4;                                                                                                                                                    
                                                                                                                                                                  
--记录处理日志相关                                                                                                                                                
v_proc_line_count int4;                                                                                                                                           
v_proc_line_fail_count int4;                                                                                                                                      
v_start_time TIMESTAMP;                                                                                                                                           
v_end_time TIMESTAMP;                                                                                                                                             
begin                                                                                                                                                             
v_proc_line_count:=0;                                                                                                                                             
v_proc_line_fail_count:=0;                                                                                                                                        
v_start_time:=now();                                                                                                                                              
--遍历 正式 vendor 表,处理关联字段列表如下
o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;                                                                                                                                                                 
                                                                                                                                           
                                                                                                                                                                  
for v_rc in select * from ""public"".iac_purchase_order_line where sap_log_id=v_sap_log_id  order by id LIMIT v_limit offset v_offset                                                                                             
loop                                                                                                                                                              
			begin
					--perform proc_update_table_ref('iac_purchase_order_line' , 'part_id', 'material_master' , 'part_no', v_rc.id, v_rc.part_no);
					perform ep_temp_master.proc_update_table_ref('iac_purchase_order_line' , 'part_id', 'material_master' , 'part_unique_code', v_rc.id, v_rc.part_no||v_rc.plant_code);                   
					perform ep_temp_master.proc_update_table_ref('iac_purchase_order_line' , 'address_odoo_id', 'address' , 'address_id', v_rc.id, v_rc.address_id);
					perform ep_temp_master.proc_update_table_ref('iac_purchase_order_line' , 'plant_id', 'pur_org_data' , 'plant_code', v_rc.id, v_rc.plant_code);
					perform ep_temp_master.proc_update_table_ref('iac_purchase_order_line' , 'order_id', 'iac_purchase_order' , 'document_erp_id', v_rc.id, v_rc.document_erp_id); 
          perform ep_temp_master.proc_update_table_ref('iac_purchase_order_line' , 'vendor_id', 'iac_vendor' , 'vendor_code', v_rc.id, v_rc.vendor_code);	
          perform ep_temp_master.proc_update_table_ref('iac_purchase_order_line' , 'buyer_id', 'buyer_code' , 'buyer_erp_id', v_rc.id, v_rc.buyer_erp_id); 

				  v_proc_line_count:=v_proc_line_count+1;  
          o_update_count:=o_update_count+1;                                                                                                        
			EXCEPTION                                                                                                                                              
			when OTHERS THEN                                                                                                                                       
           GET STACKED DIAGNOSTICS                                                                                             
                                   v_message_text = MESSAGE_TEXT,                                                                                                 
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                       
          v_table_name:='iac_purchase_order_line';                                                                                                                                 
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                  
					v_src_id=v_rc.id;
          v_table_name:='po_detail';                                                                                                                                  
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);    
          v_proc_line_fail_count=v_proc_line_fail_count+1;
          o_fail_count:=o_fail_count+1;                                                                                                        
      end;                                                                                                                                                        
end loop;                                                                                                                                                         
                                                                                                                                                                                                                                                                                                           
  return ;                                                                                                                                                       
                                                                                                                                                                  
                                                                                                                                                                  
end;                                                                                                                                                              
$function$
"
"proc_trans_table_po_detail_ref_2","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_po_detail_ref_2(v_sap_log_id character varying, v_need_update_id integer, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                           
                                                                                                                                                                  
declare                                                                                                                                                           
v_rc	record;                                                                                                                                                    
v_pre_period_id integer;                                                                                                                                          
v_start_datetime varchar;                                                                                                                                         
v_end_datetime varchar;                                                                                                                                           
v_count_1	integer;                                                                                                                                               
                                                                                                                                                                  
--异常捕获信息                                                                                                                                                    
v_table_name varchar;                                                                                                                                             
v_column_name varchar;                                                                                                                                            
v_message_text text;                                                                                                                                              
v_exception_detail text;                                                                                                                                          
v_src_id int4;                                                                                                                                                    
                                                                                                                                                                  
--记录处理日志相关                                                                                                                                                
v_proc_line_count int4;                                                                                                                                           
v_proc_line_fail_count int4;                                                                                                                                      
v_start_time TIMESTAMP;                                                                                                                                           
v_end_time TIMESTAMP;                                                                                                                                             
begin                                                                                                                                                             
v_proc_line_count:=0;                                                                                                                                             
v_proc_line_fail_count:=0;                                                                                                                                        
v_start_time:=now();                                                                                                                                              
--遍历 正式 vendor 表,处理关联字段列表如下
o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;                                                                                                                                                                 
                                                                                                                                           
                                                                                                                                                                  
for v_rc in select * from ""public"".iac_purchase_order_line where need_update_id=v_need_update_id  order by id LIMIT v_limit offset v_offset                                                                                             
loop                                                                                                                                                              
			begin
					--perform proc_update_table_ref('iac_purchase_order_line' , 'part_id', 'material_master' , 'part_no', v_rc.id, v_rc.part_no);
					perform ep_temp_master.proc_update_table_ref('iac_purchase_order_line' , 'part_id', 'material_master' , 'part_unique_code', v_rc.id, v_rc.part_no||v_rc.plant_code);                   
					perform ep_temp_master.proc_update_table_ref('iac_purchase_order_line' , 'address_odoo_id', 'address' , 'address_id', v_rc.id, v_rc.address_id);
					perform ep_temp_master.proc_update_table_ref('iac_purchase_order_line' , 'plant_id', 'pur_org_data' , 'plant_code', v_rc.id, v_rc.plant_code);
					perform ep_temp_master.proc_update_table_ref('iac_purchase_order_line' , 'order_id', 'iac_purchase_order' , 'document_erp_id', v_rc.id, v_rc.document_erp_id); 
          perform ep_temp_master.proc_update_table_ref('iac_purchase_order_line' , 'vendor_id', 'iac_vendor' , 'vendor_code', v_rc.id, v_rc.vendor_code);	
          perform ep_temp_master.proc_update_table_ref('iac_purchase_order_line' , 'buyer_id', 'buyer_code' , 'buyer_erp_id', v_rc.id, v_rc.buyer_erp_id); 
                                                                                                                                    
				  v_proc_line_count:=v_proc_line_count+1;  
          o_update_count:=o_update_count+1;                                                                                                        
			EXCEPTION                                                                                                                                              
			when OTHERS THEN                                                                                                                                       
           GET STACKED DIAGNOSTICS                                                                                             
                                   v_message_text = MESSAGE_TEXT,                                                                                                 
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                       
          v_table_name:='iac_purchase_order_line';                                                                                                                                 
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                  
					v_src_id=v_rc.id; 
          v_table_name:='po_detail';                                                                                                                                 
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);    
          v_proc_line_fail_count=v_proc_line_fail_count+1;
          o_fail_count:=o_fail_count+1;                                                                                                        
      end;                                                                                                                                                        
end loop;                                                                                                                                                         
                                                                                                                                                                                                                                                                                                           
  return ;                                                                                                                                                       
                                                                                                                                                                  
                                                                                                                                                                  
end;                                                                                                                                                              
$function$
"
"proc_trans_table_po_header","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_po_header(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                         
                                                                                                                                                                
declare                                                                                                                                                         
v_rc	record;                                                                                                                                                  
v_pre_period_id integer;                                                                                                                                        
v_start_datetime varchar;                                                                                                                                       
v_end_datetime varchar;                                                                                                                                         
v_count_1	integer;                                                                                                                                             
                                                                                                                                                                
--异常捕获信息                                                                                                                                                  
v_table_name varchar;                                                                                                                                           
v_column_name varchar;                                                                                                                                          
v_message_text text;                                                                                                                                            
v_exception_detail text;                                                                                                                                        
v_src_id int4;                                                                                                                                                  
                                                                                                                                                                
--记录处理日志相关                                                                                                                                              
v_proc_line_count int4;                                                                                                                                         
v_proc_line_fail_count int4;                                                                                                                                    
v_start_time TIMESTAMP;                                                                                                                                         
v_end_time TIMESTAMP;                                                                                                                                           
begin                                                                                                                                                           
v_proc_line_count:=0;                                                                                                                                           
v_proc_line_fail_count:=0;                                                                                                                                      
v_start_time:=now();                                                                                                                                            
o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;                                                                                                                                                                 
                                                                                                                                                                                   
--遍历 address 表,数据转移到odoo正式表中                                                                                                                        
for v_rc in select * from ep_temp_master.po_header  order by id LIMIT v_limit offset v_offset                                                                                                                                 
loop                                                                                                                                                            
			begin                                                                                                                                                
				 select count(*) into v_count_1 from ""public"".iac_purchase_order where document_erp_id=v_rc.document_erp_id;                                                          
				 --目标表中不存在相关记录,进行插入操作                                                                                                           
				 if v_count_1=0 THEN
						INSERT INTO ""public"".iac_purchase_order (
							document_erp_id,
							company_code,
							order_category,
							deletion_flag,
							status,
							order_date,
							created_by,
							vendor_code,
							language_key,
							payment_term,
							purchase_org,
							buyer_erp_id,
							currency,
							exchange_rate,
							contact_person,
							contact_phone,
							incoterm,
							incoterm1,
							order_release_status,
							order_type,
							address_id,
							your_reference,
							our_reference,
							manually_po_reason,
							manually_po_reason_type,
							manually_po_comment,
							manually_po_comment2,              
              state,
              odoo_deletion_flag,
							sap_log_id,
							sap_temp_id
						)
						VALUES
							(
								v_rc.document_erp_id,
								v_rc.company_code,
								v_rc.document_category,
								v_rc.deletion_flag,
								v_rc.status,
								v_rc.document_date,
								v_rc.created_by,
								v_rc.vendor_code,
								v_rc.language_key,
								v_rc.payment_term,
								v_rc.purchase_org,
								v_rc.buyer_erp_id,
								v_rc.currency,
								v_rc.exchange_rate,
								v_rc.contact_person,
								v_rc.contact_phone,
								v_rc.incoterm,
								v_rc.incoterm1,
								v_rc.document_release_status,
								v_rc.order_type,
								v_rc.address_id,
								v_rc.your_reference,
								v_rc.our_reference,
								v_rc.manually_po_reason,
								v_rc.manually_po_reason_type,
								v_rc.manually_po_comment,
								v_rc.manually_po_comment2,
                'pending' ,
                (case when v_rc.deletion_flag ='L' then True else False end) ,
								v_sap_log_id,
								v_rc. ID
							);  
             o_insert_count:=o_insert_count+1;                                                                                                                           
				 end if;                                                                                                                                         
                                                                                                                                                                
				 --目标数据存在,进行更新操作  
        /*                                                                                                                   
				if v_count_1=1 THEN    
						UPDATE ""public"".iac_purchase_order
						SET company_code = v_rc.company_code,
						 order_category = v_rc.document_category,
						 deletion_flag = v_rc.deletion_flag,
						 status = v_rc.status,
						 order_date = v_rc.document_date,
						 created_by = v_rc.created_by,
						 vendor_code = v_rc.vendor_code,
						 language_key = v_rc.language_key,
						 payment_term = v_rc.payment_term,
						 purchase_org = v_rc.purchase_org,
						 buyer_erp_id = v_rc.buyer_erp_id,
						 currency = v_rc.currency,
						 exchange_rate = v_rc.exchange_rate,
						 contact_person = v_rc.contact_person,
						 contact_phone = v_rc.contact_phone,
						 incoterm = v_rc.incoterm,
						 incoterm1 = v_rc.incoterm1,
						 order_release_status = v_rc.document_release_status,
						 order_type = v_rc.order_type,
						 address_id = v_rc.address_id,
						 your_reference = v_rc.your_reference,
						 our_reference = v_rc.our_reference,
						 manually_po_reason = v_rc.manually_po_reason,
						 manually_po_reason_type = v_rc.manually_po_reason_type,
						 manually_po_comment = v_rc.manually_po_comment,
						 manually_po_comment2 = v_rc.manually_po_comment2,
             state='pending', 
             odoo_deletion_flag=(case when v_rc.deletion_flag ='L' then True else False end) ,
						 sap_log_id = v_sap_log_id,
						 sap_temp_id = v_rc. ID
						WHERE
							document_erp_id = v_rc.document_erp_id;
            o_update_count:=o_update_count+1;                                                                                                                          
				end if;
        */                                                                                                                                          
				v_proc_line_count:=v_proc_line_count+1;                                                                                                          
			EXCEPTION                                                                                                                                            
			when OTHERS THEN                                                                                                                                     
           GET STACKED DIAGNOSTICS                                                                                               
                                   v_message_text = MESSAGE_TEXT,                                                                                               
																	 v_exception_detail=PG_EXCEPTION_DETAIL;
          v_table_name:='iac_purchase_order';                                                                                                                                                                                                
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';
          v_table_name:='po_header';                                 
					v_src_id=v_rc.id;                                                                                                                            
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);  
          v_proc_line_fail_count=v_proc_line_fail_count+1;  
          o_fail_count:=o_fail_count+1;                                                                                                    
      end;                                                                                                                                                      
end loop;                                                                                                                                                                                                                                                                                                             
  return ;                                                                                                                                                     
                                                                                                                                                                
end;                                                                                                                                                            
$function$
"
"proc_trans_table_po_header_ref","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_po_header_ref(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                           
                                                                                                                                                                  
declare                                                                                                                                                           
v_rc	record;                                                                                                                                                    
v_pre_period_id integer;                                                                                                                                          
v_start_datetime varchar;                                                                                                                                         
v_end_datetime varchar;                                                                                                                                           
v_count_1	integer;                                                                                                                                               
                                                                                                                                                                  
--异常捕获信息                                                                                                                                                    
v_table_name varchar;                                                                                                                                             
v_column_name varchar;                                                                                                                                            
v_message_text text;                                                                                                                                              
v_exception_detail text;                                                                                                                                          
v_src_id int4;                                                                                                                                                    
                                                                                                                                                                  
--记录处理日志相关                                                                                                                                                
v_proc_line_count int4;                                                                                                                                           
v_proc_line_fail_count int4;                                                                                                                                      
v_start_time TIMESTAMP;                                                                                                                                           
v_end_time TIMESTAMP;                                                                                                                                             
begin                                                                                                                                                             
v_proc_line_count:=0;                                                                                                                                             
v_proc_line_fail_count:=0;                                                                                                                                        
v_start_time:=now();       
o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;                                                                                                                                                                 
                                                                                                                                                          
--遍历 正式 vendor 表,处理关联字段列表如下                                                                                                                        
/*
    payment_term_id=fields.Many2one('payment.term',string=""Payment Term"")
    company_id=fields.Many2one('company',string=""Company Info"")
    purchase_org_id = fields.Many2one('pur.org.data',string=""Purchase Org"")
    incoterm_id=fields.Many2one('incoterm',string=""Incoterm"")
    address_odoo_id=fields.Many2one('address',string=""Address Id"")
    vendor_id = fields.Many2one('iac.vendor', string=""Vendor Info"")
    vendor_reg_id = fields.Many2one('iac.vendor.register', string=""Vendor Registration"")
*/                                                                                                                                                                  
for v_rc in select * from ""public"".iac_purchase_order where sap_log_id=v_sap_log_id  order by id LIMIT v_limit offset v_offset                                                                                             
loop                                                                                                                                                              
			begin
					perform ep_temp_master.proc_update_table_ref('iac_purchase_order' , 'payment_term_id', 'payment_term' , 'payment_term', v_rc.id, v_rc.payment_term);         
					perform ep_temp_master.proc_update_table_ref('iac_purchase_order' , 'company_id', 'company' , 'company_code', v_rc.id, v_rc.company_code);					
					perform ep_temp_master.proc_update_table_ref('iac_purchase_order' , 'purchase_org_id', 'vendor_plant' , 'vendor_purchase_code', v_rc.id, v_rc.vendor_code||v_rc.purchase_org);
					perform ep_temp_master.proc_update_table_ref('iac_purchase_order' , 'incoterm_id', 'incoterm' , 'incoterm', v_rc.id, v_rc.incoterm);
					perform ep_temp_master.proc_update_table_ref('iac_purchase_order' , 'address_odoo_id', 'address' , 'address_id', v_rc.id, v_rc.address_id);
					perform ep_temp_master.proc_update_table_ref('iac_purchase_order' , 'vendor_id', 'iac_vendor' , 'vendor_code', v_rc.id, v_rc.vendor_code);	
					perform ep_temp_master.proc_update_table_ref('iac_purchase_order' , 'vendor_reg_id', 'iac_vendor_register' , 'vendor_code', v_rc.id, v_rc.vendor_code);
					perform ep_temp_master.proc_update_table_ref('iac_purchase_order' , 'buyer_id', 'buyer_code' , 'buyer_erp_id', v_rc.id, v_rc.buyer_erp_id);	 	                                                                                                                                                  
					perform ep_temp_master.proc_update_table_ref('iac_purchase_order' , 'currency_id', 'res_currency' , 'name', v_rc.id, v_rc.currency); 
				  --更新plant_id
					UPDATE ""public"".iac_purchase_order T
					SET plant_id = (
						SELECT
							plant
						FROM
							""public"".iac_vendor v
						WHERE
							v. ID = T .vendor_id
					)
					WHERE
						T . ID = v_rc.id
					AND T .vendor_id IS NOT NULL;

				  v_proc_line_count:=v_proc_line_count+1;  
          o_update_count:=o_update_count+1;                                                                                                        
			EXCEPTION                                                                                                                                              
			when OTHERS THEN                                                                                                                                       
           GET STACKED DIAGNOSTICS                                                                                                 
                                   v_message_text = MESSAGE_TEXT,                                                                                                 
																	 v_exception_detail=PG_EXCEPTION_DETAIL;
          v_table_name:='iac_purchase_order';                                                                                                                                                                                           
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                  
					v_src_id=v_rc.id;
          v_table_name:='po_header';                                                                                                                                 
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);    
          v_proc_line_fail_count=v_proc_line_fail_count+1;
          o_fail_count:=o_fail_count+1;                                                                                                        
      end;                                                                                                                                                        
end loop;                                                                                                                                                         
                                                                                                                                                   
  return ;                                                                                                                                                       
                                                                                                                                                                  
                                                                                                                                                                  
end;                                                                                                                                                              
$function$
"
"proc_trans_table_po_header_ref_2","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_po_header_ref_2(v_sap_log_id character varying, v_need_update_id integer, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                           
                                                                                                                                                                  
declare                                                                                                                                                           
v_rc	record;                                                                                                                                                    
v_pre_period_id integer;                                                                                                                                          
v_start_datetime varchar;                                                                                                                                         
v_end_datetime varchar;                                                                                                                                           
v_count_1	integer;                                                                                                                                               
                                                                                                                                                                  
--异常捕获信息                                                                                                                                                    
v_table_name varchar;                                                                                                                                             
v_column_name varchar;                                                                                                                                            
v_message_text text;                                                                                                                                              
v_exception_detail text;                                                                                                                                          
v_src_id int4;                                                                                                                                                    
                                                                                                                                                                  
--记录处理日志相关                                                                                                                                                
v_proc_line_count int4;                                                                                                                                           
v_proc_line_fail_count int4;                                                                                                                                      
v_start_time TIMESTAMP;                                                                                                                                           
v_end_time TIMESTAMP;                                                                                                                                             
begin                                                                                                                                                             
v_proc_line_count:=0;                                                                                                                                             
v_proc_line_fail_count:=0;                                                                                                                                        
v_start_time:=now();       
o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;                                                                                                                                                                 
                                                                                                                                                          
--遍历 正式 vendor 表,处理关联字段列表如下                                                                                                                        
/*
    payment_term_id=fields.Many2one('payment.term',string=""Payment Term"")
    company_id=fields.Many2one('company',string=""Company Info"")
    purchase_org_id = fields.Many2one('pur.org.data',string=""Purchase Org"")
    incoterm_id=fields.Many2one('incoterm',string=""Incoterm"")
    address_odoo_id=fields.Many2one('address',string=""Address Id"")
    vendor_id = fields.Many2one('iac.vendor', string=""Vendor Info"")
    vendor_reg_id = fields.Many2one('iac.vendor.register', string=""Vendor Registration"")
*/                                                                                                                                                                  
for v_rc in select * from ""public"".iac_purchase_order where need_update_id=v_need_update_id  order by id LIMIT v_limit offset v_offset                                                                                             
loop                                                                                                                                                              
			begin
					perform ep_temp_master.proc_update_table_ref('iac_purchase_order' , 'payment_term_id', 'payment_term' , 'payment_term', v_rc.id, v_rc.payment_term);         
					perform ep_temp_master.proc_update_table_ref('iac_purchase_order' , 'company_id', 'company' , 'company_code', v_rc.id, v_rc.company_code);					
					perform ep_temp_master.proc_update_table_ref('iac_purchase_order' , 'purchase_org_id', 'vendor_plant' , 'vendor_purchase_code', v_rc.id, v_rc.vendor_code||v_rc.purchase_org);
					perform ep_temp_master.proc_update_table_ref('iac_purchase_order' , 'incoterm_id', 'incoterm' , 'incoterm', v_rc.id, v_rc.incoterm);
					perform ep_temp_master.proc_update_table_ref('iac_purchase_order' , 'address_odoo_id', 'address' , 'address_id', v_rc.id, v_rc.address_id);
					perform ep_temp_master.proc_update_table_ref('iac_purchase_order' , 'vendor_id', 'iac_vendor' , 'vendor_code', v_rc.id, v_rc.vendor_code);	
					perform ep_temp_master.proc_update_table_ref('iac_purchase_order' , 'vendor_reg_id', 'iac_vendor_register' , 'vendor_code', v_rc.id, v_rc.vendor_code);
					perform ep_temp_master.proc_update_table_ref('iac_purchase_order' , 'buyer_id', 'buyer_code' , 'buyer_erp_id', v_rc.id, v_rc.buyer_erp_id);
          perform ep_temp_master.proc_update_table_ref('iac_purchase_order' , 'currency_id', 'res_currency' , 'name', v_rc.id, v_rc.currency); 	 	                                                                                                                                                  

				  --更新plant_id
					UPDATE ""public"".iac_purchase_order T
					SET plant_id = (
						SELECT
							plant
						FROM
							""public"".iac_vendor v
						WHERE
							v. ID = T .vendor_id
					)
					WHERE
						T . ID = v_rc.id
					AND T .vendor_id IS NOT NULL;

				  v_proc_line_count:=v_proc_line_count+1;  
          o_update_count:=o_update_count+1;                                                                                                        
			EXCEPTION                                                                                                                                              
			when OTHERS THEN                                                                                                                                       
           GET STACKED DIAGNOSTICS                                                                                                 
                                   v_message_text = MESSAGE_TEXT,                                                                                                 
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                       
          v_table_name:='iac_purchase_order';                                                                                                                                 
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                  
					v_src_id=v_rc.id; 
          v_table_name:='po_header';                                                                                                                                
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);    
          v_proc_line_fail_count=v_proc_line_fail_count+1;
          o_fail_count:=o_fail_count+1;                                                                                                        
      end;                                                                                                                                                        
end loop;                                                                                                                                                         
                                                                                                                                                   
  return ;                                                                                                                                                       
                                                                                                                                                                  
                                                                                                                                                                  
end;                                                                                                                                                              
$function$
"
"proc_trans_table_po_partner","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_po_partner(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                         
                                                                                                                                                                
declare                                                                                                                                                         
v_rc	record;                                                                                                                                                  
v_pre_period_id integer;                                                                                                                                        
v_start_datetime varchar;                                                                                                                                       
v_end_datetime varchar;                                                                                                                                         
v_count_1	integer;                                                                                                                                             
                                                                                                                                                                
--异常捕获信息                                                                                                                                                  
v_table_name varchar;                                                                                                                                           
v_column_name varchar;                                                                                                                                          
v_message_text text;                                                                                                                                            
v_exception_detail text;                                                                                                                                        
v_src_id int4;                                                                                                                                                  
                                                                                                                                                                
--记录处理日志相关                                                                                                                                              
v_proc_line_count int4;                                                                                                                                         
v_proc_line_fail_count int4;                                                                                                                                    
v_start_time TIMESTAMP;                                                                                                                                         
v_end_time TIMESTAMP;                                                                                                                                           
begin                                                                                                                                                           
v_proc_line_count:=0;                                                                                                                                           
v_proc_line_fail_count:=0;                                                                                                                                      
v_start_time:=now();                                                                                                                                            
o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;                                                                                                                                                                 
                                                                                                                                                                                   
--遍历 address 表,数据转移到odoo正式表中                                                                                                                        
for v_rc in select * from ep_temp_master.po_partner  order by id LIMIT v_limit offset v_offset                                                                                                                                 
loop                                                                                                                                                            
			begin                                                                                                                                                
				 select count(*) into v_count_1 from ""public"".iac_purchase_order_partner where document_erp_id=v_rc.document_erp_id 
         and document_line_erp_id=v_rc.document_line_erp_id and partner_function=v_rc.partner_function;                                                          
				 --目标表中不存在相关记录,进行插入操作                                                                                                           
				 if v_count_1=0 THEN  
						INSERT INTO ""public"".iac_purchase_order_partner (
							document_erp_id,
							document_line_erp_id,
							purchase_org,
							partner_function,
							creation_date,
							reference_vendor_code,
							sap_log_id,
							sap_temp_id

						)
						VALUES
							(
								v_rc.document_erp_id,
								v_rc.document_line_erp_id,
								v_rc.purchase_org,
								v_rc.partner_function,
								v_rc.creation_date,
								v_rc.reference_vendor_code,
								v_sap_log_id,
								v_rc. ID
							);

            o_insert_count:=o_insert_count+1;                                                                                                               
				 end if;                                                                                                                                         
                                                                                                                                                                
				 --目标数据存在,进行更新操作                                                                                                                     
				if v_count_1=1 THEN  
					 UPDATE ""public"".iac_purchase_order_partner
					SET document_line_erp_id = v_rc.document_line_erp_id,
					 purchase_org = v_rc.purchase_org,
					 partner_function = v_rc.partner_function,
					 creation_date = v_rc.creation_date,
					 reference_vendor_code = v_rc.reference_vendor_code,
					 sap_log_id = v_sap_log_id,
					 sap_temp_id = v_rc. ID
					WHERE
						document_erp_id = v_rc.document_erp_id 
            and document_line_erp_id=v_rc.document_line_erp_id
            and  partner_function=v_rc.partner_function;     
           o_update_count:=o_update_count+1;                                                                                                                      
				end if;                                                                                                                                          
				v_proc_line_count:=v_proc_line_count+1;                                                                                                          
			EXCEPTION                                                                                                                                            
			when OTHERS THEN                                                                                                                                     
           GET STACKED DIAGNOSTICS                                                                                                
                                   v_message_text = MESSAGE_TEXT,                                                                                               
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                     
          v_table_name:='iac_purchase_order_partner';                                                                                                                              
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                
					v_src_id=v_rc.id;  
          v_table_name:='po_partner';                                                                                                                           
					perform write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);  
          v_proc_line_fail_count=v_proc_line_fail_count+1;    
          o_fail_count:=o_fail_count+1;                                                                                                  
      end;                                                                                                                                                      
end loop;                                                                                                                                                       
                                                                                                                                                      
  return ;                                                                                                                                                     
                                                                                                                                                                
end;                                                                                                                                                            
$function$
"
"proc_trans_table_po_partner_ref","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_po_partner_ref(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                           
                                                                                                                                                                  
declare                                                                                                                                                           
v_rc	record;                                                                                                                                                    
v_pre_period_id integer;                                                                                                                                          
v_start_datetime varchar;                                                                                                                                         
v_end_datetime varchar;                                                                                                                                           
v_count_1	integer;                                                                                                                                               
                                                                                                                                                                  
--异常捕获信息                                                                                                                                                    
v_table_name varchar;                                                                                                                                             
v_column_name varchar;                                                                                                                                            
v_message_text text;                                                                                                                                              
v_exception_detail text;                                                                                                                                          
v_src_id int4;                                                                                                                                                    
                                                                                                                                                                  
--记录处理日志相关                                                                                                                                                
v_proc_line_count int4;                                                                                                                                           
v_proc_line_fail_count int4;                                                                                                                                      
v_start_time TIMESTAMP;                                                                                                                                           
v_end_time TIMESTAMP;                                                                                                                                             
begin                                                                                                                                                             
v_proc_line_count:=0;                                                                                                                                             
v_proc_line_fail_count:=0;                                                                                                                                        
v_start_time:=now();         
o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;                                                                                                                                                                 
                                                                                                                                                        
--遍历 正式 vendor 表,处理关联字段列表如下                                                                                                                        
                                                                                                                                                                  
for v_rc in select * from ""public"".iac_purchase_order_partner where sap_log_id=v_sap_log_id  order by id LIMIT v_limit offset v_offset                                                                                             
loop                                                                                                                                                              
			begin 
					--更新 po_line_id
					UPDATE ""public"".iac_purchase_order_partner gr
					SET po_line_id = (
						SELECT
							ID
						FROM
							iac_purchase_order_line po_line
						WHERE
							po_line.document_erp_id = v_rc.document_erp_id
						AND po_line.document_line_erp_id = v_rc.document_line_erp_id
					)
					WHERE
						gr.id = v_rc.id
					AND EXISTS (
						SELECT
							1
						FROM
							iac_purchase_order_line po_line
						WHERE
							po_line.document_erp_id = v_rc.document_erp_id
						AND po_line.document_line_erp_id = v_rc.document_line_erp_id
					);
					perform ep_temp_master.proc_update_table_ref('iac_purchase_order_partner' , 'po_id', 'iac_purchase_order' , 'document_erp_id', v_rc.id, v_rc.document_erp_id);
					perform ep_temp_master.proc_update_table_ref('iac_purchase_order_partner' , 'purchase_org_id', 'vendor_plant' , 'vendor_purchase_code', v_rc.id, v_rc.reference_vendor_code||v_rc.purchase_org);
																																																																													 
				  v_proc_line_count:=v_proc_line_count+1;   
          o_update_count:=o_update_count+1;                                                                                                       
			EXCEPTION                                                                                                                                              
			when OTHERS THEN                                                                                                                                       
           GET STACKED DIAGNOSTICS                                                                                                 
                                   v_message_text = MESSAGE_TEXT,                                                                                                 
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                       
          v_table_name:='iac_purchase_order_partner';                                                                                                                                 
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                  
					v_src_id=v_rc.id;
          v_table_name:='po_partner';                                                                                                                               
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);    
          v_proc_line_fail_count=v_proc_line_fail_count+1;     
          o_fail_count:=o_fail_count+1;                                                                                                   
      end;                                                                                                                                                        
end loop;                                                                                                                                                         
                                                                                                                                                       
  return ;                                                                                                                                                       
                                                                                                                                                                  
                                                                                                                                                                  
end;                                                                                                                                                              
$function$
"
"proc_trans_table_po_partner_ref_2","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_po_partner_ref_2(v_sap_log_id character varying, v_need_update_id integer, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                           
                                                                                                                                                                  
declare                                                                                                                                                           
v_rc	record;                                                                                                                                                    
v_pre_period_id integer;                                                                                                                                          
v_start_datetime varchar;                                                                                                                                         
v_end_datetime varchar;                                                                                                                                           
v_count_1	integer;                                                                                                                                               
                                                                                                                                                                  
--异常捕获信息                                                                                                                                                    
v_table_name varchar;                                                                                                                                             
v_column_name varchar;                                                                                                                                            
v_message_text text;                                                                                                                                              
v_exception_detail text;                                                                                                                                          
v_src_id int4;                                                                                                                                                    
                                                                                                                                                                  
--记录处理日志相关                                                                                                                                                
v_proc_line_count int4;                                                                                                                                           
v_proc_line_fail_count int4;                                                                                                                                      
v_start_time TIMESTAMP;                                                                                                                                           
v_end_time TIMESTAMP;                                                                                                                                             
begin                                                                                                                                                             
v_proc_line_count:=0;                                                                                                                                             
v_proc_line_fail_count:=0;                                                                                                                                        
v_start_time:=now();         
o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;                                                                                                                                                                 
                                                                                                                                                        
--遍历 正式 vendor 表,处理关联字段列表如下                                                                                                                        
                                                                                                                                                                  
for v_rc in select * from ""public"".iac_purchase_order_partner where need_update_id=v_need_update_id  order by id LIMIT v_limit offset v_offset                                                                                             
loop                                                                                                                                                              
			begin 
					--更新 po_line_id
					UPDATE ""public"".iac_purchase_order_partner gr
					SET po_line_id = (
						SELECT
							ID
						FROM
							iac_purchase_order_line po_line
						WHERE
							po_line.document_erp_id = v_rc.document_erp_id
						AND po_line.document_line_erp_id = v_rc.document_line_erp_id
					)
					WHERE
						gr.id = v_rc.id
					AND EXISTS (
						SELECT
							1
						FROM
							iac_purchase_order_line po_line
						WHERE
							po_line.document_erp_id = v_rc.document_erp_id
						AND po_line.document_line_erp_id = v_rc.document_line_erp_id
					);
					perform ep_temp_master.proc_update_table_ref('iac_purchase_order_partner' , 'po_id', 'iac_purchase_order' , 'document_erp_id', v_rc.id, v_rc.document_erp_id);
					perform ep_temp_master.proc_update_table_ref('iac_purchase_order_partner' , 'purchase_org_id', 'vendor_plant' , 'vendor_purchase_code', v_rc.id, v_rc.reference_vendor_code||v_rc.purchase_org);
																																																																													 
				  v_proc_line_count:=v_proc_line_count+1;   
          o_update_count:=o_update_count+1;                                                                                                       
			EXCEPTION                                                                                                                                              
			when OTHERS THEN                                                                                                                                       
           GET STACKED DIAGNOSTICS                                                                                                 
                                   v_message_text = MESSAGE_TEXT,                                                                                                 
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                       
          v_table_name:='iac_purchase_order_partner';                                                                                                                                 
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                  
					v_src_id=v_rc.id;
          v_table_name:='po_partner';                                                                                                                               
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);    
          v_proc_line_fail_count=v_proc_line_fail_count+1;     
          o_fail_count:=o_fail_count+1;                                                                                                   
      end;                                                                                                                                                        
end loop;                                                                                                                                                         
                                                                                                                                                       
  return ;                                                                                                                                                       
                                                                                                                                                                  
                                                                                                                                                                  
end;                                                                                                                                                              
$function$
"
"proc_trans_table_pur_org_data","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_pur_org_data(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                         
                                                                                                                                                                
declare                                                                                                                                                         
v_rc	record;                                                                                                                                                  
v_pre_period_id integer;                                                                                                                                        
v_start_datetime varchar;                                                                                                                                       
v_end_datetime varchar;                                                                                                                                         
v_count_1	integer;                                                                                                                                             
                                                                                                                                                                
--异常捕获信息                                                                                                                                                  
v_table_name varchar;                                                                                                                                           
v_column_name varchar;                                                                                                                                          
v_message_text text;                                                                                                                                            
v_exception_detail text;                                                                                                                                        
v_src_id int4;                                                                                                                                                  
                                                                                                                                                                
--记录处理日志相关                                                                                                                                              
v_proc_line_count int4;                                                                                                                                         
v_proc_line_fail_count int4;                                                                                                                                    
v_start_time TIMESTAMP;                                                                                                                                         
v_end_time TIMESTAMP;                                                                                                                                           
begin                                                                                                                                                           
v_proc_line_count:=0;                                                                                                                                           
v_proc_line_fail_count:=0;                                                                                                                                      
v_start_time:=now();                                                                                                                                            

o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;   
                                                                                                                                                                
--遍历 address 表,数据转移到odoo正式表中                                                                                                                        
for v_rc in select * from ep_temp_master.pur_org_data    order by id LIMIT v_limit offset v_offset                                                                                                                               
loop                                                                                                                                                            
			begin                                                                                                                                                
				 select count(*) into v_count_1 from ""public"".pur_org_data where purchase_org=v_rc.purchase_org 
         and plant_code=v_rc.plant_code;                                                          
				 --目标表中不存在相关记录,进行插入操作                                                                                                           
				 if v_count_1=0 THEN 
						INSERT INTO ""public"".pur_org_data (
							plant_code,
							plant_name_cn,
							plant_name_en,
							purchase_org,
							plant_code1,
							address_id,
							sap_log_id,
							sap_temp_id
						)
						VALUES
							(
								v_rc.plant_code,
								v_rc.plant_name_cn,
								v_rc.plant_name_en,
								v_rc.purchase_org,
								v_rc.plant_code1,
								v_rc.address_id,
								v_sap_log_id,
								v_rc. ID
							);  
            o_insert_count:=o_insert_count+1;                                                                                                                          
				 end if;                                                                                                                                         
                                                                                                                                                                
				 --目标数据存在,进行更新操作                                                                                                                     
				if v_count_1=1 THEN  
						UPDATE ""public"".pur_org_data
						SET plant_code = v_rc.plant_code,
						 plant_name_cn = v_rc.plant_name_cn,
						 plant_name_en = v_rc.plant_name_en,
						 plant_code1 = v_rc.plant_code1,
						 address_id = v_rc.address_id,
						 sap_log_id = v_sap_log_id,
						 sap_temp_id = v_rc. ID
						WHERE
							purchase_org = v_rc.purchase_org 
              and plant_code=v_rc.plant_code;
            o_update_count:=o_update_count+1;                                                                                                                  
				end if;                                                                                                                                          
				v_proc_line_count:=v_proc_line_count+1;                                                                                                          
			EXCEPTION                                                                                                                                            
			when OTHERS THEN                                                                                                                                     
           GET STACKED DIAGNOSTICS                                                                                                 
                                   v_message_text = MESSAGE_TEXT,                                                                                               
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                     
          v_table_name:='pur_org_data';                                                                                                                              
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                
					v_src_id=v_rc.id;                                                                                                                            
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);  
          v_proc_line_fail_count=v_proc_line_fail_count+1;
          o_fail_count:=o_fail_count+1;                                                                                                      
      end;                                                                                                                                                      
end loop;                                                                                                                                                       
                                                                                                                                                     
  return ;                                                                                                                                                     
                                                                                                                                                                
end;                                                                                                                                                            
$function$
"
"proc_trans_table_pur_org_data_ref","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_pur_org_data_ref(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                           
                                                                                                                                                                  
declare                                                                                                                                                           
v_rc	record;                                                                                                                                                    
v_pre_period_id integer;                                                                                                                                          
v_start_datetime varchar;                                                                                                                                         
v_end_datetime varchar;                                                                                                                                           
v_count_1	integer;                                                                                                                                               
                                                                                                                                                                  
--异常捕获信息                                                                                                                                                    
v_table_name varchar;                                                                                                                                             
v_column_name varchar;                                                                                                                                            
v_message_text text;                                                                                                                                              
v_exception_detail text;                                                                                                                                          
v_src_id int4;                                                                                                                                                    
                                                                                                                                                                  
--记录处理日志相关                                                                                                                                                
v_proc_line_count int4;                                                                                                                                           
v_proc_line_fail_count int4;                                                                                                                                      
v_start_time TIMESTAMP;                                                                                                                                           
v_end_time TIMESTAMP;                                                                                                                                             
begin                                                                                                                                                             
v_proc_line_count:=0;                                                                                                                                             
v_proc_line_fail_count:=0;                                                                                                                                        
v_start_time:=now();     

o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;                                                                                                                                            
--遍历 正式 vendor 表,处理关联字段列表如下                                                                                                                        
/*
    address_odoo_id=fields.Many2one('address','Address Info')
    plant_id=fields.Many2one(""vendor.plant"",string=""Plant Info"")
*/                                                                                                                                                                  

for v_rc in select * from ""public"".pur_org_data where sap_log_id=v_sap_log_id order by id LIMIT v_limit offset v_offset                                                                                              
loop                                                                                                                                                              
			begin                 
					--perform proc_update_table_ref('inforecord_history' , 'part_id', 'material_master' , 'part_no', v_rc.id, v_rc.part_no);         
					--perform proc_update_table_ref('inforecord_history' , 'vendor_id', 'iac_vendor' , 'vendor_code', v_rc.id, v_rc.vendor_code);
					--perform proc_update_table_ref('inforecord_history' , 'vendor_reg_id', 'iac_vendor_register' , 'vendor_code', v_rc.id, v_rc.vendor_code);
					--perform proc_update_table_ref('inforecord_history' , 'purchase_org_id', 'vendor_plant' , 'vendor_purchase_code', v_rc.id, v_rc.vendor_code||v_rc.purchase_org);
					--perform proc_update_table_ref('inforecord_history' , 'plant_id', 'pur_org_data' , 'plant_code', v_rc.id, v_rc.plant_code);
					--perform proc_update_table_ref('company' , 'address_odoo_id', 'address' , 'address_id', v_rc.id, v_rc.address_id);

						--perform proc_update_table_ref('pur_org_data' , 'plant_id', 'pur_org_data' , 'plant_code', v_rc.id, v_rc.plant_code);						
						perform ep_temp_master.proc_update_table_ref('pur_org_data' , 'address_odoo_id', 'address' , 'address_id', v_rc.id, v_rc.address_id);
	                                                                                                                                               
				  v_proc_line_count:=v_proc_line_count+1;  
           o_update_count:=o_update_count+1;                                                                                                        
			EXCEPTION                                                                                                                                              
			when OTHERS THEN                                                                                                                                       
           GET STACKED DIAGNOSTICS                                                                                                   
                                   v_message_text = MESSAGE_TEXT,                                                                                                 
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                       
          v_table_name:='pur_org_data';                                                                                                                                 
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                  
					v_src_id=v_rc.id;                                                                                                                              
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);    
          v_proc_line_fail_count=v_proc_line_fail_count+1;
          o_fail_count:=o_fail_count+1;                                                                                                        
      end;                                                                                                                                                        
end loop;                                                                                                                                                         
                                                                                                                                                       
  return ;                                                                                                                                                       
                                                                                                                                                                  
                                                                                                                                                                  
end;                                                                                                                                                              
$function$
"
"proc_trans_table_pur_org_data_ref_2","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_pur_org_data_ref_2(v_sap_log_id character varying, v_need_update_id integer, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                           
                                                                                                                                                                  
declare                                                                                                                                                           
v_rc	record;                                                                                                                                                    
v_pre_period_id integer;                                                                                                                                          
v_start_datetime varchar;                                                                                                                                         
v_end_datetime varchar;                                                                                                                                           
v_count_1	integer;                                                                                                                                               
                                                                                                                                                                  
--异常捕获信息                                                                                                                                                    
v_table_name varchar;                                                                                                                                             
v_column_name varchar;                                                                                                                                            
v_message_text text;                                                                                                                                              
v_exception_detail text;                                                                                                                                          
v_src_id int4;                                                                                                                                                    
                                                                                                                                                                  
--记录处理日志相关                                                                                                                                                
v_proc_line_count int4;                                                                                                                                           
v_proc_line_fail_count int4;                                                                                                                                      
v_start_time TIMESTAMP;                                                                                                                                           
v_end_time TIMESTAMP;                                                                                                                                             
begin                                                                                                                                                             
v_proc_line_count:=0;                                                                                                                                             
v_proc_line_fail_count:=0;                                                                                                                                        
v_start_time:=now();     

o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;                                                                                                                                            
--遍历 正式 vendor 表,处理关联字段列表如下                                                                                                                        
/*
    address_odoo_id=fields.Many2one('address','Address Info')
    plant_id=fields.Many2one(""vendor.plant"",string=""Plant Info"")
*/                                                                                                                                                                  

for v_rc in select * from ""public"".pur_org_data where need_update_id=v_need_update_id order by id LIMIT v_limit offset v_offset                                                                                              
loop                                                                                                                                                              
			begin                 
					--perform proc_update_table_ref('inforecord_history' , 'part_id', 'material_master' , 'part_no', v_rc.id, v_rc.part_no);         
					--perform proc_update_table_ref('inforecord_history' , 'vendor_id', 'iac_vendor' , 'vendor_code', v_rc.id, v_rc.vendor_code);
					--perform proc_update_table_ref('inforecord_history' , 'vendor_reg_id', 'iac_vendor_register' , 'vendor_code', v_rc.id, v_rc.vendor_code);
					--perform proc_update_table_ref('inforecord_history' , 'purchase_org_id', 'vendor_plant' , 'vendor_purchase_code', v_rc.id, v_rc.vendor_code||v_rc.purchase_org);
					--perform proc_update_table_ref('inforecord_history' , 'plant_id', 'pur_org_data' , 'plant_code', v_rc.id, v_rc.plant_code);
					--perform proc_update_table_ref('company' , 'address_odoo_id', 'address' , 'address_id', v_rc.id, v_rc.address_id);

						--perform proc_update_table_ref('pur_org_data' , 'plant_id', 'pur_org_data' , 'plant_code', v_rc.id, v_rc.plant_code);						
						perform ep_temp_master.proc_update_table_ref('pur_org_data' , 'address_odoo_id', 'address' , 'address_id', v_rc.id, v_rc.address_id);
	                                                                                                                                               
				  v_proc_line_count:=v_proc_line_count+1;  
           o_update_count:=o_update_count+1;                                                                                                        
			EXCEPTION                                                                                                                                              
			when OTHERS THEN                                                                                                                                       
           GET STACKED DIAGNOSTICS                                                                                                   
                                   v_message_text = MESSAGE_TEXT,                                                                                                 
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                       
          v_table_name:='pur_org_data';                                                                                                                                 
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                  
					v_src_id=v_rc.id;                                                                                                                              
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);    
          v_proc_line_fail_count=v_proc_line_fail_count+1;
          o_fail_count:=o_fail_count+1;                                                                                                        
      end;                                                                                                                                                        
end loop;                                                                                                                                                         
                                                                                                                                                       
  return ;                                                                                                                                                       
                                                                                                                                                                  
                                                                                                                                                                  
end;                                                                                                                                                              
$function$
"
"proc_trans_table_ship_instruct","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_ship_instruct(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                         
                                                                                                                                                                
declare                                                                                                                                                         
v_rc	record;                                                                                                                                                  
v_pre_period_id integer;                                                                                                                                        
v_start_datetime varchar;                                                                                                                                       
v_end_datetime varchar;                                                                                                                                         
v_count_1	integer;                                                                                                                                             
                                                                                                                                                                
--异常捕获信息                                                                                                                                                  
v_table_name varchar;                                                                                                                                           
v_column_name varchar;                                                                                                                                          
v_message_text text;                                                                                                                                            
v_exception_detail text;                                                                                                                                        
v_src_id int4;                                                                                                                                                  
                                                                                                                                                                
--记录处理日志相关                                                                                                                                              
v_proc_line_count int4;                                                                                                                                         
v_proc_line_fail_count int4;                                                                                                                                    
v_start_time TIMESTAMP;                                                                                                                                         
v_end_time TIMESTAMP;                                                                                                                                           
begin                                                                                                                                                           
v_proc_line_count:=0;                                                                                                                                           
v_proc_line_fail_count:=0;                                                                                                                                      
v_start_time:=now();                                                                                                                                            

o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;   
                                                                                                                                                                
--遍历 address 表,数据转移到odoo正式表中                                                                                                                        
for v_rc in select * from ep_temp_master.ship_instruct   order by id LIMIT v_limit offset v_offset                                                                                                                                
loop                                                                                                                                                            
			begin                                                                                                                                                
				 select count(*) into v_count_1 from ""public"".ship_instruct where ship_id=v_rc.ship_id;                                                          
				 --目标表中不存在相关记录,进行插入操作                                                                                                           
				 if v_count_1=0 THEN   
						INSERT INTO ""public"".ship_instruct (
							language_key,
							ship_id,
							ship_description,
							sap_log_id,
							sap_temp_id
						)
						VALUES
							(
								v_rc.language_key,
								v_rc.ship_id,
								v_rc.ship_description,
								v_sap_log_id,
								v_rc. ID
							); 
            o_insert_count:=o_insert_count+1;                                                                                                                         
				 end if;                                                                                                                                         
                                                                                                                                                                
				 --目标数据存在,进行更新操作                                                                                                                     
				if v_count_1=1 THEN  
						UPDATE ""public"".ship_instruct
						SET language_key = v_rc.language_key,
						 ship_description = v_rc.ship_description,
						 sap_log_id = v_sap_log_id,
						 sap_temp_id = v_rc. ID
						WHERE
							ship_id = v_rc.ship_id;        
            o_update_count:=o_update_count+1;                                                                                                                    
				end if;                                                                                                                                          
				v_proc_line_count:=v_proc_line_count+1;                                                                                                          
			EXCEPTION                                                                                                                                            
			when OTHERS THEN                                                                                                                                     
           GET STACKED DIAGNOSTICS                                                                                                
                                   v_message_text = MESSAGE_TEXT,                                                                                               
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                     
          v_table_name:='ship_instruct';                                                                                                                              
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                
					v_src_id=v_rc.id;                                                                                                                            
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);  
          v_proc_line_fail_count=v_proc_line_fail_count+1;  
          o_fail_count:=o_fail_count+1;                                                                                                    
      end;                                                                                                                                                      
end loop;                                                                                                                                                       
                                                                                                                                                    
  return ;                                                                                                                                                     
                                                                                                                                                                
end;                                                                                                                                                            
$function$
"
"proc_trans_table_ship_instruct_ref","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_ship_instruct_ref(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                           
                                                                                                                                                                  
declare                                                                                                                                                           
v_rc	record;                                                                                                                                                    
v_pre_period_id integer;                                                                                                                                          
v_start_datetime varchar;                                                                                                                                         
v_end_datetime varchar;                                                                                                                                           
v_count_1	integer;                                                                                                                                               
                                                                                                                                                                  
--异常捕获信息                                                                                                                                                    
v_table_name varchar;                                                                                                                                             
v_column_name varchar;                                                                                                                                            
v_message_text text;                                                                                                                                              
v_exception_detail text;                                                                                                                                          
v_src_id int4;                                                                                                                                                    
                                                                                                                                                                  
--记录处理日志相关                                                                                                                                                
v_proc_line_count int4;                                                                                                                                           
v_proc_line_fail_count int4;                                                                                                                                      
v_start_time TIMESTAMP;                                                                                                                                           
v_end_time TIMESTAMP;                                                                                                                                             
begin                                                                                                                                                             
v_proc_line_count:=0;                                                                                                                                             
v_proc_line_fail_count:=0;                                                                                                                                        
v_start_time:=now();                                                                                                                                              
--遍历 正式 vendor 表,处理关联字段列表如下                                                                                                                        
o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;                                                                                                                                                                     
for v_rc in select * from ""public"".ship_instruct where sap_log_id=v_sap_log_id  order by id LIMIT v_limit offset v_offset                                                                                             
loop                                                                                                                                                              
			begin                                                                                                                                                  
				  v_proc_line_count:=v_proc_line_count+1;                                                                                                          
			EXCEPTION                                                                                                                                              
			when OTHERS THEN                                                                                                                                       
           GET STACKED DIAGNOSTICS                                                                                                 
                                   v_message_text = MESSAGE_TEXT,                                                                                                 
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                       
          v_table_name:='ship_instruct';                                                                                                                                 
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                  
					v_src_id=v_rc.id;                                                                                                                              
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);    
          v_proc_line_fail_count=v_proc_line_fail_count+1;    
          o_fail_count:=o_fail_count+1;                                                                                                    
      end;                                                                                                                                                        
end loop;                                                                                                                                                         
                                                                                                                                                     
  return ;                                                                                                                                                       
                                                                                                                                                                  
                                                                                                                                                                  
end;                                                                                                                                                              
$function$
"
"proc_trans_table_ship_instruct_ref_2","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_ship_instruct_ref_2(v_sap_log_id character varying, v_need_update_id integer, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                           
                                                                                                                                                                  
declare                                                                                                                                                           
v_rc	record;                                                                                                                                                    
v_pre_period_id integer;                                                                                                                                          
v_start_datetime varchar;                                                                                                                                         
v_end_datetime varchar;                                                                                                                                           
v_count_1	integer;                                                                                                                                               
                                                                                                                                                                  
--异常捕获信息                                                                                                                                                    
v_table_name varchar;                                                                                                                                             
v_column_name varchar;                                                                                                                                            
v_message_text text;                                                                                                                                              
v_exception_detail text;                                                                                                                                          
v_src_id int4;                                                                                                                                                    
                                                                                                                                                                  
--记录处理日志相关                                                                                                                                                
v_proc_line_count int4;                                                                                                                                           
v_proc_line_fail_count int4;                                                                                                                                      
v_start_time TIMESTAMP;                                                                                                                                           
v_end_time TIMESTAMP;                                                                                                                                             
begin                                                                                                                                                             
v_proc_line_count:=0;                                                                                                                                             
v_proc_line_fail_count:=0;                                                                                                                                        
v_start_time:=now();                                                                                                                                              
--遍历 正式 vendor 表,处理关联字段列表如下                                                                                                                        
o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;                                                                                                                                                                     
for v_rc in select * from ""public"".ship_instruct where need_update_id=v_need_update_id  order by id LIMIT v_limit offset v_offset                                                                                             
loop                                                                                                                                                              
			begin                                                                                                                                                  
				  v_proc_line_count:=v_proc_line_count+1;                                                                                                          
			EXCEPTION                                                                                                                                              
			when OTHERS THEN                                                                                                                                       
           GET STACKED DIAGNOSTICS                                                                                                 
                                   v_message_text = MESSAGE_TEXT,                                                                                                 
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                       
          v_table_name:='ship_instruct';                                                                                                                                 
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                  
					v_src_id=v_rc.id;                                                                                                                              
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);    
          v_proc_line_fail_count=v_proc_line_fail_count+1;    
          o_fail_count:=o_fail_count+1;                                                                                                    
      end;                                                                                                                                                        
end loop;                                                                                                                                                         
                                                                                                                                                     
  return ;                                                                                                                                                       
                                                                                                                                                                  
                                                                                                                                                                  
end;                                                                                                                                                              
$function$
"
"proc_trans_table_source_list","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_source_list(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                         
                                                                                                                                                                
declare                                                                                                                                                         
v_rc	record;                                                                                                                                                  
v_pre_period_id integer;                                                                                                                                        
v_start_datetime varchar;                                                                                                                                       
v_end_datetime varchar;                                                                                                                                         
v_count_1	integer;                                                                                                                                             
                                                                                                                                                                
--异常捕获信息                                                                                                                                                  
v_table_name varchar;                                                                                                                                           
v_column_name varchar;                                                                                                                                          
v_message_text text;                                                                                                                                            
v_exception_detail text;                                                                                                                                        
v_src_id int4;                                                                                                                                                  
                                                                                                                                                                
--记录处理日志相关                                                                                                                                              
v_proc_line_count int4;                                                                                                                                         
v_proc_line_fail_count int4;                                                                                                                                    
v_start_time TIMESTAMP;                                                                                                                                         
v_end_time TIMESTAMP;                                                                                                                                           
begin                                                                                                                                                           
v_proc_line_count:=0;                                                                                                                                           
v_proc_line_fail_count:=0;                                                                                                                                      
v_start_time:=now();                                                                                                                                            

o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;  
                                                                                                                                                                
--遍历 address 表,数据转移到odoo正式表中                                                                                                                        
for v_rc in select * from ep_temp_master.source_list  order by id LIMIT v_limit offset v_offset                                                                                                                                 
loop                                                                                                                                                            
			begin                                                                                                                                                
				 select count(*) into v_count_1 from ""public"".source_list where 	part_no = v_rc.part_no
						AND plant_code = v_rc.plant_code and vendor_code=v_rc.vendor_code;                                                          
				 --目标表中不存在相关记录,进行插入操作                                                                                                           
				 if v_count_1=0 THEN
						INSERT INTO ""public"".source_list (
							part_no,
							plant_code,
							record_number,
							creation_date,
							created_by,
							valid_from,
							valid_to,
							vendor_code,
							isfix_flag,
							agree_number,
							agree_item,
							fixed_outline,
							procured_plant,
							issue_plant,
							manufacturer_part_no,
							block_flag,
							purchase_org,
							po_category,
							record_category,
							mrp_indicator,
							unit_of_measure,
							logical_system,
							special_stock_indicator,
							sap_log_id,
							sap_temp_id
						)
						VALUES
							(
								v_rc.part_no,
								v_rc.plant_code,
								v_rc.record_number,
								v_rc.creation_date,
								v_rc.created_by,
								v_rc.valid_from,
								v_rc.valid_to,
								v_rc.vendor_code,
								v_rc.isfix_flag,
								v_rc.agree_number,
								v_rc.agree_item,
								v_rc.fixed_outline,
								v_rc.procured_plant,
								v_rc.issue_plant,
								v_rc.manufacturer_part_no,
								v_rc.block_flag,
								v_rc.purchase_org,
								v_rc.po_category,
								v_rc.record_category,
								v_rc.mrp_indicator,
								v_rc.unit_of_measure,
								v_rc.logical_system,
								v_rc.special_stock_indicator,
								v_sap_log_id,
								v_rc. ID
							); 
            o_insert_count:=o_insert_count+1;                                                                                                                            
				 end if;                                                                                                                                         
                                                                                                                                                                
				 --目标数据存在,进行更新操作                                                                                                                     
				if v_count_1=1 THEN
						UPDATE ""public"".source_list
						SET record_number = v_rc.record_number,
						 creation_date = v_rc.creation_date,
						 created_by = v_rc.created_by,
						 valid_from = v_rc.valid_from,
						 valid_to = v_rc.valid_to,
						 vendor_code = v_rc.vendor_code,
						 isfix_flag = v_rc.isfix_flag,
						 agree_number = v_rc.agree_number,
						 agree_item = v_rc.agree_item,
						 fixed_outline = v_rc.fixed_outline,
						 procured_plant = v_rc.procured_plant,
						 issue_plant = v_rc.issue_plant,
						 manufacturer_part_no = v_rc.manufacturer_part_no,
						 block_flag = v_rc.block_flag,
						 purchase_org = v_rc.purchase_org,
						 po_category = v_rc.po_category,
						 record_category = v_rc.record_category,
						 mrp_indicator = v_rc.mrp_indicator,
						 unit_of_measure = v_rc.unit_of_measure,
						 logical_system = v_rc.logical_system,
						 special_stock_indicator = v_rc.special_stock_indicator,
						 sap_log_id = v_sap_log_id,
						 sap_temp_id = v_rc. ID
						WHERE
							part_no = v_rc.part_no
						AND plant_code = v_rc.plant_code and vendor_code=v_rc.vendor_code;      
            o_update_count:=o_update_count+1;                                                                                                                         
				end if;                                                                                                                                          
				v_proc_line_count:=v_proc_line_count+1;                                                                                                          
			EXCEPTION                                                                                                                                            
			when OTHERS THEN                                                                                                                                     
           GET STACKED DIAGNOSTICS                                                                                                
                                   v_message_text = MESSAGE_TEXT,                                                                                               
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                     
          v_table_name:='source_list';                                                                                                                              
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                
					v_src_id=v_rc.id;                                                                                                                            
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);  
          v_proc_line_fail_count=v_proc_line_fail_count+1;    
          o_fail_count:=o_fail_count+1;                                                                                                  
      end;                                                                                                                                                      
end loop;                                                                                                                                                       
                                                                                                                                                     
  return ;                                                                                                                                                     
                                                                                                                                                                
end;                                                                                                                                                            
$function$
"
"proc_trans_table_source_list_ref","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_source_list_ref(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                           
                                                                                                                                                                  
declare                                                                                                                                                           
v_rc	record;                                                                                                                                                    
v_pre_period_id integer;                                                                                                                                          
v_start_datetime varchar;                                                                                                                                         
v_end_datetime varchar;                                                                                                                                           
v_count_1	integer;                                                                                                                                               
                                                                                                                                                                  
--异常捕获信息                                                                                                                                                    
v_table_name varchar;                                                                                                                                             
v_column_name varchar;                                                                                                                                            
v_message_text text;                                                                                                                                              
v_exception_detail text;                                                                                                                                          
v_src_id int4;                                                                                                                                                    
                                                                                                                                                                  
--记录处理日志相关                                                                                                                                                
v_proc_line_count int4;                                                                                                                                           
v_proc_line_fail_count int4;                                                                                                                                      
v_start_time TIMESTAMP;                                                                                                                                           
v_end_time TIMESTAMP;                                                                                                                                             
begin                                                                                                                                                             
v_proc_line_count:=0;                                                                                                                                             
v_proc_line_fail_count:=0;                                                                                                                                        
v_start_time:=now();        

o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;  
                                                                                                                                      
--遍历 正式 vendor 表,处理关联字段列表如下                                                                                                                        
                 
/*
    vendor_id = fields.Many2one('iac.vendor', string=""Vendor Info"")
    vendor_reg_id = fields.Many2one('iac.vendor.register', string=""Vendor Registration"")
    purchase_org_id=fields.Many2one(""vendor.plant"",string=""Purchase Org Info"")
    plant_id = fields.Many2one('pur.org.data', string=""Plant Info"")
*/                                                                                                                                                 
for v_rc in select * from ""public"".source_list where sap_log_id=v_sap_log_id    order by id LIMIT v_limit offset v_offset                                                                                           
loop                                                                                                                                                              
			begin
					perform ep_temp_master.proc_update_table_ref('source_list' , 'vendor_id', 'iac_vendor' , 'vendor_code', v_rc.id, v_rc.vendor_code);
					perform ep_temp_master.proc_update_table_ref('source_list' , 'vendor_reg_id', 'iac_vendor_register' , 'vendor_code', v_rc.id, v_rc.vendor_code);
					perform ep_temp_master.proc_update_table_ref('source_list' , 'purchase_org_id', 'vendor_plant' , 'vendor_purchase_code', v_rc.id, v_rc.vendor_code||v_rc.purchase_org);
					perform ep_temp_master.proc_update_table_ref('source_list' , 'plant_id', 'pur_org_data' , 'plant_code', v_rc.id, v_rc.plant_code);
					perform ep_temp_master.proc_update_table_ref('source_list' , 'part_id', 'material_master' , 'part_unique_code', v_rc.id, v_rc.part_no||v_rc.plant_code);                   
	                                                                                                                                                  
				  v_proc_line_count:=v_proc_line_count+1;   
          o_update_count:=o_update_count+1;                                                                                                       
			EXCEPTION                                                                                                                                              
			when OTHERS THEN                                                                                                                                       
           GET STACKED DIAGNOSTICS                                                                                                  
                                   v_message_text = MESSAGE_TEXT,                                                                                                 
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                       
          v_table_name:='source_list';                                                                                                                                 
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                  
					v_src_id=v_rc.id;                                                                                                                              
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);    
          v_proc_line_fail_count=v_proc_line_fail_count+1;  
          o_fail_count:=o_fail_count+1;                                                                                                      
      end;                                                                                                                                                        
end loop;                                                                                                                                                         
                                                                                                                                                        
  return ;                                                                                                                                                       
                                                                                                                                                                  
                                                                                                                                                                  
end;                                                                                                                                                              
$function$
"
"proc_trans_table_source_list_ref_2","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_source_list_ref_2(v_sap_log_id character varying, v_need_update_id integer, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                           
                                                                                                                                                                  
declare                                                                                                                                                           
v_rc	record;                                                                                                                                                    
v_pre_period_id integer;                                                                                                                                          
v_start_datetime varchar;                                                                                                                                         
v_end_datetime varchar;                                                                                                                                           
v_count_1	integer;                                                                                                                                               
                                                                                                                                                                  
--异常捕获信息                                                                                                                                                    
v_table_name varchar;                                                                                                                                             
v_column_name varchar;                                                                                                                                            
v_message_text text;                                                                                                                                              
v_exception_detail text;                                                                                                                                          
v_src_id int4;                                                                                                                                                    
                                                                                                                                                                  
--记录处理日志相关                                                                                                                                                
v_proc_line_count int4;                                                                                                                                           
v_proc_line_fail_count int4;                                                                                                                                      
v_start_time TIMESTAMP;                                                                                                                                           
v_end_time TIMESTAMP;                                                                                                                                             
begin                                                                                                                                                             
v_proc_line_count:=0;                                                                                                                                             
v_proc_line_fail_count:=0;                                                                                                                                        
v_start_time:=now();        

o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;  
                                                                                                                                      
--遍历 正式 vendor 表,处理关联字段列表如下                                                                                                                        
                 
/*
    vendor_id = fields.Many2one('iac.vendor', string=""Vendor Info"")
    vendor_reg_id = fields.Many2one('iac.vendor.register', string=""Vendor Registration"")
    purchase_org_id=fields.Many2one(""vendor.plant"",string=""Purchase Org Info"")
    plant_id = fields.Many2one('pur.org.data', string=""Plant Info"")
*/                                                                                                                                                 
for v_rc in select * from ""public"".source_list where need_update_id=v_need_update_id    order by id LIMIT v_limit offset v_offset                                                                                           
loop                                                                                                                                                              
			begin
					perform ep_temp_master.proc_update_table_ref('source_list' , 'vendor_id', 'iac_vendor' , 'vendor_code', v_rc.id, v_rc.vendor_code);
					perform ep_temp_master.proc_update_table_ref('source_list' , 'vendor_reg_id', 'iac_vendor_register' , 'vendor_code', v_rc.id, v_rc.vendor_code);
					perform ep_temp_master.proc_update_table_ref('source_list' , 'purchase_org_id', 'vendor_plant' , 'vendor_purchase_code', v_rc.id, v_rc.vendor_code||v_rc.purchase_org);
					perform ep_temp_master.proc_update_table_ref('source_list' , 'plant_id', 'pur_org_data' , 'plant_code', v_rc.id, v_rc.plant_code);
					perform ep_temp_master.proc_update_table_ref('source_list' , 'part_id', 'material_master' , 'part_unique_code', v_rc.id, v_rc.part_no||v_rc.plant_code);                   
	                                                                                                                                                  
				  v_proc_line_count:=v_proc_line_count+1;   
          o_update_count:=o_update_count+1;                                                                                                       
			EXCEPTION                                                                                                                                              
			when OTHERS THEN                                                                                                                                       
           GET STACKED DIAGNOSTICS                                                                                                  
                                   v_message_text = MESSAGE_TEXT,                                                                                                 
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                       
          v_table_name:='source_list';                                                                                                                                 
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                  
					v_src_id=v_rc.id;                                                                                                                              
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);    
          v_proc_line_fail_count=v_proc_line_fail_count+1;  
          o_fail_count:=o_fail_count+1;                                                                                                      
      end;                                                                                                                                                        
end loop;                                                                                                                                                         
                                                                                                                                                        
  return ;                                                                                                                                                       
                                                                                                                                                                  
                                                                                                                                                                  
end;                                                                                                                                                              
$function$
"
"proc_trans_table_storage_location","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_storage_location(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                         
                                                                                                                                                                
declare                                                                                                                                                         
v_rc	record;                                                                                                                                                  
v_pre_period_id integer;                                                                                                                                        
v_start_datetime varchar;                                                                                                                                       
v_end_datetime varchar;                                                                                                                                         
v_count_1	integer;                                                                                                                                             
                                                                                                                                                                
--异常捕获信息                                                                                                                                                  
v_table_name varchar;                                                                                                                                           
v_column_name varchar;                                                                                                                                          
v_message_text text;                                                                                                                                            
v_exception_detail text;                                                                                                                                        
v_src_id int4;                                                                                                                                                  
                                                                                                                                                                
--记录处理日志相关                                                                                                                                              
v_proc_line_count int4;                                                                                                                                         
v_proc_line_fail_count int4;                                                                                                                                    
v_start_time TIMESTAMP;                                                                                                                                         
v_end_time TIMESTAMP;                                                                                                                                           
begin                                                                                                                                                           
v_proc_line_count:=0;                                                                                                                                           
v_proc_line_fail_count:=0;                                                                                                                                      
v_start_time:=now();                                                                                                                                            
o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;                                                                                                                                                                 
                                                                                                                                                                                   
--遍历 address 表,数据转移到odoo正式表中                                                                                                                        
for v_rc in select * from ep_temp_master.storage_location order by id LIMIT v_limit offset v_offset                                                                                                                                   
loop                                                                                                                                                            
			begin                                                                                                                                                
				 select count(*) into v_count_1 from ""public"".storage_location where 	plant_code = v_rc.plant_code
						AND storage_location = v_rc.storage_location     ;                                                            
				 --目标表中不存在相关记录,进行插入操作                                                                                                           
				 if v_count_1=0 THEN  
						INSERT INTO ""public"".storage_location (
							plant_code,
							storage_location,
							description,
							sap_log_id,
							sap_temp_id
						)
						VALUES
							(
								v_rc.plant_code,
								v_rc.storage_location,
								v_rc.description,
								v_sap_log_id,
								v_rc. ID
							);   
            o_insert_count:=o_insert_count+1;                                                                                                                        
				 end if;                                                                                                                                         
                                                                                                                                                                
				 --目标数据存在,进行更新操作                                                                                                                     
				if v_count_1=1 THEN
						UPDATE ""public"".storage_location
						SET description = v_rc.description,
						 sap_log_id = v_sap_log_id,
						 sap_temp_id = v_rc. ID
						WHERE
							plant_code = v_rc.plant_code
						AND storage_location = v_rc.storage_location;   
           o_update_count:=o_update_count+1;                                                                                                                           
				end if;                                                                                                                                          
				v_proc_line_count:=v_proc_line_count+1;                                                                                                          
			EXCEPTION                                                                                                                                            
			when OTHERS THEN                                                                                                                                     
           GET STACKED DIAGNOSTICS                                                                                              
                                   v_message_text = MESSAGE_TEXT,                                                                                               
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                     
          v_table_name:='storage_location';                                                                                                                              
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                
					v_src_id=v_rc.id;                                                                                                                            
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);  
          v_proc_line_fail_count=v_proc_line_fail_count+1;    
          o_fail_count:=o_fail_count+1;                                                                                                  
      end;                                                                                                                                                      
end loop;                                                                                                                                                       
                                                                                                                                                      
  return ;                                                                                                                                                     
                                                                                                                                                                
end;                                                                                                                                                            
$function$
"
"proc_trans_table_storage_location_ref","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_storage_location_ref(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                           
                                                                                                                                                                  
declare                                                                                                                                                           
v_rc	record;                                                                                                                                                    
v_pre_period_id integer;                                                                                                                                          
v_start_datetime varchar;                                                                                                                                         
v_end_datetime varchar;                                                                                                                                           
v_count_1	integer;                                                                                                                                               
                                                                                                                                                                  
--异常捕获信息                                                                                                                                                    
v_table_name varchar;                                                                                                                                             
v_column_name varchar;                                                                                                                                            
v_message_text text;                                                                                                                                              
v_exception_detail text;                                                                                                                                          
v_src_id int4;                                                                                                                                                    
                                                                                                                                                                  
--记录处理日志相关                                                                                                                                                
v_proc_line_count int4;                                                                                                                                           
v_proc_line_fail_count int4;                                                                                                                                      
v_start_time TIMESTAMP;                                                                                                                                           
v_end_time TIMESTAMP;                                                                                                                                             
begin                                                                                                                                                             
v_proc_line_count:=0;                                                                                                                                             
v_proc_line_fail_count:=0;                                                                                                                                        
v_start_time:=now();        
o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;                                                                                                                                                                 
                                                                                                                                                         
--遍历 正式 vendor 表,处理关联字段列表如下                                                                                                                        
                                                                                                                                                                  
for v_rc in select * from ""public"".storage_location where sap_log_id=v_sap_log_id  order by id LIMIT v_limit offset v_offset                                                                                             
loop                                                                                                                                                              
			begin 
					perform ep_temp_master.proc_update_table_ref('storage_location' , 'plant_id', 'pur_org_data' , 'plant_code', v_rc.id, v_rc.plant_code);                                                                                                                                                 
				  v_proc_line_count:=v_proc_line_count+1; 
          o_update_count:=o_update_count+1;                                                                                                         
			EXCEPTION                                                                                                                                              
			when OTHERS THEN                                                                                                                                       
           GET STACKED DIAGNOSTICS                                                                                                  
                                   v_message_text = MESSAGE_TEXT,                                                                                                 
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                       
          v_table_name:='storage_location';                                                                                                                                 
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                  
					v_src_id=v_rc.id;                                                                                                                              
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);    
          v_proc_line_fail_count=v_proc_line_fail_count+1; 
          o_fail_count:=o_fail_count+1;                                                                                                       
      end;                                                                                                                                                        
end loop;                                                                                                                                                         
                                                                                                                                                       
  return ;                                                                                                                                                       
                                                                                                                                                                  
                                                                                                                                                                  
end;                                                                                                                                                              
$function$
"
"proc_trans_table_storage_location_ref_2","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_storage_location_ref_2(v_sap_log_id character varying, v_need_update_id integer, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                           
                                                                                                                                                                  
declare                                                                                                                                                           
v_rc	record;                                                                                                                                                    
v_pre_period_id integer;                                                                                                                                          
v_start_datetime varchar;                                                                                                                                         
v_end_datetime varchar;                                                                                                                                           
v_count_1	integer;                                                                                                                                               
                                                                                                                                                                  
--异常捕获信息                                                                                                                                                    
v_table_name varchar;                                                                                                                                             
v_column_name varchar;                                                                                                                                            
v_message_text text;                                                                                                                                              
v_exception_detail text;                                                                                                                                          
v_src_id int4;                                                                                                                                                    
                                                                                                                                                                  
--记录处理日志相关                                                                                                                                                
v_proc_line_count int4;                                                                                                                                           
v_proc_line_fail_count int4;                                                                                                                                      
v_start_time TIMESTAMP;                                                                                                                                           
v_end_time TIMESTAMP;                                                                                                                                             
begin                                                                                                                                                             
v_proc_line_count:=0;                                                                                                                                             
v_proc_line_fail_count:=0;                                                                                                                                        
v_start_time:=now();        
o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;                                                                                                                                                                 
                                                                                                                                                         
--遍历 正式 vendor 表,处理关联字段列表如下                                                                                                                        
                                                                                                                                                                  
for v_rc in select * from ""public"".storage_location where need_update_id=v_need_update_id  order by id LIMIT v_limit offset v_offset                                                                                             
loop                                                                                                                                                              
			begin 
					perform ep_temp_master.proc_update_table_ref('storage_location' , 'plant_id', 'pur_org_data' , 'plant_code', v_rc.id, v_rc.plant_code);                                                                                                                                                 
				  v_proc_line_count:=v_proc_line_count+1; 
          o_update_count:=o_update_count+1;                                                                                                         
			EXCEPTION                                                                                                                                              
			when OTHERS THEN                                                                                                                                       
           GET STACKED DIAGNOSTICS                                                                                                  
                                   v_message_text = MESSAGE_TEXT,                                                                                                 
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                       
          v_table_name:='storage_location';                                                                                                                                 
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                  
					v_src_id=v_rc.id;                                                                                                                              
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);    
          v_proc_line_fail_count=v_proc_line_fail_count+1; 
          o_fail_count:=o_fail_count+1;                                                                                                       
      end;                                                                                                                                                        
end loop;                                                                                                                                                         
                                                                                                                                                       
  return ;                                                                                                                                                       
                                                                                                                                                                  
                                                                                                                                                                  
end;                                                                                                                                                              
$function$
"
"proc_trans_table_vendor","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_vendor(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$

declare
v_rc	record;
v_pre_period_id integer;
v_start_datetime varchar;
v_end_datetime varchar;
v_count_1	integer;

--异常捕获信息
v_table_name varchar;
v_column_name varchar;
v_message_text text;
v_exception_detail text;
v_src_id int4;

--记录处理日志相关
v_proc_line_count int4;
v_proc_line_fail_count int4;
v_start_time TIMESTAMP;
v_end_time TIMESTAMP;
begin

v_proc_line_count:=0;
v_proc_line_fail_count:=0;
--遍历vendor表,数据转移到odoo正式表中
v_start_time:=now();
o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;                                                                                                                                                                 
                   

for v_rc in select * from ep_temp_master.vendor order by id LIMIT v_limit offset v_offset    
loop
			begin 
				 select count(*) into v_count_1 from ""public"".vendor where vendor_code=v_rc.vendor_code;
				 --目标表中不存在相关记录,进行插入操作
				 if v_count_1=0 THEN
							INSERT INTO ""public"".vendor (
								name1_cn,
								address_street,
								address_city,
								address_district,
								address_region,
								address_postalcode,
								address_pobox,
								address_country,
								company_telephone1,
								company_telephone2,
								company_fax,
								vendor_code,
								po_box,
								language_key,
								address_id,
								short_name,
								purchase_block,
								vat_number,
								payment_block,
								plant_code,
								vendor_account_group,
								title,
								name2_cn,
								name1_en,
								name2_en,
								po_box_city,
								deletion_flag,
								deletion_block,
								vendor_url,
								sap_log_id,
								sap_temp_id
							)
							VALUES
								(
									v_rc.name1_cn,
									v_rc.address_street,
									v_rc.address_city,
									v_rc.address_district,
									v_rc.address_region,
									v_rc.address_postalcode,
									v_rc.address_pobox,
									v_rc.address_country,
									v_rc.company_telephone1,
									v_rc.company_telephone2,
									v_rc.company_fax,
									v_rc.vendor_code,
									v_rc.po_box,
									v_rc.language_key,
									v_rc.address_id,
									v_rc.short_name,
									v_rc.purchase_block,
									v_rc.vat_number,
									v_rc.payment_block,
									v_rc.plant_code,
									v_rc.vendor_account_group,
									v_rc.title,
									v_rc.name2_cn,
									v_rc.name1_en,
									v_rc.name2_en,
									v_rc.po_box_city,
									v_rc.deletion_flag,
									v_rc.deletion_block,
									v_rc.vendor_url,
									v_sap_log_id,
									v_rc.id
								);	
            o_insert_count:=o_insert_count+1;  
				 end if;

				 --目标数据存在,进行更新操作
				if v_count_1=1 THEN

						UPDATE ""public"".vendor
						SET name1_cn = v_rc.name1_cn,
						address_street = v_rc.address_street,
						address_city = v_rc.address_city,
						address_district = v_rc.address_district,
						address_region = v_rc.address_region,
						address_postalcode = v_rc.address_postalcode,
						address_pobox = v_rc.address_pobox,
						address_country = v_rc.address_country,
						company_telephone1 = v_rc.company_telephone1,
						company_telephone2 = v_rc.company_telephone2,
						company_fax = v_rc.company_fax,
						po_box = v_rc.po_box,
						language_key = v_rc.language_key,
						address_id = v_rc.address_id,
						short_name = v_rc.short_name,
						purchase_block = v_rc.purchase_block,
						vat_number = v_rc.vat_number,
						payment_block = v_rc.payment_block,
						plant_code = v_rc.plant_code,
						vendor_account_group = v_rc.vendor_account_group,
						title = v_rc.title,
						name2_cn = v_rc.name2_cn,
						name1_en = v_rc.name1_en,
						name2_en = v_rc.name2_en,
						po_box_city = v_rc.po_box_city,
						deletion_flag = v_rc.deletion_flag,
						deletion_block = v_rc.deletion_block,
						vendor_url = v_rc.vendor_url,
						sap_log_id=v_sap_log_id,
						sap_temp_id=v_rc.id
						WHERE
										vendor_code = v_rc.vendor_code; 	
            o_update_count:=o_update_count+1;
				end if;
				v_proc_line_count:=v_proc_line_count+1;
			EXCEPTION
			when OTHERS THEN
           GET STACKED DIAGNOSTICS 
                                   v_message_text = MESSAGE_TEXT,
																	 v_exception_detail=PG_EXCEPTION_DETAIL;
          v_table_name:='vendor';
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';
					v_src_id=v_rc.id;
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);
          v_proc_line_fail_count=v_proc_line_fail_count+1;
          o_fail_count:=o_fail_count+1;
      end;

end loop;

  return ;
end;
$function$
"
"proc_trans_table_vendor_bank","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_vendor_bank(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$

declare
v_rc	record;
v_pre_period_id integer;
v_start_datetime varchar;
v_end_datetime varchar;
v_count_1	integer;

--异常捕获信息
v_table_name varchar;
v_column_name varchar;
v_message_text text;
v_exception_detail text;
v_src_id int4;

--记录处理日志相关
v_proc_line_count int4;
v_proc_line_fail_count int4;
v_start_time TIMESTAMP;
v_end_time TIMESTAMP;
begin
v_proc_line_count:=0;
v_proc_line_fail_count:=0;
v_start_time:=now();

o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;                                                                                                                                                                 
                   

--遍历vendor_bank表,数据转移到odoo正式表中
for v_rc in select * from ep_temp_master.vendor_bank order by id LIMIT v_limit offset v_offset    
loop
			begin
				 select count(*) into v_count_1 from ""public"".vendor_bank where vendor_code=v_rc.vendor_code 
         and bank_key=v_rc.bank_key;
				 --目标表中不存在相关记录,进行插入操作
				 if v_count_1=0 THEN

						insert into ""public"".vendor_bank (
							bank_country_code,
							bank_key,
							vendor_code,
							account_number,
							bank_control_key,
							partner_bank_type,
							special_bank_detail,
							account_hold_number,
							creation_date,
							create_by,
							name,
							bank_region,
							lanuage_key,
							bank_city,
							swift_code,
							bank_group,
							post_account,
							deletion_flag,
							bank_number,
							post_current_bank_number,
							address_id,
							branch,
							sap_log_id,
							sap_temp_id
						)
						values
							(
								v_rc.bank_country_code,
								v_rc.bank_key,
								v_rc.vendor_code,
								v_rc.account_number,
								v_rc.bank_control_key,
								v_rc.partner_bank_type,
								v_rc.special_bank_detail,
								v_rc.account_hold_number,
								v_rc.creation_date,
								v_rc.create_by,
								v_rc. name,
								v_rc.bank_region,
								v_rc.lanuage_key,
								v_rc.bank_city,
								v_rc.swift_code,
								v_rc.bank_group,
								v_rc.post_account,
								v_rc.deletion_flag,
								v_rc.bank_number,
								v_rc.post_current_bank_number,
								v_rc.address_id,
								v_rc.branch,
								v_sap_log_id,
								v_rc.id
							);
						o_insert_count:=o_insert_count+1;
				 end if;

				 --目标数据存在,进行更新操作
				if v_count_1=1 THEN
						update ""public"".vendor_bank
						set bank_country_code = v_rc.bank_country_code,
						 bank_key = v_rc.bank_key,
						 account_number = v_rc.account_number,
						 bank_control_key = v_rc.bank_control_key,
						 partner_bank_type = v_rc.partner_bank_type,
						 special_bank_detail = v_rc.special_bank_detail,
						 account_hold_number = v_rc.account_hold_number,
						 creation_date = v_rc.creation_date,
						 create_by = v_rc.create_by,
						 name = v_rc. name,
						 bank_region = v_rc.bank_region,
						 lanuage_key = v_rc.lanuage_key,
						 bank_city = v_rc.bank_city,
						 swift_code = v_rc.swift_code,
						 bank_group = v_rc.bank_group,
						 post_account = v_rc.post_account,
						 deletion_flag = v_rc.deletion_flag,
						 bank_number = v_rc.bank_number,
						 post_current_bank_number = v_rc.post_current_bank_number,
						 address_id = v_rc.address_id,
						 branch = v_rc.branch,
						 sap_log_id=v_sap_log_id,
						 sap_temp_id=v_rc.id
						where
							vendor_code = v_rc.vendor_code and bank_key=v_rc.bank_key;
            o_update_count:=o_update_count+1;
				end if;
				v_proc_line_count:=v_proc_line_count+1;
			EXCEPTION
			when OTHERS THEN
           GET STACKED DIAGNOSTICS 
                                   v_message_text = MESSAGE_TEXT,
																	 v_exception_detail=PG_EXCEPTION_DETAIL;
          v_table_name:='vendor_bank';
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';
					v_src_id=v_rc.id;
					perform write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);
          v_proc_line_fail_count=v_proc_line_fail_count+1;
          
          o_fail_count:=o_fail_count+1;
      end;

end loop;

  return ;
end;
$function$
"
"proc_trans_table_vendor_bank_ref","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_vendor_bank_ref(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$

declare
v_rc	record;
v_pre_period_id integer;
v_start_datetime varchar;
v_end_datetime varchar;
v_count_1	integer;

--异常捕获信息
v_table_name varchar;
v_column_name varchar;
v_message_text text;
v_exception_detail text;
v_src_id int4;

--记录处理日志相关
v_proc_line_count int4;
v_proc_line_fail_count int4;
v_start_time TIMESTAMP;
v_end_time TIMESTAMP;   
begin
v_proc_line_count:=0;
v_proc_line_fail_count:=0;
v_start_time:=now();

o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;                                                                                                                                                                 
                   
--遍历 正式 vendor_bank 表,处理关联字段列表如下
/*
    bank_country_id=fields.Many2one('res.country',string=""Bank Country Info"")
    address_odoo_id=fields.Many2one('address',string=""Address Id"")
    vendor_id = fields.Many2one('iac.vendor', string=""Vendor Info"")
    vendor_reg_id = fields.Many2one('iac.vendor.register', string=""Vendor Registration"")
*/
for v_rc in select * from ""public"".vendor_bank where sap_log_id=v_sap_log_id order by id LIMIT v_limit offset v_offset    
loop
			begin 
					perform ep_temp_master.proc_update_table_ref('vendor_bank' , 'vendor_id', 'iac_vendor' , 'vendor_code', v_rc.id, v_rc.vendor_code);
					perform ep_temp_master.proc_update_table_ref('vendor_bank' , 'vendor_reg_id', 'iac_vendor_register' , 'vendor_code', v_rc.id, v_rc.vendor_code);
					perform ep_temp_master.proc_update_table_ref('vendor_bank' , 'bank_country_id', 'res_country' , 'code', v_rc.id, v_rc.bank_country_code);
					perform ep_temp_master.proc_update_table_ref('vendor_bank' , 'address_odoo_id', 'address' , 'address_id', v_rc.id, v_rc.address_id);
					--select proc_update_table_ref('vendor_certified' , 'incoterm_id', 'incoterm' , 'incoterm', v_rc.id, v_rc.incoterm);
					--select proc_update_table_ref('vendor_certified' , 'purchase_org_id', 'pur_org_data' , 'purchase_org', v_rc.id, v_rc.purchase_org);
					--select proc_update_table_ref('vendor_plant' , 'address_country_id', 'res.country' , 'code', v_rc.id, v_rc.address_country);
					--select proc_update_table_ref('vendor_plant' , 'address_odoo_id', 'address' , 'address_id', v_rc.id, v_rc.address_id);
					--select proc_update_table_ref('vendor_plant' , 'plant_id', 'vendor_plant' , 'vendor_code', v_rc.id, v_rc.vendor_code);
				  v_proc_line_count:=v_proc_line_count+1;
          o_update_count:=o_update_count+1;
			EXCEPTION
			when OTHERS THEN
           GET STACKED DIAGNOSTICS 
                                   v_message_text = MESSAGE_TEXT,
																	 v_exception_detail=PG_EXCEPTION_DETAIL;
          v_table_name:='vendor_bank';
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';
					v_src_id=v_rc.id;
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);
          v_proc_line_fail_count=v_proc_line_fail_count+1;
          o_fail_count:=o_fail_count+1;
      end;
end loop;

  return ;		

end;
$function$
"
"proc_trans_table_vendor_bank_ref_2","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_vendor_bank_ref_2(v_sap_log_id character varying, v_need_update_id integer, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$

declare
v_rc	record;
v_pre_period_id integer;
v_start_datetime varchar;
v_end_datetime varchar;
v_count_1	integer;

--异常捕获信息
v_table_name varchar;
v_column_name varchar;
v_message_text text;
v_exception_detail text;
v_src_id int4;

--记录处理日志相关
v_proc_line_count int4;
v_proc_line_fail_count int4;
v_start_time TIMESTAMP;
v_end_time TIMESTAMP;   
begin
v_proc_line_count:=0;
v_proc_line_fail_count:=0;
v_start_time:=now();

o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;                                                                                                                                                                 
                   
--遍历 正式 vendor_bank 表,处理关联字段列表如下
/*
    bank_country_id=fields.Many2one('res.country',string=""Bank Country Info"")
    address_odoo_id=fields.Many2one('address',string=""Address Id"")
    vendor_id = fields.Many2one('iac.vendor', string=""Vendor Info"")
    vendor_reg_id = fields.Many2one('iac.vendor.register', string=""Vendor Registration"")
*/
for v_rc in select * from ""public"".vendor_bank where need_update_id=v_need_update_id order by id LIMIT v_limit offset v_offset    
loop
			begin 
					perform ep_temp_master.proc_update_table_ref('vendor_bank' , 'vendor_id', 'iac_vendor' , 'vendor_code', v_rc.id, v_rc.vendor_code);
					perform ep_temp_master.proc_update_table_ref('vendor_bank' , 'vendor_reg_id', 'iac_vendor_register' , 'vendor_code', v_rc.id, v_rc.vendor_code);
					perform ep_temp_master.proc_update_table_ref('vendor_bank' , 'bank_country_id', 'res_country' , 'code', v_rc.id, v_rc.bank_country_code);
					perform ep_temp_master.proc_update_table_ref('vendor_bank' , 'address_odoo_id', 'address' , 'address_id', v_rc.id, v_rc.address_id);
					--select proc_update_table_ref('vendor_certified' , 'incoterm_id', 'incoterm' , 'incoterm', v_rc.id, v_rc.incoterm);
					--select proc_update_table_ref('vendor_certified' , 'purchase_org_id', 'pur_org_data' , 'purchase_org', v_rc.id, v_rc.purchase_org);
					--select proc_update_table_ref('vendor_plant' , 'address_country_id', 'res.country' , 'code', v_rc.id, v_rc.address_country);
					--select proc_update_table_ref('vendor_plant' , 'address_odoo_id', 'address' , 'address_id', v_rc.id, v_rc.address_id);
					--select proc_update_table_ref('vendor_plant' , 'plant_id', 'vendor_plant' , 'vendor_code', v_rc.id, v_rc.vendor_code);
				  v_proc_line_count:=v_proc_line_count+1;
          o_update_count:=o_update_count+1;
			EXCEPTION
			when OTHERS THEN
           GET STACKED DIAGNOSTICS 
                                   v_message_text = MESSAGE_TEXT,
																	 v_exception_detail=PG_EXCEPTION_DETAIL;
          v_table_name:='vendor_bank';
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';
					v_src_id=v_rc.id;
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);
          v_proc_line_fail_count=v_proc_line_fail_count+1;
          o_fail_count:=o_fail_count+1;
      end;
end loop;

  return ;		

end;
$function$
"
"proc_trans_table_vendor_certified","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_vendor_certified(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$

declare
v_rc	record;
v_pre_period_id integer;
v_start_datetime varchar;
v_end_datetime varchar;
v_count_1	integer;

--异常捕获信息
v_table_name varchar;
v_column_name varchar;
v_message_text text;
v_exception_detail text;
v_src_id int4;

--记录处理日志相关
v_proc_line_count int4;
v_proc_line_fail_count int4;
v_start_time TIMESTAMP;
v_end_time TIMESTAMP;

begin

v_proc_line_count:=0;
v_proc_line_fail_count:=0;

o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;                                                                                                                                                                 
                   
--遍历vendor_certified表,数据转移到odoo正式表中
for v_rc in select * from ep_temp_master.vendor_certified order by id LIMIT v_limit offset v_offset    
loop

			begin
				 select count(*) into v_count_1 from ""public"".vendor_certified where vendor_code=v_rc.vendor_code;
				 --目标表中不存在相关记录,进行插入操作
				 if v_count_1=0 THEN
						insert into ""public"".vendor_certified (
							vendor_code,
							vendor_email,
							supplier_type,
							score_thisyear,
							class_thisyear,
							score_previous,
							class_previous,
							sap_log_id,
							sap_temp_id
						)
						values
							(
								v_rc.vendor_code,
								v_rc.vendor_email,
								v_rc.supplier_type,
								v_rc.score_thisyear,
								v_rc.class_thisyear,
								v_rc.score_previous,
								v_rc.class_previous,
								v_sap_log_id,
								v_rc.id
							);
						o_insert_count:=o_insert_count+1;
				 end if;

				 --目标数据存在,进行更新操作
				if v_count_1=1 THEN
						update ""public"".vendor_certified
						set 
						 vendor_email = v_rc.vendor_email,
						 supplier_type = v_rc.supplier_type,
						 score_thisyear = v_rc.score_thisyear,
						 class_thisyear = v_rc.class_thisyear,
						 score_previous = v_rc.score_previous,
						 class_previous = v_rc.class_previous,
						 sap_log_id=v_sap_log_id,
						 sap_temp_id=v_rc.id
						where
							vendor_code = v_rc.vendor_code;
            o_update_count:=o_update_count+1;
				end if;
				v_proc_line_count:=v_proc_line_count+1;
			EXCEPTION
			when OTHERS THEN
           GET STACKED DIAGNOSTICS 
                                   v_message_text = MESSAGE_TEXT,
																	 v_exception_detail=PG_EXCEPTION_DETAIL;
          v_table_name:='vendor_certified';
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';
					v_src_id=v_rc.id;
					perform write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);
          v_proc_line_fail_count=v_proc_line_fail_count+1;
          
          o_fail_count:=o_fail_count+1;
      end;	
end loop;


  return ;

end;
$function$
"
"proc_trans_table_vendor_certified_ref","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_vendor_certified_ref(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$

declare
v_rc	record;
v_pre_period_id integer;
v_start_datetime varchar;
v_end_datetime varchar;
v_count_1	integer;

--异常捕获信息
v_table_name varchar;
v_column_name varchar;
v_message_text text;
v_exception_detail text;
v_src_id int4;

--记录处理日志相关
v_proc_line_count int4;
v_proc_line_fail_count int4;
v_start_time TIMESTAMP;
v_end_time TIMESTAMP; 
begin
v_proc_line_count:=0;
v_proc_line_fail_count:=0;
v_start_time:=now();

o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;                                                                                                                                                                 
                   
--遍历 正式 vendor_certified 表,处理关联字段列表如下
/*
    vendor_id = fields.Many2one('iac.vendor', string=""Vendor Info"")
    vendor_reg_id = fields.Many2one('iac.vendor.register', string=""Vendor Registration"")
*/
for v_rc in select * from ""public"".vendor_certified where sap_log_id=v_sap_log_id order by id LIMIT v_limit offset v_offset    
loop
			begin
					perform ep_temp_master.proc_update_table_ref('vendor_certified' , 'vendor_id', 'iac_vendor' , 'vendor_code', v_rc.id, v_rc.vendor_code);
					perform ep_temp_master.proc_update_table_ref('vendor_certified' , 'vendor_reg_id', 'iac_vendor_register' , 'vendor_code', v_rc.id, v_rc.vendor_code);
					--select proc_update_table_ref('vendor_plant' , 'payment_term_id', 'payment_term' , 'payment_term', v_rc.id, v_rc.payment_term);
					--select proc_update_table_ref('vendor_certified' , 'incoterm_id', 'incoterm' , 'incoterm', v_rc.id, v_rc.incoterm);
					--select proc_update_table_ref('vendor_certified' , 'purchase_org_id', 'pur_org_data' , 'purchase_org', v_rc.id, v_rc.purchase_org);
					--select proc_update_table_ref('vendor_plant' , 'address_country_id', 'res.country' , 'code', v_rc.id, v_rc.address_country);
					--select proc_update_table_ref('vendor_plant' , 'address_odoo_id', 'address' , 'address_id', v_rc.id, v_rc.address_id);
					--select proc_update_table_ref('vendor_plant' , 'plant_id', 'vendor_plant' , 'vendor_code', v_rc.id, v_rc.vendor_code);
				  v_proc_line_count:=v_proc_line_count+1;
          
          o_update_count:=o_update_count+1;
			EXCEPTION
			when OTHERS THEN
           GET STACKED DIAGNOSTICS 
                                   v_message_text = MESSAGE_TEXT,
																	 v_exception_detail=PG_EXCEPTION_DETAIL;
          v_table_name:='vendor_certified';
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';
					v_src_id=v_rc.id;
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);
          v_proc_line_fail_count=v_proc_line_fail_count+1;
          
          o_fail_count:=o_fail_count+1;
      end;
end loop;

  return ;	
	

end;
$function$
"
"proc_trans_table_vendor_certified_ref_2","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_vendor_certified_ref_2(v_sap_log_id character varying, v_need_update_id integer, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$

declare
v_rc	record;
v_pre_period_id integer;
v_start_datetime varchar;
v_end_datetime varchar;
v_count_1	integer;

--异常捕获信息
v_table_name varchar;
v_column_name varchar;
v_message_text text;
v_exception_detail text;
v_src_id int4;

--记录处理日志相关
v_proc_line_count int4;
v_proc_line_fail_count int4;
v_start_time TIMESTAMP;
v_end_time TIMESTAMP; 
begin
v_proc_line_count:=0;
v_proc_line_fail_count:=0;
v_start_time:=now();

o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;                                                                                                                                                                 
                   
--遍历 正式 vendor_certified 表,处理关联字段列表如下
/*
    vendor_id = fields.Many2one('iac.vendor', string=""Vendor Info"")
    vendor_reg_id = fields.Many2one('iac.vendor.register', string=""Vendor Registration"")
*/
for v_rc in select * from ""public"".vendor_certified where need_update_id=v_need_update_id order by id LIMIT v_limit offset v_offset    
loop
			begin
					perform ep_temp_master.proc_update_table_ref('vendor_certified' , 'vendor_id', 'iac_vendor' , 'vendor_code', v_rc.id, v_rc.vendor_code);
					perform ep_temp_master.proc_update_table_ref('vendor_certified' , 'vendor_reg_id', 'iac_vendor_register' , 'vendor_code', v_rc.id, v_rc.vendor_code);
					--select proc_update_table_ref('vendor_plant' , 'payment_term_id', 'payment_term' , 'payment_term', v_rc.id, v_rc.payment_term);
					--select proc_update_table_ref('vendor_certified' , 'incoterm_id', 'incoterm' , 'incoterm', v_rc.id, v_rc.incoterm);
					--select proc_update_table_ref('vendor_certified' , 'purchase_org_id', 'pur_org_data' , 'purchase_org', v_rc.id, v_rc.purchase_org);
					--select proc_update_table_ref('vendor_plant' , 'address_country_id', 'res.country' , 'code', v_rc.id, v_rc.address_country);
					--select proc_update_table_ref('vendor_plant' , 'address_odoo_id', 'address' , 'address_id', v_rc.id, v_rc.address_id);
					--select proc_update_table_ref('vendor_plant' , 'plant_id', 'vendor_plant' , 'vendor_code', v_rc.id, v_rc.vendor_code);
				  v_proc_line_count:=v_proc_line_count+1;
          
          o_update_count:=o_update_count+1;
			EXCEPTION
			when OTHERS THEN
           GET STACKED DIAGNOSTICS 
                                   v_message_text = MESSAGE_TEXT,
																	 v_exception_detail=PG_EXCEPTION_DETAIL;
          v_table_name:='vendor_certified';
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';
					v_src_id=v_rc.id;
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);
          v_proc_line_fail_count=v_proc_line_fail_count+1;
          
          o_fail_count:=o_fail_count+1;
      end;
end loop;

  return ;	
	

end;
$function$
"
"proc_trans_table_vendor_group","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_vendor_group(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                         
                                                                                                                                                                
declare                                                                                                                                                         
v_rc	record;                                                                                                                                                  
v_pre_period_id integer;                                                                                                                                        
v_start_datetime varchar;                                                                                                                                       
v_end_datetime varchar;                                                                                                                                         
v_count_1	integer;                                                                                                                                             
                                                                                                                                                                
--异常捕获信息                                                                                                                                                  
v_table_name varchar;                                                                                                                                           
v_column_name varchar;                                                                                                                                          
v_message_text text;                                                                                                                                            
v_exception_detail text;                                                                                                                                        
v_src_id int4;                                                                                                                                                  
                                                                                                                                                                
--记录处理日志相关                                                                                                                                              
v_proc_line_count int4;                                                                                                                                         
v_proc_line_fail_count int4;                                                                                                                                    
v_start_time TIMESTAMP;                                                                                                                                         
v_end_time TIMESTAMP;                                                                                                                                           
begin                                                                                                                                                           
v_proc_line_count:=0;                                                                                                                                           
v_proc_line_fail_count:=0;                                                                                                                                      
v_start_time:=now();                                                                                                                                            

o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;   
                                                                                                                                                                
--遍历 address 表,数据转移到odoo正式表中                                                                                                                        
for v_rc in select * from ep_temp_master.vendor_group order by id LIMIT v_limit offset v_offset                                                                                                                                  
loop                                                                                                                                                            
			begin                                                                                                                                                
				 select count(*) into v_count_1 from ""public"".vendor_group where vendor_account_group=v_rc.vendor_account_group 
          and account_group_name=v_rc.account_group_name;                                                          
				 --目标表中不存在相关记录,进行插入操作                                                                                                           
				 if v_count_1=0 THEN     
						INSERT INTO ""public"".vendor_group (
							language_key,
							vendor_account_group,
							account_group_name,
							sap_log_id,
							sap_temp_id
						)
						VALUES
							(
								v_rc.language_key,
								v_rc.vendor_account_group,
								v_rc.account_group_name,
								v_sap_log_id,
								v_rc. ID
							);
           o_insert_count:=o_insert_count+1;                                                                                                                        
				 end if;                                                                                                                                         
                                                                                                                                                                
				 --目标数据存在,进行更新操作                                                                                                                     
				if v_count_1=1 THEN  
					UPDATE ""public"".vendor_group
					SET language_key = v_rc.language_key,
					 vendor_account_group = v_rc.vendor_account_group,
					 account_group_name = v_rc.account_group_name,
					 sap_log_id = v_sap_log_id,
					 sap_temp_id = v_rc. ID
					WHERE
						vendor_account_group = v_rc.vendor_account_group and 
						account_group_name = v_rc.account_group_name;
          o_update_count:=o_update_count+1;                                                                                                                            
				end if;                                                                                                                                          
				v_proc_line_count:=v_proc_line_count+1;                                                                                                          
			EXCEPTION                                                                                                                                            
			when OTHERS THEN                                                                                                                                     
           GET STACKED DIAGNOSTICS                                                                                                 
                                   v_message_text = MESSAGE_TEXT,                                                                                               
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                     
          v_table_name:='vendor_group';                                                                                                                              
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                
					v_src_id=v_rc.id;                                                                                                                            
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);  
          v_proc_line_fail_count=v_proc_line_fail_count+1;
          o_fail_count:=o_fail_count+1;                                                                                                      
      end;                                                                                                                                                      
end loop;                                                                                                                                                       
                                                                                                                                                      
  return ;                                                                                                                                                     
                                                                                                                                                                
end;                                                                                                                                                            
$function$
"
"proc_trans_table_vendor_group_ref","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_vendor_group_ref(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                           
                                                                                                                                                                  
declare                                                                                                                                                           
v_rc	record;                                                                                                                                                    
v_pre_period_id integer;                                                                                                                                          
v_start_datetime varchar;                                                                                                                                         
v_end_datetime varchar;                                                                                                                                           
v_count_1	integer;                                                                                                                                               
                                                                                                                                                                  
--异常捕获信息                                                                                                                                                    
v_table_name varchar;                                                                                                                                             
v_column_name varchar;                                                                                                                                            
v_message_text text;                                                                                                                                              
v_exception_detail text;                                                                                                                                          
v_src_id int4;                                                                                                                                                    
                                                                                                                                                                  
--记录处理日志相关                                                                                                                                                
v_proc_line_count int4;                                                                                                                                           
v_proc_line_fail_count int4;                                                                                                                                      
v_start_time TIMESTAMP;                                                                                                                                           
v_end_time TIMESTAMP;                                                                                                                                             
begin                                                                                                                                                             
v_proc_line_count:=0;                                                                                                                                             
v_proc_line_fail_count:=0;                                                                                                                                        
v_start_time:=now();          
o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;                                                                                                                                       
--遍历 正式 vendor 表,处理关联字段列表如下                                                                                                                        
                                                                                                                                                                  
for v_rc in select * from ""public"".vendor_group where sap_log_id=v_sap_log_id  order by id LIMIT v_limit offset v_offset                                                                                             
loop                                                                                                                                                              
			begin                                                                                                                                                  
				  v_proc_line_count:=v_proc_line_count+1;                                                                                                          
			EXCEPTION                                                                                                                                              
			when OTHERS THEN                                                                                                                                       
           GET STACKED DIAGNOSTICS                                                                                                
                                   v_message_text = MESSAGE_TEXT,                                                                                                 
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                       
          v_table_name:='vendor_group';                                                                                                                                 
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                  
					v_src_id=v_rc.id;                                                                                                                              
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);    
          v_proc_line_fail_count=v_proc_line_fail_count+1;     
          o_fail_count:=o_fail_count+1;                                                                                                   
      end;                                                                                                                                                        
end loop;                                                                                                                                                         
                                                                                                                                                        
  return ;                                                                                                                                                       
                                                                                                                                                                  
                                                                                                                                                                  
end;                                                                                                                                                              
$function$
"
"proc_trans_table_vendor_group_ref_2","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_vendor_group_ref_2(v_sap_log_id character varying, v_need_update_id integer, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                           
                                                                                                                                                                  
declare                                                                                                                                                           
v_rc	record;                                                                                                                                                    
v_pre_period_id integer;                                                                                                                                          
v_start_datetime varchar;                                                                                                                                         
v_end_datetime varchar;                                                                                                                                           
v_count_1	integer;                                                                                                                                               
                                                                                                                                                                  
--异常捕获信息                                                                                                                                                    
v_table_name varchar;                                                                                                                                             
v_column_name varchar;                                                                                                                                            
v_message_text text;                                                                                                                                              
v_exception_detail text;                                                                                                                                          
v_src_id int4;                                                                                                                                                    
                                                                                                                                                                  
--记录处理日志相关                                                                                                                                                
v_proc_line_count int4;                                                                                                                                           
v_proc_line_fail_count int4;                                                                                                                                      
v_start_time TIMESTAMP;                                                                                                                                           
v_end_time TIMESTAMP;                                                                                                                                             
begin                                                                                                                                                             
v_proc_line_count:=0;                                                                                                                                             
v_proc_line_fail_count:=0;                                                                                                                                        
v_start_time:=now();          
o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;                                                                                                                                       
--遍历 正式 vendor 表,处理关联字段列表如下                                                                                                                        
                                                                                                                                                                  
for v_rc in select * from ""public"".vendor_group where need_update_id=v_need_update_id  order by id LIMIT v_limit offset v_offset                                                                                             
loop                                                                                                                                                              
			begin                                                                                                                                                  
				  v_proc_line_count:=v_proc_line_count+1;                                                                                                          
			EXCEPTION                                                                                                                                              
			when OTHERS THEN                                                                                                                                       
           GET STACKED DIAGNOSTICS                                                                                                
                                   v_message_text = MESSAGE_TEXT,                                                                                                 
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                       
          v_table_name:='vendor_group';                                                                                                                                 
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                  
					v_src_id=v_rc.id;                                                                                                                              
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);    
          v_proc_line_fail_count=v_proc_line_fail_count+1;     
          o_fail_count:=o_fail_count+1;                                                                                                   
      end;                                                                                                                                                        
end loop;                                                                                                                                                         
                                                                                                                                                        
  return ;                                                                                                                                                       
                                                                                                                                                                  
                                                                                                                                                                  
end;                                                                                                                                                              
$function$
"
"proc_trans_table_vendor_plant","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_vendor_plant(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$

declare
v_rc	record;
v_pre_period_id integer;
v_start_datetime varchar;
v_end_datetime varchar;
v_count_1	integer;

--异常捕获信息
v_table_name varchar;
v_column_name varchar;
v_message_text text;
v_exception_detail text;
v_src_id int4;

--记录处理日志相关
v_proc_line_count int4;
v_proc_line_fail_count int4;
v_start_time TIMESTAMP;
v_end_time TIMESTAMP; 
begin
v_proc_line_count:=0;
v_proc_line_fail_count:=0;
v_start_time:=now();

o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;                                                                                                                                                                 
                   

--遍历vendor_plant表,数据转移到odoo正式表中
for v_rc in select * from ep_temp_master.vendor_plant order by id LIMIT v_limit offset v_offset    
loop
			begin
				 select count(*) into v_count_1 from ""public"".vendor_plant where vendor_code=v_rc.vendor_code and purchase_org=v_rc.purchase_org;
				 --目标表中不存在相关记录,进行插入操作
				 if v_count_1=0 THEN
						insert into ""public"".vendor_plant (
							vendor_code,
							purchase_org,
							creation_date,
							purchase_block,
							deletion_flag,
							incoterm,
							incoterm1,
							payment_term,
							buyer_erp_id,
							sales_person,
							ers,
							confirmation_control_key,
							currency,
							sales_telephone,
							vendor_purchase_code,
							sap_log_id,
							sap_temp_id
						)
						values
							(
								v_rc.vendor_code,
								v_rc.purchase_org,
								v_rc.creation_date,
								v_rc.purchase_block,
								v_rc.deletion_flag,
								v_rc.incoterm,
								v_rc.incoterm1,
								v_rc.payment_term,
								v_rc.buyer_erp_id,
								v_rc.sales_person,
								v_rc.ers,
								v_rc.confirmation_control_key,
								v_rc.currency,
								v_rc.sales_telephone,
								v_rc.vendor_code|| v_rc.purchase_org,
								v_sap_log_id,
								v_rc.id
							);
						o_insert_count:=o_insert_count+1;
				 end if;

				 --目标数据存在,进行更新操作
				if v_count_1=1 THEN
						update ""public"".vendor_plant
						set purchase_org = v_rc.purchase_org,
						 creation_date = v_rc.creation_date,
						 purchase_block = v_rc.purchase_block,
						 deletion_flag = v_rc.deletion_flag,
						 incoterm = v_rc.incoterm,
						 incoterm1 = v_rc.incoterm1,
						 payment_term = v_rc.payment_term,
						 buyer_erp_id = v_rc.buyer_erp_id,
						 sales_person = v_rc.sales_person,
						 ers = v_rc.ers,
						 confirmation_control_key = v_rc.confirmation_control_key,
						 currency = v_rc.currency,
						 sales_telephone = v_rc.sales_telephone,
             vendor_purchase_code=v_rc.vendor_code|| v_rc.purchase_org,
						 sap_log_id=v_sap_log_id,
						 sap_temp_id=v_rc.id
						where
							vendor_code = v_rc.vendor_code
               and purchase_org=v_rc.purchase_org;
            o_update_count:=o_update_count+1;

				end if;
				v_proc_line_count:=v_proc_line_count+1;
			EXCEPTION
			when OTHERS THEN
           GET STACKED DIAGNOSTICS 
                                   v_message_text = MESSAGE_TEXT,
																	 v_exception_detail=PG_EXCEPTION_DETAIL;
          v_table_name:='vendor_plant';
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';
					v_src_id=v_rc.id;
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);
          v_proc_line_fail_count=v_proc_line_fail_count+1;

          o_fail_count:=o_fail_count+1;

      end;

end loop;

  return ;

end;
$function$
"
"proc_trans_table_vendor_plant_ref","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_vendor_plant_ref(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$

declare
v_rc	record;
v_pre_period_id integer;
v_start_datetime varchar;
v_end_datetime varchar;
v_count_1	integer;

--异常捕获信息
v_table_name varchar;
v_column_name varchar;
v_message_text text;
v_exception_detail text;
v_src_id int4;

--记录处理日志相关
v_proc_line_count int4;
v_proc_line_fail_count int4;
v_start_time TIMESTAMP;
v_end_time TIMESTAMP; 
begin
v_proc_line_count:=0;
v_proc_line_fail_count:=0;
v_start_time:=now();

o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;                                                                                                                                                                 
                   
--遍历 正式 vendor_plant 表,处理关联字段列表如下
/*
    incoterm_id=fields.Many2one('incoterm',string=""Incoterm"")
    payment_term_id=fields.Many2one('payment.term',string=""Incoterm"")
    purchase_org_id=fields.Many2one(""pur.org.data"",string=""Purchase Org Info"")
    vendor_id = fields.Many2one('iac.vendor', string=""Vendor Info"")
    vendor_reg_id = fields.Many2one('iac.vendor.register', string=""Vendor Registration"")
*/
for v_rc in select * from ""public"".vendor_plant where sap_log_id=v_sap_log_id order by id LIMIT v_limit offset v_offset    
loop
			begin
					perform ep_temp_master.proc_update_table_ref('vendor_plant' , 'vendor_id', 'iac_vendor' , 'vendor_code', v_rc.id, v_rc.vendor_code);
					perform ep_temp_master.proc_update_table_ref('vendor_plant' , 'vendor_reg_id', 'iac_vendor_register' , 'vendor_code', v_rc.id, v_rc.vendor_code);
					perform ep_temp_master.proc_update_table_ref('vendor_plant' , 'incoterm_id', 'incoterm' , 'incoterm', v_rc.id, v_rc.incoterm);
					--perform ep_temp_master.proc_update_table_ref('vendor_plant' , 'purchase_org_id', 'pur_org_data' , 'purchase_org', v_rc.id, v_rc.purchase_org);
					perform ep_temp_master.proc_update_table_ref('vendor_plant' , 'payment_term_id', 'payment_term' , 'payment_term', v_rc.id, v_rc.payment_term);
					--select proc_update_table_ref('vendor_plant' , 'address_country_id', 'res.country' , 'code', v_rc.id, v_rc.address_country);
					--select proc_update_table_ref('vendor_plant' , 'address_odoo_id', 'address' , 'address_id', v_rc.id, v_rc.address_id);
					--select proc_update_table_ref('vendor_plant' , 'plant_id', 'vendor_plant' , 'vendor_code', v_rc.id, v_rc.vendor_code);
				  v_proc_line_count:=v_proc_line_count+1;

	        o_update_count:=o_update_count+1;
  
			EXCEPTION
			when OTHERS THEN
           GET STACKED DIAGNOSTICS 
                                   v_message_text = MESSAGE_TEXT,
																	 v_exception_detail=PG_EXCEPTION_DETAIL;
          v_table_name:='vendor_plant';
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';
					v_src_id=v_rc.id;
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);
          v_proc_line_fail_count=v_proc_line_fail_count+1;
          o_fail_count:=o_fail_count+1;

      end;
end loop;

  return ;	
		
	

end;
$function$
"
"proc_trans_table_vendor_plant_ref_2","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_vendor_plant_ref_2(v_sap_log_id character varying, v_need_update_id integer, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$

declare
v_rc	record;
v_pre_period_id integer;
v_start_datetime varchar;
v_end_datetime varchar;
v_count_1	integer;

--异常捕获信息
v_table_name varchar;
v_column_name varchar;
v_message_text text;
v_exception_detail text;
v_src_id int4;

--记录处理日志相关
v_proc_line_count int4;
v_proc_line_fail_count int4;
v_start_time TIMESTAMP;
v_end_time TIMESTAMP; 
begin
v_proc_line_count:=0;
v_proc_line_fail_count:=0;
v_start_time:=now();

o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;                                                                                                                                                                 
                   
--遍历 正式 vendor_plant 表,处理关联字段列表如下
/*
    incoterm_id=fields.Many2one('incoterm',string=""Incoterm"")
    payment_term_id=fields.Many2one('payment.term',string=""Incoterm"")
    purchase_org_id=fields.Many2one(""pur.org.data"",string=""Purchase Org Info"")
    vendor_id = fields.Many2one('iac.vendor', string=""Vendor Info"")
    vendor_reg_id = fields.Many2one('iac.vendor.register', string=""Vendor Registration"")
*/
for v_rc in select * from ""public"".vendor_plant where need_update_id=v_need_update_id order by id LIMIT v_limit offset v_offset    
loop
			begin
					perform ep_temp_master.proc_update_table_ref('vendor_plant' , 'vendor_id', 'iac_vendor' , 'vendor_code', v_rc.id, v_rc.vendor_code);
					perform ep_temp_master.proc_update_table_ref('vendor_plant' , 'vendor_reg_id', 'iac_vendor_register' , 'vendor_code', v_rc.id, v_rc.vendor_code);
					perform ep_temp_master.proc_update_table_ref('vendor_plant' , 'incoterm_id', 'incoterm' , 'incoterm', v_rc.id, v_rc.incoterm);
					--perform ep_temp_master.proc_update_table_ref('vendor_plant' , 'purchase_org_id', 'pur_org_data' , 'purchase_org', v_rc.id, v_rc.purchase_org);
					perform ep_temp_master.proc_update_table_ref('vendor_plant' , 'payment_term_id', 'payment_term' , 'payment_term', v_rc.id, v_rc.payment_term);
					--select proc_update_table_ref('vendor_plant' , 'address_country_id', 'res.country' , 'code', v_rc.id, v_rc.address_country);
					--select proc_update_table_ref('vendor_plant' , 'address_odoo_id', 'address' , 'address_id', v_rc.id, v_rc.address_id);
					--select proc_update_table_ref('vendor_plant' , 'plant_id', 'vendor_plant' , 'vendor_code', v_rc.id, v_rc.vendor_code);
				  v_proc_line_count:=v_proc_line_count+1;

	        o_update_count:=o_update_count+1;
  
			EXCEPTION
			when OTHERS THEN
           GET STACKED DIAGNOSTICS 
                                   v_message_text = MESSAGE_TEXT,
																	 v_exception_detail=PG_EXCEPTION_DETAIL;
          v_table_name:='vendor_plant';
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';
					v_src_id=v_rc.id;
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);
          v_proc_line_fail_count=v_proc_line_fail_count+1;
          o_fail_count:=o_fail_count+1;

      end;
end loop;

  return ;	
		
	

end;
$function$
"
"proc_trans_table_vendor_ref","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_vendor_ref(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$

declare
v_rc	record;
v_pre_period_id integer;
v_start_datetime varchar;
v_end_datetime varchar;
v_count_1	integer;

--异常捕获信息
v_table_name varchar;
v_column_name varchar;
v_message_text text;
v_exception_detail text;
v_src_id int4;

--记录处理日志相关
v_proc_line_count int4;
v_proc_line_fail_count int4;
v_start_time TIMESTAMP;
v_end_time TIMESTAMP; 
begin
v_proc_line_count:=0;
v_proc_line_fail_count:=0;
v_start_time:=now();

o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;                                                                                                                                                                 
                   

--遍历 正式 vendor 表,处理关联字段列表如下
/*
    vendor_id = fields.Many2one('iac.vendor', string=""Vendor Info"")
    vendor_reg_id = fields.Many2one('iac.vendor.register', string=""Vendor Registration"")
    address_country_id=fields.Many2one('res.country',string=""Address Country Info"")
    address_odoo_id=fields.Many2one('Address',string=""Address Id"")
    plant_id=fields.Many2one('vendor.plant',string=""Plant Code"")
    sap_log_id = fields.Char(string=""Sap log Info"")
    sap_temp_id = fields.Integer(string=""Sap Temp Info"")
*/
for v_rc in select * from ""public"".vendor where sap_log_id=v_sap_log_id order by id LIMIT v_limit offset v_offset    
loop
			begin
					perform ep_temp_master.proc_update_table_ref('vendor' , 'vendor_id', 'iac_vendor' , 'vendor_code', v_rc.id, v_rc.vendor_code);
					perform ep_temp_master.proc_update_table_ref('vendor' , 'vendor_reg_id', 'iac_vendor_register' , 'vendor_code', v_rc.id, v_rc.vendor_code);
					perform ep_temp_master.proc_update_table_ref('vendor' , 'address_country_id', 'res_country' , 'code', v_rc.id, v_rc.address_country);
					perform ep_temp_master.proc_update_table_ref('vendor' , 'address_odoo_id', 'address' , 'address_id', v_rc.id, v_rc.address_id);
					perform ep_temp_master.proc_update_table_ref('vendor' , 'plant_id', 'pur_org_data' , 'plant_code', v_rc.id, v_rc.plant_code);
				  v_proc_line_count:=v_proc_line_count+1;

          o_update_count:=o_update_count+1;
			EXCEPTION
			when OTHERS THEN
           GET STACKED DIAGNOSTICS 
                                   v_message_text = MESSAGE_TEXT,
																	 v_exception_detail=PG_EXCEPTION_DETAIL;
          v_table_name:='vendor';
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';
					v_src_id=v_rc.id;
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);
          v_proc_line_fail_count=v_proc_line_fail_count+1;

          o_fail_count:=o_fail_count+1;

      end;
end loop;

  return ;


end;
$function$
"
"proc_trans_table_vendor_ref_2","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_vendor_ref_2(v_sap_log_id character varying, v_need_update_id integer, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$

declare
v_rc	record;
v_pre_period_id integer;
v_start_datetime varchar;
v_end_datetime varchar;
v_count_1	integer;

--异常捕获信息
v_table_name varchar;
v_column_name varchar;
v_message_text text;
v_exception_detail text;
v_src_id int4;

--记录处理日志相关
v_proc_line_count int4;
v_proc_line_fail_count int4;
v_start_time TIMESTAMP;
v_end_time TIMESTAMP; 
begin
v_proc_line_count:=0;
v_proc_line_fail_count:=0;
v_start_time:=now();

o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;                                                                                                                                                                 
                   

--遍历 正式 vendor 表,处理关联字段列表如下
/*
    vendor_id = fields.Many2one('iac.vendor', string=""Vendor Info"")
    vendor_reg_id = fields.Many2one('iac.vendor.register', string=""Vendor Registration"")
    address_country_id=fields.Many2one('res.country',string=""Address Country Info"")
    address_odoo_id=fields.Many2one('Address',string=""Address Id"")
    plant_id=fields.Many2one('vendor.plant',string=""Plant Code"")
    sap_log_id = fields.Char(string=""Sap log Info"")
    sap_temp_id = fields.Integer(string=""Sap Temp Info"")
*/
for v_rc in select * from ""public"".vendor where need_update_id=v_need_update_id order by id LIMIT v_limit offset v_offset    
loop
			begin
					perform ep_temp_master.proc_update_table_ref('vendor' , 'vendor_id', 'iac_vendor' , 'vendor_code', v_rc.id, v_rc.vendor_code);
					perform ep_temp_master.proc_update_table_ref('vendor' , 'vendor_reg_id', 'iac_vendor_register' , 'vendor_code', v_rc.id, v_rc.vendor_code);
					perform ep_temp_master.proc_update_table_ref('vendor' , 'address_country_id', 'res_country' , 'code', v_rc.id, v_rc.address_country);
					perform ep_temp_master.proc_update_table_ref('vendor' , 'address_odoo_id', 'address' , 'address_id', v_rc.id, v_rc.address_id);
					perform ep_temp_master.proc_update_table_ref('vendor' , 'plant_id', 'pur_org_data' , 'plant_code', v_rc.id, v_rc.plant_code);
				  v_proc_line_count:=v_proc_line_count+1;

          o_update_count:=o_update_count+1;
			EXCEPTION
			when OTHERS THEN
           GET STACKED DIAGNOSTICS 
                                   v_message_text = MESSAGE_TEXT,
																	 v_exception_detail=PG_EXCEPTION_DETAIL;
          v_table_name:='vendor';
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';
					v_src_id=v_rc.id;
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);
          v_proc_line_fail_count=v_proc_line_fail_count+1;

          o_fail_count:=o_fail_count+1;

      end;
end loop;

  return ;


end;
$function$
"
"proc_trans_table_vs_webflow_iqc_data","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_vs_webflow_iqc_data(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                         
                                                                                                                                                                
declare                                                                                                                                                         
v_rc	record;                                                                                                                                                  
v_pre_period_id integer;                                                                                                                                        
v_start_datetime varchar;                                                                                                                                       
v_end_datetime varchar;                                                                                                                                         
v_count_1	integer;                                                                                                                                             
                                                                                                                                                                
--异常捕获信息                                                                                                                                                  
v_table_name varchar;                                                                                                                                           
v_column_name varchar;                                                                                                                                          
v_message_text text;                                                                                                                                            
v_exception_detail text;                                                                                                                                        
v_src_id int4;                                                                                                                                                  
                                                                                                                                                                
--记录处理日志相关                                                                                                                                              
v_proc_line_count int4;                                                                                                                                         
v_proc_line_fail_count int4;                                                                                                                                    
v_start_time TIMESTAMP;                                                                                                                                         
v_end_time TIMESTAMP;                                                                                                                                           
begin                                                                                                                                                           
v_proc_line_count:=0;                                                                                                                                           
v_proc_line_fail_count:=0;                                                                                                                                      
v_start_time:=now();                                                                                                                                            

o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;    
                                                                                                                                                                
--遍历 address 表,数据转移到odoo正式表中
/*
SUPPLIER_COMPANY_ID
PLANT
VENDOR_CODE
MATERIAL_GROUP
CREATE_DATE
MATNR
*/                                                                                                                        
for v_rc in select * from ep_temp_master.vs_webflow_iqc_data   order by id LIMIT v_limit offset v_offset                                                                                                                                
loop                                                                                                                                                            
			begin                                                                                                                                                

				SELECT
					COUNT (*) INTO v_count_1
				FROM
					""public"".vs_webflow_iqc_data
				WHERE
				cdt = v_rc.cdt
				AND vendor_code = v_rc.vendor_code
				AND part_no = v_rc.part_no;

                                                                               
				 if v_count_1=0 THEN
						INSERT INTO ""public"".vs_webflow_iqc_data (
							supplier_company_id,
							plant_code,
							vendor_code,
							material_group,
							gr_ma,
							gr_mi,
							qual_qty,
							return_qty,
							tc_qty,
							gr_qty,
							rma_ma,
							rma_mi,
							mo_cnf_qty,
							lurking_cost,
							hardness_cost,
							creation_date,
							FLAG,
							cdt,
							part_no,
							sap_log_id,
							sap_temp_id
						)
						VALUES
							(
								v_rc.supplier_company_id,
								v_rc.plant_code,
								v_rc.vendor_code,
								v_rc.material_group,
								v_rc.gr_ma,
								v_rc.gr_mi,
								v_rc.qual_qty,
								v_rc.return_qty,
								v_rc.tc_qty,
								v_rc.gr_qty,
								v_rc.rma_ma,
								v_rc.rma_mi,
								v_rc.mo_cnf_qty,
								v_rc.lurking_cost,
								v_rc.hardness_cost,
								v_rc.creation_date,
								v_rc. FLAG,
								v_rc.cdt,
								v_rc.part_no,
								v_sap_log_id,
								v_rc. ID
							);
            o_insert_count:=o_insert_count+1;                                                                                                                             
				 end if;                                                                                                                                         
                                                                                                                                                                
				 --目标数据存在,进行更新操作                                                                                                                     
				if v_count_1=1 THEN
						UPDATE ""public"".vs_webflow_iqc_data
						SET supplier_company_id = v_rc.supplier_company_id,
						 material_group = v_rc.material_group,
						 gr_ma = v_rc.gr_ma,
						 gr_mi = v_rc.gr_mi,
						 qual_qty = v_rc.qual_qty,
						 return_qty = v_rc.return_qty,
						 tc_qty = v_rc.tc_qty,
						 gr_qty = v_rc.gr_qty,
						 rma_ma = v_rc.rma_ma,
						 rma_mi = v_rc.rma_mi,
						 mo_cnf_qty = v_rc.mo_cnf_qty,
						 lurking_cost = v_rc.lurking_cost,
						 hardness_cost = v_rc.hardness_cost,
						 creation_date = v_rc.creation_date,
						 FLAG = v_rc. FLAG,
						 cdt = v_rc.cdt,
						 sap_log_id = v_sap_log_id,
						 sap_temp_id = v_rc. ID
						WHERE
						cdt = v_rc.cdt
				    AND vendor_code = v_rc.vendor_code
				    AND part_no = v_rc.part_no;

            o_update_count:=o_update_count+1;                                                                                                              
				end if;                                                                                                                                          
				v_proc_line_count:=v_proc_line_count+1;                                                                                                          
			EXCEPTION                                                                                                                                            
			when OTHERS THEN                                                                                                                                     
           GET STACKED DIAGNOSTICS                                                                                                 
                                   v_message_text = MESSAGE_TEXT,                                                                                               
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                     
          v_table_name:='vs_webflow_iqc_data';                                                                                                                              
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                
					v_src_id=v_rc.id;                                                                                                                            
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);  
          v_proc_line_fail_count=v_proc_line_fail_count+1;        
          o_fail_count:=o_fail_count+1;                                                                                              
      end;                                                                                                                                                      
end loop;                                                                                                                                                       
                                                                                                                                                      
  return ;                                                                                                                                                     
                                                                                                                                                                
end;                                                                                                                                                            
$function$
"
"proc_trans_table_vs_webflow_iqc_data_ref","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_vs_webflow_iqc_data_ref(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                           
                                                                                                                                                                  
declare                                                                                                                                                           
v_rc	record;                                                                                                                                                    
v_pre_period_id integer;                                                                                                                                          
v_start_datetime varchar;                                                                                                                                         
v_end_datetime varchar;                                                                                                                                           
v_count_1	integer;                                                                                                                                               
                                                                                                                                                                  
--异常捕获信息                                                                                                                                                    
v_table_name varchar;                                                                                                                                             
v_column_name varchar;                                                                                                                                            
v_message_text text;                                                                                                                                              
v_exception_detail text;                                                                                                                                          
v_src_id int4;                                                                                                                                                    
                                                                                                                                                                  
--记录处理日志相关                                                                                                                                                
v_proc_line_count int4;                                                                                                                                           
v_proc_line_fail_count int4;                                                                                                                                      
v_start_time TIMESTAMP;                                                                                                                                           
v_end_time TIMESTAMP;                                                                                                                                             
begin                                                                                                                                                             
v_proc_line_count:=0;                                                                                                                                             
v_proc_line_fail_count:=0;                                                                                                                                        
v_start_time:=now();      

o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;                                                                                                                                          
--遍历 正式 vendor 表,处理关联字段列表如下                                                                                                                        
                                                                                                                                                                  
for v_rc in select * from ""public"".vs_webflow_iqc_data where sap_log_id=v_sap_log_id order by id LIMIT v_limit offset v_offset                                                                                              
loop                                                                                                                                                              
			begin
					--perform proc_update_table_ref('vs_webflow_iqc_data' , 'part_id', 'material_master' , 'part_no', v_rc.id, v_rc.part_no);  
					perform ep_temp_master.proc_update_table_ref('vs_webflow_iqc_data' , 'part_id', 'material_master' , 'part_unique_code', v_rc.id, v_rc.part_no||v_rc.plant_code);
					perform ep_temp_master.proc_update_table_ref('vs_webflow_iqc_data' , 'vendor_id', 'iac_vendor' , 'vendor_code', v_rc.id, v_rc.vendor_code);
					perform ep_temp_master.proc_update_table_ref('vs_webflow_iqc_data' , 'vendor_reg_id', 'iac_vendor_register' , 'vendor_code', v_rc.id, v_rc.vendor_code);
					perform ep_temp_master.proc_update_table_ref('vs_webflow_iqc_data' , 'plant_id', 'pur_org_data' , 'plant_code', v_rc.id, v_rc.plant_code);
					perform ep_temp_master.proc_update_table_ref('vs_webflow_iqc_data' , 'material_group_id', 'material_group' , 'material_group', v_rc.id, v_rc.material_group);                                                                                                                                                   
				  v_proc_line_count:=v_proc_line_count+1;  
          o_update_count:=o_update_count+1;                                                                                                        
			EXCEPTION                                                                                                                                              
			when OTHERS THEN                                                                                                                                       
           GET STACKED DIAGNOSTICS                                                                                                  
                                   v_message_text = MESSAGE_TEXT,                                                                                                 
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                       
          v_table_name:='vs_webflow_iqc_data';                                                                                                                                 
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                  
					v_src_id=v_rc.id;                                                                                                                              
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);    
          v_proc_line_fail_count=v_proc_line_fail_count+1;    
          o_fail_count:=o_fail_count+1;                                                                                                    
      end;                                                                                                                                                        
end loop;                                                                                                                                                         
                                                                                                                                                        
  return ;                                                                                                                                                       
                                                                                                                                                                  
                                                                                                                                                                  
end;                                                                                                                                                              
$function$
"
"proc_trans_table_vs_webflow_iqc_data_ref_2","CREATE OR REPLACE FUNCTION ep_temp_master.proc_trans_table_vs_webflow_iqc_data_ref_2(v_sap_log_id character varying, v_need_update_id integer, v_group_id integer, v_group_line_id integer, v_limit integer, v_offset integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                           
                                                                                                                                                                  
declare                                                                                                                                                           
v_rc	record;                                                                                                                                                    
v_pre_period_id integer;                                                                                                                                          
v_start_datetime varchar;                                                                                                                                         
v_end_datetime varchar;                                                                                                                                           
v_count_1	integer;                                                                                                                                               
                                                                                                                                                                  
--异常捕获信息                                                                                                                                                    
v_table_name varchar;                                                                                                                                             
v_column_name varchar;                                                                                                                                            
v_message_text text;                                                                                                                                              
v_exception_detail text;                                                                                                                                          
v_src_id int4;                                                                                                                                                    
                                                                                                                                                                  
--记录处理日志相关                                                                                                                                                
v_proc_line_count int4;                                                                                                                                           
v_proc_line_fail_count int4;                                                                                                                                      
v_start_time TIMESTAMP;                                                                                                                                           
v_end_time TIMESTAMP;                                                                                                                                             
begin                                                                                                                                                             
v_proc_line_count:=0;                                                                                                                                             
v_proc_line_fail_count:=0;                                                                                                                                        
v_start_time:=now();      

o_insert_count:=0;
o_update_count:=0;
o_fail_count:=0;                                                                                                                                          
--遍历 正式 vendor 表,处理关联字段列表如下                                                                                                                        
                                                                                                                                                                  
for v_rc in select * from ""public"".vs_webflow_iqc_data where need_update_id=v_need_update_id order by id LIMIT v_limit offset v_offset                                                                                              
loop                                                                                                                                                              
			begin
					--perform proc_update_table_ref('vs_webflow_iqc_data' , 'part_id', 'material_master' , 'part_no', v_rc.id, v_rc.part_no);  
					perform ep_temp_master.proc_update_table_ref('vs_webflow_iqc_data' , 'part_id', 'material_master' , 'part_unique_code', v_rc.id, v_rc.part_no||v_rc.plant_code);
					perform ep_temp_master.proc_update_table_ref('vs_webflow_iqc_data' , 'vendor_id', 'iac_vendor' , 'vendor_code', v_rc.id, v_rc.vendor_code);
					perform ep_temp_master.proc_update_table_ref('vs_webflow_iqc_data' , 'vendor_reg_id', 'iac_vendor_register' , 'vendor_code', v_rc.id, v_rc.vendor_code);
					perform ep_temp_master.proc_update_table_ref('vs_webflow_iqc_data' , 'plant_id', 'pur_org_data' , 'plant_code', v_rc.id, v_rc.plant_code);
					perform ep_temp_master.proc_update_table_ref('vs_webflow_iqc_data' , 'material_group_id', 'material_group' , 'material_group', v_rc.id, v_rc.material_group);                                                                                                                                                   
				  v_proc_line_count:=v_proc_line_count+1;  
          o_update_count:=o_update_count+1;                                                                                                        
			EXCEPTION                                                                                                                                              
			when OTHERS THEN                                                                                                                                       
           GET STACKED DIAGNOSTICS                                                                                                  
                                   v_message_text = MESSAGE_TEXT,                                                                                                 
																	 v_exception_detail=PG_EXCEPTION_DETAIL;                                                       
          v_table_name:='vs_webflow_iqc_data';                                                                                                                                 
					v_exception_detail:='A error occurs when insert table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                                  
					v_src_id=v_rc.id;                                                                                                                              
					perform ep_temp_master.write_exception_log(v_sap_log_id,v_group_id,v_group_line_id,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);    
          v_proc_line_fail_count=v_proc_line_fail_count+1;    
          o_fail_count:=o_fail_count+1;                                                                                                    
      end;                                                                                                                                                        
end loop;                                                                                                                                                         
                                                                                                                                                        
  return ;                                                                                                                                                       
                                                                                                                                                                  
                                                                                                                                                                  
end;                                                                                                                                                              
$function$
"
"proc_update_table_ref","CREATE OR REPLACE FUNCTION ep_temp_master.proc_update_table_ref(v_src_table_name character varying, v_src_field_name character varying, v_ref_table_name character varying, v_ref_field_name character varying, v_src_id_value integer, v_src_code_value character varying)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$

declare
v_rc	record;
v_pre_period_id integer;
v_start_datetime varchar;
v_end_datetime varchar;
v_exe_sql varchar;
v_update_count integer;
v_ref_count    integer;
begin
/*
1	v_src_table_name	当前表
2	v_src_field_name	当前需要更新的字段
3 v_ref_table_name	参考表
4 v_ref_field_name	参考字段名称
5 v_src_id_value	当前表的主键id
6	v_src_code_value	当前表的中的字段编码值

--参考sql
UPDATE ""public"".vendor
SET vendor_id = (
	SELECT
		ID
	FROM
		""public"".iac_vendor P
	WHERE
		P .vendor_code = '10011'
)
WHERE
	ID = 1
AND EXISTS (
	SELECT
		1
	FROM
		""public"".iac_vendor P
	WHERE
		P .vendor_code = '10011'
);

--调用函数举例
select proc_update_table_ref('vendor' , 'vendor_id', 'iac_vendor', 'vendor_code', 1, '1000');
*/

--执行动态语句进行数据更新

execute 'UPDATE ""public"".'||v_src_table_name ||
'
SET '||v_src_field_name||' = (
	SELECT
		ID
	FROM
		""public"".'||v_ref_table_name ||' P
	WHERE
		P .'||v_ref_field_name ||' = $2
)
WHERE
	ID = $1
AND EXISTS (
	SELECT
		1
	FROM
		""public"".'||v_ref_table_name ||' P
	WHERE
		P .'||v_ref_field_name ||' = $2 )'

USING  v_src_id_value , v_src_code_value ;

GET DIAGNOSTICS v_update_count = ROW_COUNT;
if v_src_code_value is null THEN
   return 0;
end if;

if v_update_count=0 THEN
--获取目标表的关联字段数量,更新标志数量不能大于最大关联字段数量
	SELECT
		'{
			""address"": 1,
			""asn_jitrule"": 6,
			""asn_maxqty"": 5,
			""buyer_code"": 0,
			""company"": 1,
			""division_code"": 0,
			""goods_receipts"": 7,
			""iac_purchase_order"": 13,
			""iac_purchase_order_line"": 7,
			""iac_purchase_order_partner"": 3,
			""incoterm"": 0,
			""inforecord_history"": 5,
			""material_custmaster"": 2,
			""material_description"": 2,
			""material_division"": 3,
			""material_group"": 0,
			""material_map"": 2,
			""material_master"": 3,
			""material_plant"": 2,
			""payment_info"": 3,
			""payment_term"": 0,
			""plm_actual_vendor"": 0,
			""plm_subclass"": 0,
			""pur_org_data"": 3,
			""ship_instruct"": 0,
			""source_list"": 5,
			""storage_location"": 1,
			""vendor"": 5,
			""vendor_bank"": 4,
			""vendor_certified"": 2,
			""vendor_group"": 0,
			""vendor_plant"": 5,
			""vs_webflow_iqc_data"": 5
	}' :: json ->> v_src_table_name into v_ref_count;
   execute 'UPDATE ""public"".'||v_src_table_name ||
					 ' SET need_re_update = need_re_update+1
						WHERE ID = $1 and need_re_update<$2'
						USING  v_src_id_value,v_ref_count ;   
   return 0; 
end if;

if v_update_count=1 THEN
   /*
   execute 'UPDATE ""public"".'||v_src_table_name ||
					 ' SET need_re_update = need_re_update-1
						WHERE ID = $1 and need_re_update>0'
						USING  v_src_id_value ;   
   */
   return 1; 
end if;
--v_src_table_name , v_src_field_name , v_ref_table_name , v_ref_field_name , v_src_id_value , v_src_code_value
return 0;
end;
$function$
"
"proc_update_table_ref_2","CREATE OR REPLACE FUNCTION ep_temp_master.proc_update_table_ref_2(v_src_table_name character varying, v_src_field_name character varying, v_ref_table_name character varying, v_ref_field_name character varying, v_src_id_value integer, v_src_code_value character varying, v_ref_return_field_name character varying)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$

declare
v_rc	record;
v_pre_period_id integer;
v_start_datetime varchar;
v_end_datetime varchar;
v_exe_sql varchar;
v_update_count integer;
v_ref_count    integer;
begin
/*
从参考表中获取指定字段值返回,当参考表中参考字段与当前表中的编码字段值相同的时候
1	v_src_table_name	当前表
2	v_src_field_name	当前需要更新的字段
3 v_ref_table_name	参考表
4 v_ref_field_name	参考字段名称
5 v_src_id_value	当前表的主键id
6	v_src_code_value	当前表的中的字段编码值
7 v_ref_return_field_name 返回参考表中指定的字段名
--参考sql
UPDATE ""public"".goods_receipts gr
SET vendor_id = (
	SELECT
		gr.vendor_id
	FROM
		iac_asn asn
	WHERE
		gr.asn_no = '1000'
)
WHERE
	gr_id = 1
AND EXISTS (
	SELECT
		1
	FROM
		iac_asn asn
	WHERE
		gr.asn_no = '1000'
);

--调用函数举例
select proc_update_table_ref_2('vendor' , 'vendor_id', 'iac_vendor', 'vendor_code', 1, '1000','vendor_id');
*/

--执行动态语句进行数据更新

execute 'UPDATE ""public"".'||v_src_table_name ||
'
SET '||v_src_field_name||' = (
	SELECT
		'||v_ref_return_field_name||'
	FROM
		""public"".'||v_ref_table_name ||' P
	WHERE
		P .'||v_ref_field_name ||' = '''||v_src_code_value||'''
)
WHERE
	ID = '||v_src_id_value||'
AND EXISTS (
	SELECT
		1
	FROM
		""public"".'||v_ref_table_name ||' P
	WHERE
		P .'||v_ref_field_name ||' = '''||v_src_code_value||''' )';

GET DIAGNOSTICS v_update_count = ROW_COUNT;
if v_src_code_value is null THEN
   return 0;
end if;

if v_update_count=0 THEN
--获取目标表的关联字段数量,更新标志数量不能大于最大关联字段数量
	SELECT
		'{
			""address"": 1,
			""asn_jitrule"": 6,
			""asn_maxqty"": 5,
			""buyer_code"": 0,
			""company"": 1,
			""division_code"": 0,
			""goods_receipts"": 7,
			""iac_purchase_order"": 13,
			""iac_purchase_order_line"": 7,
			""iac_purchase_order_partner"": 3,
			""incoterm"": 0,
			""inforecord_history"": 5,
			""material_custmaster"": 2,
			""material_description"": 2,
			""material_division"": 3,
			""material_group"": 0,
			""material_map"": 2,
			""material_master"": 3,
			""material_plant"": 2,
			""payment_info"": 3,
			""payment_term"": 0,
			""plm_actual_vendor"": 0,
			""plm_subclass"": 0,
			""pur_org_data"": 3,
			""ship_instruct"": 0,
			""source_list"": 5,
			""storage_location"": 1,
			""vendor"": 5,
			""vendor_bank"": 4,
			""vendor_certified"": 2,
			""vendor_group"": 0,
			""vendor_plant"": 5,
			""vs_webflow_iqc_data"": 5
	}' :: json ->> v_src_table_name into v_ref_count;
   execute 'UPDATE ""public"".'||v_src_table_name ||
					 ' SET need_re_update = need_re_update+1
						WHERE ID = $1 and need_re_update<$2'
						USING  v_src_id_value,v_ref_count ;   
   return 0; 
end if;

if v_update_count=1 THEN
   /*
   execute 'UPDATE ""public"".'||v_src_table_name ||
					 ' SET need_re_update = need_re_update-1
						WHERE ID = $1 and need_re_update>0'
						USING  v_src_id_value ;   
   return 1; 
   */
end if;

--USING  v_src_id_value , v_src_code_value ;

--v_src_table_name , v_src_field_name , v_ref_table_name , v_ref_field_name , v_src_id_value , v_src_code_value
return 1;
end;
$function$
"
"proc_update_table_ref_3","CREATE OR REPLACE FUNCTION ep_temp_master.proc_update_table_ref_3(v_src_table_name character varying, v_sql_text character varying, v_src_id_value integer)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$

declare
v_rc	record;
v_pre_period_id integer;
v_start_datetime varchar;
v_end_datetime varchar;
v_exe_sql varchar;
v_update_count integer;
v_ref_count    integer;
begin
/*
对指定表执行动态语句,根据执行结果是否更新了数据更新未关联字段的数量
1	v_src_table_name	当前表
2	v_sql_text 	    需要执行的动态语句
3 v_src_id_value	当前表的主键id

--调用函数举例
select proc_update_table_ref_3('vendor' , 'update public.vendor set plant=1 where id=1', 1);

*/

--执行动态语句进行数据更新

execute v_sql_text;

GET DIAGNOSTICS v_update_count = ROW_COUNT;
if v_src_code_value is null THEN
   return 0;
end if;

if v_update_count=0 THEN
--获取目标表的关联字段数量,更新标志数量不能大于最大关联字段数量
	SELECT
		'{
			""address"": 1,
			""asn_jitrule"": 6,
			""asn_maxqty"": 5,
			""buyer_code"": 0,
			""company"": 1,
			""division_code"": 0,
			""goods_receipts"": 7,
			""iac_purchase_order"": 13,
			""iac_purchase_order_line"": 7,
			""iac_purchase_order_partner"": 3,
			""incoterm"": 0,
			""inforecord_history"": 5,
			""material_custmaster"": 2,
			""material_description"": 2,
			""material_division"": 3,
			""material_group"": 0,
			""material_map"": 2,
			""material_master"": 3,
			""material_plant"": 2,
			""payment_info"": 3,
			""payment_term"": 0,
			""plm_actual_vendor"": 0,
			""plm_subclass"": 0,
			""pur_org_data"": 3,
			""ship_instruct"": 0,
			""source_list"": 5,
			""storage_location"": 1,
			""vendor"": 5,
			""vendor_bank"": 4,
			""vendor_certified"": 2,
			""vendor_group"": 0,
			""vendor_plant"": 5,
			""vs_webflow_iqc_data"": 5
	}' :: json ->> v_src_table_name into v_ref_count;

   execute 'UPDATE ""public"".'||v_src_table_name ||
					 ' SET need_re_update = need_re_update+1
						WHERE ID = $1 and need_re_update<$2'
						USING  v_src_id_value,v_ref_count ;   
   return 0; 


end if;

if v_update_count=1 THEN
   execute 'UPDATE ""public"".'||v_src_table_name ||
					 ' SET need_re_update = need_re_update-1
						WHERE ID = $1 and need_re_update>0'
						USING  v_src_id_value ;   
   return 1; 
end if;
--v_src_table_name , v_src_field_name , v_ref_table_name , v_ref_field_name , v_src_id_value , v_src_code_value
return 0;
end;
$function$
"
"sp_asn_group_trans_prod","CREATE OR REPLACE FUNCTION ep_temp_master.sp_asn_group_trans_prod(v_sap_log_id character varying, v_limit integer, v_offset integer)
 RETURNS SETOF record
 LANGUAGE plpgsql
AS $function$                                                                                                                         
                                                                                                                                                                
declare                                                                                                                                                         
v_rc	record;                                                                                                                                                  
v_pre_period_id integer;                                                                                                                                        
v_start_datetime varchar;                                                                                                                                       
v_end_datetime varchar;                                                                                                                                         
v_count_1	integer;                                                                                                                                             


                                                                                                                                                                
--异常捕获信息                                                                                                                                                  
v_table_name varchar;                                                                                                                                           
v_column_name varchar;                                                                                                                                          
v_message_text text;                                                                                                                                            
v_exception_detail text;                                                                                                                                        
v_src_id int4;                                                                                                                                                  
                                                                                                                                                                
--记录处理日志相关                                                                                                                                              
v_proc_line_count int4;                                                                                                                                         
v_proc_line_fail_count int4;                                                                                                                                    
v_start_time TIMESTAMP;                                                                                                                                         
v_end_time TIMESTAMP;
                                                                                                                                           
v_buyer_erp_id varchar;
v_vendor_code  varchar;
v_buyer_id integer;
v_vendor_id integer;
v_miss      integer;

v_update_count integer;
v_fail_count integer; 
v_miss_count integer;
v_order_line_id integer;

v_last_id    integer;
v_count      integer;
v_break_id integer;
v_group_name  varchar;
v_group_line_name varchar;
v_group_id   integer;
v_group_line_id integer;
v_log_id     integer;
v_log_line_id integer;
begin                                                                                                                                                           
v_proc_line_count:=0;                                                                                                                                           
v_proc_line_fail_count:=0;                                                                                                                                      
v_start_time:=now();                                                                                                                                            
                                                                                                                                                           
                                                                                                                                                                                   
--遍历 iac_purchase_order 表,更新下关联字段

--获取配置的group_id 和group_line_id;
v_update_count:=0;
v_fail_count:=0;
v_miss_count:=0;
v_last_id:=0;
v_group_name:='TRANS_ASN';
v_group_line_name:='iac_asn';
select id into v_group_id from public.iac_interface_temp_table_group t where t.name='TRANS_ASN';
select id into v_group_line_id from ""public"".iac_interface_temp_table_group_line t where t.group_id=v_group_id and t.group_line_name='iac_asn'; 
select o_last_id,o_log_id,o_log_line_id into v_break_id,v_log_id,v_log_line_id from ep_temp_master.sp_func_get_log_info(v_sap_log_id,v_group_line_id);                                                                                                              
for v_rc in select * from ep_temp_master.iac_asn where sap_log_id=v_sap_log_id and id>=v_break_id and (miss_flag=0 and ex_flag=0 and trans_prod_flag=0) order by id LIMIT v_limit offset v_offset                                                                                                                                 
loop                                                                                                                                                            
			begin
				--写入asn表头
        select count(*) into v_count from ""public"".iac_asn where asn_no=v_rc.asn_no;
        if v_count=1 THEN
           delete from ""public"".iac_asn_line where asn_no=v_rc.asn_no;
           delete from ""public"".iac_asn where asn_no=v_rc.asn_no;
        end if;
				INSERT INTO ""public"".iac_asn (
					airbill_no,
					asn_date,
					asn_no,
					asn_status,
					buyer_code,
					company_code,
					create_mode,
					customer_country_name,
					customer_currency_name,
					delivery_days,
					eta_date,
					etd_date,
					from_source,
					gross_weight,
					has_attachment,
					housebill_no,
					net_weight,
					packing_list_no,
					pull_signal_id,
					ship_from,
					ship_from_country,
					ship_to,
					shipping_days,
					source_id,
					standard_carrier,
					STATE,
					storage_location,
					total_cartons,
					transport_id,
					transport_type,
					TYPE,
					vendor_asn,
					vendor_code_sap,
					plant_code,
					create_date,
					write_date,
					sap_key,
					sap_log_id,
					vendor_id,
					plant_id,
					create_uid
				) SELECT
					airbill_no,
					asn_date,
					asn_no,
					asn_status,
					buyer_code,
					company_code,
					create_mode,
					customer_country_name,
					customer_currency_name,
					delivery_days,
					eta_date,
					etd_date,
					from_source,
					gross_weight,
					has_attachment,
					housebill_no,
					net_weight,
					packing_list_no,
					pull_signal_id,
					ship_from,
					ship_from_country,
					ship_to,
					shipping_days,
					source_id,
					standard_carrier,
					STATE,
					storage_location,
					total_cartons,
					transport_id,
					transport_type,
					TYPE,
					vendor_asn,
					vendor_code_sap,
					plant_code,
					create_date,
					write_date,
					sap_key,
					sap_log_id,
					vendor_id,
					plant_id,
					1
				FROM
					ep_temp_master.iac_asn where id=v_rc.id returning id into v_last_id;							
				
        
				insert into ""public"".iac_asn_line
				(amount	,
				asn_line_no	,
				asn_no	,
				asn_qty	,
				buyer_erp_id	,
				gross_weight	,
				invoice_no	,
				net_weight	,
				origin_country	,
				packing_note	,
				qty_per_carton	,
				rpc_note	,
				storage_location	,
				vendor_asn	,
				vendor_asn_item	,
				plant_code	,
				vendor_code_sap	,
				part_no	,
				po_code	,
				po_line_code	,
				create_date	,
				write_date	,
				sap_key	,
				sap_log_id	,
				buyer_id	,
				part_id	,
				plant_id	,
				vendor_id	,
				asn_id,
				create_uid
				)
				select 
				amount	,
				asn_line_no	,
				asn_no	,
				asn_qty	,
				buyer_erp_id	,
				gross_weight	,
				invoice_no	,
				net_weight	,
				origin_country	,
				packing_note	,
				qty_per_carton	,
				rpc_note	,
				storage_location	,
				vendor_asn	,
				vendor_asn_item	,
				plant_code	,
				vendor_code_sap	,
				part_no	,
				po_code	,
				po_line_code	,
				create_date	,
				write_date	,
				sap_key	,
				sap_log_id	,
				buyer_id	,
				part_id	,
				plant_id	,
				vendor_id	,
				v_last_id,
				1
				from ep_temp_master.iac_asn_line where sap_log_id=v_sap_log_id and asn_no=v_rc.asn_no 
          and (miss_flag=0 and ex_flag=0 and trans_prod_flag=0);				
				
          --所有关联字段都更新成功,设置标志位为0   
          update ""ep_temp_master"".iac_asn set miss_flag=0,ex_flag=0,trans_prod_flag=1 where id=v_rc.id;      
				 

          v_update_count:=v_update_count+1;                                                                                                        
          v_last_id=v_rc.id;                                                                                          
			EXCEPTION                                                                                                                                            
			when OTHERS THEN                                                                                                                                     
           GET STACKED DIAGNOSTICS                                                                                               
                                   v_message_text = MESSAGE_TEXT,                                                                                               
																	 v_exception_detail=PG_EXCEPTION_DETAIL;
          v_table_name:='iac_asn';                                                                                                                                                                                                
					v_exception_detail:='A error occurs when update table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                             
					v_src_id=v_rc.id;                                                                                                                            
					perform ep_temp_master.sp_func_write_ex_log(v_sap_log_id,v_log_id,v_log_line_id,v_group_id,v_group_line_id,v_group_name,v_group_line_name,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);  
          v_fail_count:=v_fail_count+1;        

          update ""ep_temp_master"".iac_asn set ex_flag=1 where id=v_rc.id;                                                                                               
      end;                                                                                                                                                      
end loop;        
return query select v_last_id,v_group_id,v_group_line_id,v_group_name,v_group_line_name,v_update_count,v_fail_count,v_miss_count;

return ;                                                                                                                                                                                                                                                                                                  
  --return ;                                                                                                                                                     
                                                                                                                                                                
end;                                                                                                                                                            
$function$
"
"sp_asn_group_update_ref","CREATE OR REPLACE FUNCTION ep_temp_master.sp_asn_group_update_ref(v_sap_log_id character varying, v_limit integer, v_offset integer)
 RETURNS SETOF record
 LANGUAGE plpgsql
AS $function$                                                                                                                         
                                                                                                                                                                
declare                                                                                                                                                         
v_rc	record;                                                                                                                                                  
v_pre_period_id integer;                                                                                                                                        
v_start_datetime varchar;                                                                                                                                       
v_end_datetime varchar;                                                                                                                                         
v_count_1	integer;                                                                                                                                             


                                                                                                                                                                
--异常捕获信息                                                                                                                                                  
v_table_name varchar;                                                                                                                                           
v_column_name varchar;                                                                                                                                          
v_message_text text;                                                                                                                                            
v_exception_detail text;                                                                                                                                        
v_src_id int4;                                                                                                                                                  
                                                                                                                                                                
--记录处理日志相关                                                                                                                                              
v_proc_line_count int4;                                                                                                                                         
v_proc_line_fail_count int4;                                                                                                                                    
v_start_time TIMESTAMP;                                                                                                                                         
v_end_time TIMESTAMP;
                                                                                                                                           
v_buyer_erp_id varchar;
v_vendor_code  varchar;
v_buyer_id integer;
v_vendor_id integer;
v_miss      integer;

v_update_count integer;
v_fail_count integer; 
v_miss_count integer;
v_order_line_id integer;
v_order_id      integer;

v_last_id    integer;
v_break_id integer;
v_group_name  varchar;
v_group_line_name varchar;
v_group_id   integer;
v_group_line_id integer;
v_log_id     integer;
v_log_line_id integer;
begin                                                                                                                                                           
v_proc_line_count:=0;                                                                                                                                           
v_proc_line_fail_count:=0;                                                                                                                                      
v_start_time:=now();                                                                                                                                            
                                                                                                                                                           
                                                                                                                                                                                   
--遍历 iac_purchase_order 表,更新下关联字段

--获取配置的group_id 和group_line_id;
v_update_count:=0;
v_fail_count:=0;
v_miss_count:=0;
v_last_id:=0;
v_group_name:='TRANS_ASN';
v_group_line_name:='iac_asn';
select id into v_group_id from public.iac_interface_temp_table_group t where t.name='TRANS_ASN';
select id into v_group_line_id from ""public"".iac_interface_temp_table_group_line t where t.group_id=v_group_id and t.group_line_name='iac_asn'; 
select o_last_id,o_log_id,o_log_line_id into v_break_id,v_log_id,v_log_line_id from ep_temp_master.sp_func_get_log_info(v_sap_log_id,v_group_line_id);                                                                                                                    
for v_rc in select * from ep_temp_master.iac_asn where sap_log_id=v_sap_log_id and id>=v_break_id order by id LIMIT v_limit offset v_offset                                                                                                                                 
loop                                                                                                                                                            
			begin
				  --更新表头关联字段

		      v_miss:=0;
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_asn' , 'plant_id', '""public"".pur_org_data' , 'plant_code', v_rc.id, v_rc.plant_code) 
          into v_miss;
          if v_miss=1 THEN         
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;         
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_asn' , 'vendor_id', '""public"".iac_vendor' , 'vendor_code', v_rc.id, v_rc.vendor_code_sap)
          into v_miss;		
          if v_miss=1 THEN
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;         								
				
				
          --所有关联字段都更新成功,设置标志位为0   
          update ""ep_temp_master"".iac_asn set miss_flag=0,ex_flag=0 where id=v_rc.id;      
				 

          v_update_count:=v_update_count+1;                                                                                                        
          v_last_id=v_rc.id;                                                                                          
			EXCEPTION                                                                                                                                            
			when OTHERS THEN                                                                                                                                     
           GET STACKED DIAGNOSTICS                                                                                               
                                   v_message_text = MESSAGE_TEXT,                                                                                               
																	 v_exception_detail=PG_EXCEPTION_DETAIL;
          v_table_name:='iac_asn';                                                                                                                                                                                                
					v_exception_detail:='A error occurs when update table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                             
					v_src_id=v_rc.id;                                                                                                                            
					perform ep_temp_master.sp_func_write_ex_log(v_sap_log_id,v_log_id,v_log_line_id,v_group_id,v_group_line_id,v_group_name,v_group_line_name,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);  
          v_fail_count:=v_fail_count+1;        

          update ""ep_temp_master"".iac_asn set ex_flag=1 where id=v_rc.id;                                                                                               
      end;                                                                                                                                                      
end loop;        
return query select v_last_id,v_group_id,v_group_line_id,v_group_name,v_group_line_name,v_update_count,v_fail_count,v_miss_count;

--更新po unconfirm detail 关联字段
v_update_count:=0;
v_fail_count:=0;
v_miss_count:=0;
v_last_id:=0;
v_group_line_name:='iac_asn_line';
select id into v_group_line_id from ""public"".iac_interface_temp_table_group_line t where t.group_id=v_group_id and t.group_line_name='iac_asn_line';                                                                                                                   
select o_last_id,o_log_id,o_log_line_id into v_break_id,v_log_id,v_log_line_id from ep_temp_master.sp_func_get_log_info(v_sap_log_id,v_group_line_id);  
for v_rc in select * from ep_temp_master.iac_asn_line where sap_log_id=v_sap_log_id and id>=v_break_id order by id LIMIT v_limit offset v_offset                                                                                                                                 
loop                                                                                                                                                            
			begin
		      v_miss:=0;
          select id into v_order_id from ""public"".iac_purchase_order t where t.document_erp_id=v_rc.po_code;
	        if v_order_id is null THEN
             update ""ep_temp_master"".iac_asn_line set miss_flag=1 where id=v_rc.id;
             update ""ep_temp_master"".iac_asn set miss_flag=1 where asn_no=v_rc.asn_no and 
             sap_log_id=v_sap_log_id;
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;

          select id into v_order_line_id from ""public"".iac_purchase_order_line t where t.document_erp_id=v_rc.po_code 
          and t.document_line_erp_id=v_rc.po_line_code;
	        if v_order_line_id is null THEN
             update ""ep_temp_master"".iac_asn_line set miss_flag=1 where id=v_rc.id;
             update ""ep_temp_master"".iac_asn set miss_flag=1 where asn_no=v_rc.asn_no and 
             sap_log_id=v_sap_log_id;
             v_miss_count:=v_miss_count+1;
             continue;
          end if;			  
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_asn_line' , 'buyer_id', '""public"".buyer_code' , 'buyer_erp_id', v_rc.id, v_rc.buyer_erp_id) 
          into v_miss;
          if v_miss=1 THEN         
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;            
				  --更新表头关联字段
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_asn_line' , 'part_id', '""public"".material_master' , 'part_unique_code', v_rc.id, v_rc.part_no||v_rc.plant_code)
          into v_miss;			
          if v_miss=1 THEN
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;			  
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_asn_line' , 'plant_id', '""public"".pur_org_data' , 'plant_code', v_rc.id, v_rc.plant_code)
          into v_miss;
          if v_miss=1 THEN
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;         
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_asn_line' , 'vendor_id', '""public"".iac_vendor' , 'vendor_code', v_rc.id, v_rc.vendor_code_sap)
					into v_miss;		
          if v_miss=1 THEN
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;         			
									
				
          --所有关联字段都更新成功,设置标志位为0   
          update ""ep_temp_master"".iac_asn_line set miss_flag=0,ex_flag=0 where id=v_rc.id;      
				 

          v_update_count:=v_update_count+1;                                                                                                        
          v_last_id=v_rc.id;
                                                                                                      
			EXCEPTION                                                                                                                                            
			when OTHERS THEN                                                                                                                                     
           GET STACKED DIAGNOSTICS                                                                                               
                                   v_message_text = MESSAGE_TEXT,                                                                                               
																	 v_exception_detail=PG_EXCEPTION_DETAIL;
          v_table_name:='iac_asn_line';                                                                                                                                                                                                
					v_exception_detail:='A error occurs when update table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                             
					v_src_id=v_rc.id;                                                                                                                            
					perform ep_temp_master.sp_func_write_ex_log(v_sap_log_id,v_log_id,v_log_line_id,v_group_id,v_group_line_id,v_group_name,v_group_line_name,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);  
          v_fail_count:=v_fail_count+1;     

          update ""ep_temp_master"".iac_asn_line set ex_flag=1 where id=v_rc.id;                                                                                                   
      end;                                                                                                                                                      
end loop;   
return query select v_last_id,v_group_id,v_group_line_id,v_group_name,v_group_line_name,v_update_count,v_fail_count,v_miss_count;

return ;                                                                                                                                                                                                                                                                                                  
  --return ;                                                                                                                                                     
                                                                                                                                                                
end;                                                                                                                                                            
$function$
"
"sp_asn_group_update_ref_miss","CREATE OR REPLACE FUNCTION ep_temp_master.sp_asn_group_update_ref_miss(v_sap_log_id character varying, v_limit integer, v_offset integer)
 RETURNS SETOF record
 LANGUAGE plpgsql
AS $function$                                                                                                                         
                                                                                                                                                                
declare                                                                                                                                                         
v_rc	record;                                                                                                                                                  
v_pre_period_id integer;                                                                                                                                        
v_start_datetime varchar;                                                                                                                                       
v_end_datetime varchar;                                                                                                                                         
v_count_1	integer;                                                                                                                                             


                                                                                                                                                                
--异常捕获信息                                                                                                                                                  
v_table_name varchar;                                                                                                                                           
v_column_name varchar;                                                                                                                                          
v_message_text text;                                                                                                                                            
v_exception_detail text;                                                                                                                                        
v_src_id int4;                                                                                                                                                  
                                                                                                                                                                
--记录处理日志相关                                                                                                                                              
v_proc_line_count int4;                                                                                                                                         
v_proc_line_fail_count int4;                                                                                                                                    
v_start_time TIMESTAMP;                                                                                                                                         
v_end_time TIMESTAMP;
                                                                                                                                           
v_buyer_erp_id varchar;
v_vendor_code  varchar;
v_buyer_id integer;
v_vendor_id integer;
v_miss      integer;

v_update_count integer;
v_fail_count integer; 
v_miss_count integer;
v_order_line_id integer;
v_order_id      integer;

v_last_id    integer;
v_break_id integer;
v_group_name  varchar;
v_group_line_name varchar;
v_group_id   integer;
v_group_line_id integer;
v_log_id     integer;
v_log_line_id integer;

begin                                                                                                                                                           
v_proc_line_count:=0;                                                                                                                                           
v_proc_line_fail_count:=0;                                                                                                                                      
v_start_time:=now();                                                                                                                                            
                                                                                                                                                           
                                                                                                                                                                                   
--遍历 iac_purchase_order 表,更新下关联字段

--获取配置的group_id 和group_line_id;
v_update_count:=0;
v_fail_count:=0;
v_miss_count:=0;
v_last_id:=0;
v_group_name:='TRANS_ASN';
v_group_line_name:='iac_asn';
select id into v_group_id from public.iac_interface_temp_table_group t where t.name='TRANS_ASN';
select id into v_group_line_id from ""public"".iac_interface_temp_table_group_line t where t.group_id=v_group_id and t.group_line_name='iac_asn';
select o_last_id,o_log_id,o_log_line_id into v_break_id,v_log_id,v_log_line_id from ep_temp_master.sp_func_get_log_info(v_sap_log_id,v_group_line_id);                                                                                                                     
for v_rc in select * from ep_temp_master.iac_asn where sap_log_id=v_sap_log_id and id>=v_break_id and (miss_flag=1 or ex_flag=1) order by id LIMIT v_limit offset v_offset                                                                                                                                 
loop                                                                                                                                                            
			begin
				  --更新表头关联字段

		      v_miss:=0;
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_asn' , 'plant_id', '""public"".pur_org_data' , 'plant_code', v_rc.id, v_rc.plant_code) 
          into v_miss;
          if v_miss=1 THEN         
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;         
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_asn' , 'vendor_id', '""public"".iac_vendor' , 'vendor_code', v_rc.id, v_rc.vendor_code_sap)
          into v_miss;		
          if v_miss=1 THEN
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;         								
				
				
          --所有关联字段都更新成功,设置标志位为0   
          update ""ep_temp_master"".iac_asn set miss_flag=0,ex_flag=0 where id=v_rc.id;      
				 

          v_update_count:=v_update_count+1;                                                                                                        
          v_last_id=v_rc.id;                                                                                          
			EXCEPTION                                                                                                                                            
			when OTHERS THEN                                                                                                                                     
           GET STACKED DIAGNOSTICS                                                                                               
                                   v_message_text = MESSAGE_TEXT,                                                                                               
																	 v_exception_detail=PG_EXCEPTION_DETAIL;
          v_table_name:='iac_asn';                                                                                                                                                                                                
					v_exception_detail:='A error occurs when update table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                             
					v_src_id=v_rc.id;                                                                                                                            
					perform ep_temp_master.sp_func_write_ex_log(v_sap_log_id,v_log_id,v_log_line_id,v_group_id,v_group_line_id,v_group_name,v_group_line_name,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);  
          v_fail_count:=v_fail_count+1;        

          update ""ep_temp_master"".iac_asn set ex_flag=1 where id=v_rc.id;                                                                                               
      end;                                                                                                                                                      
end loop;        
return query select v_last_id,v_group_id,v_group_line_id,v_group_name,v_group_line_name,v_update_count,v_fail_count,v_miss_count;

--更新po unconfirm detail 关联字段
v_update_count:=0;
v_fail_count:=0;
v_miss_count:=0;
v_last_id:=0;
v_group_line_name:='iac_asn_line';
select id into v_group_line_id from ""public"".iac_interface_temp_table_group_line t where t.group_id=v_group_id and t.group_line_name='iac_asn_line';                                                                                                                   
select o_last_id,o_log_id,o_log_line_id into v_break_id,v_log_id,v_log_line_id from ep_temp_master.sp_func_get_log_info(v_sap_log_id,v_group_line_id);  
for v_rc in select * from ep_temp_master.iac_asn_line where sap_log_id=v_sap_log_id and id>=v_break_id and (miss_flag=1 or ex_flag=1) order by id LIMIT v_limit offset v_offset                                                                                                                                 
loop                                                                                                                                                            
			begin
		      v_miss:=0;
          select id into v_order_id from ""public"".iac_purchase_order t where t.document_erp_id=v_rc.po_code;
	        if v_order_id is null THEN
             update ""ep_temp_master"".iac_asn_line set miss_flag=1 where id=v_rc.id;
             update ""ep_temp_master"".iac_asn set miss_flag=1 where asn_no=v_rc.asn_no and 
             sap_log_id=v_sap_log_id;
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;

          select id into v_order_line_id from ""public"".iac_purchase_order_line t where t.document_erp_id=v_rc.po_code 
          and t.document_line_erp_id=v_rc.po_line_code;
	        if v_order_line_id is null THEN
             update ""ep_temp_master"".iac_asn_line set miss_flag=1 where id=v_rc.id;
             update ""ep_temp_master"".iac_asn set miss_flag=1 where asn_no=v_rc.asn_no and 
             sap_log_id=v_sap_log_id;
             v_miss_count:=v_miss_count+1;
             continue;
          end if;			  
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_asn_line' , 'buyer_id', '""public"".buyer_code' , 'buyer_erp_id', v_rc.id, v_rc.buyer_erp_id) 
          into v_miss;
          if v_miss=1 THEN         
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;         
				  --更新表头关联字段
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_asn_line' , 'part_id', '""public"".material_master' , 'part_unique_code', v_rc.id, v_rc.part_no||v_rc.plant_code)
          into v_miss;			
          if v_miss=1 THEN
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;	        								
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_asn_line' , 'plant_id', '""public"".pur_org_data' , 'plant_code', v_rc.id, v_rc.plant_code)
          into v_miss;
          if v_miss=1 THEN
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;         
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_asn_line' , 'vendor_id', '""public"".iac_vendor' , 'vendor_code', v_rc.id, v_rc.vendor_code_sap)
					into v_miss;		
          if v_miss=1 THEN
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;         			
									
				
          --所有关联字段都更新成功,设置标志位为0   
          update ""ep_temp_master"".iac_asn_line set miss_flag=0,ex_flag=0 where id=v_rc.id;      
				 

          v_update_count:=v_update_count+1;                                                                                                        
          v_last_id=v_rc.id;
                                                                                                      
			EXCEPTION                                                                                                                                            
			when OTHERS THEN                                                                                                                                     
           GET STACKED DIAGNOSTICS                                                                                               
                                   v_message_text = MESSAGE_TEXT,                                                                                               
																	 v_exception_detail=PG_EXCEPTION_DETAIL;
          v_table_name:='iac_asn_line';                                                                                                                                                                                                
					v_exception_detail:='A error occurs when update table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                             
					v_src_id=v_rc.id;                                                                                                                            
					perform ep_temp_master.sp_func_write_ex_log(v_sap_log_id,v_log_id,v_log_line_id,v_group_id,v_group_line_id,v_group_name,v_group_line_name,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);  
          v_fail_count:=v_fail_count+1;     

          update ""ep_temp_master"".iac_asn_line set ex_flag=1 where id=v_rc.id;                                                                                                   
      end;                                                                                                                                                      
end loop;   
return query select v_last_id,v_group_id,v_group_line_id,v_group_name,v_group_line_name,v_update_count,v_fail_count,v_miss_count;

return ;                                                                                                                                                                                                                                                                                                  
  --return ;                                                                                                                                                     
                                                                                                                                                                
end;                                                                                                                                                            
$function$
"
"sp_func_get_log_info","CREATE OR REPLACE FUNCTION ep_temp_master.sp_func_get_log_info(v_sap_log_id character varying, v_group_line_id integer, OUT o_log_id integer, OUT o_log_line_id integer, OUT o_last_id integer, OUT o_insert_count integer, OUT o_update_count integer, OUT o_fail_count integer, OUT o_miss_count integer)
 RETURNS record
 LANGUAGE plpgsql
AS $function$                                                                                                                         
                                                                                                                                                                
declare                                                                                                                                                         
                                                                                                                                     
v_count_1	integer;                                                                                                                                             
                                                                                                                                                                
                                                                                                                                        
begin                                                                                                                                                           
                                                                                                                               

o_last_id:=0;

                                                                                                                                                                
  select t.group_exe_id,t.id,t.last_id,t.insert_record_counts,t.update_record_counts,t.fail_record_counts,t.miss_record_counts
  into o_log_id,o_log_line_id,o_last_id,o_insert_count,o_update_count,o_fail_count,o_miss_count 
  from ""public"".iac_interface_temp_table_group_exe_line t where t.sap_log_id=v_sap_log_id and t.group_line_id=v_group_line_id;                                                                                                                                           
  if o_last_id is null THEN
     o_last_id:=0;
     o_insert_count:=0;
     o_update_count:=0;
     o_fail_count:=0;
     o_miss_count:=0;
  end if;                                                                                                                                                   
  return ;                                                                                                                                                     
                                                                                                                                                                
end;                                                                                                                                                            
$function$
"
"sp_func_write_ex_log","CREATE OR REPLACE FUNCTION ep_temp_master.sp_func_write_ex_log(v_sap_log_id character varying, v_log_id integer, v_log_line_id integer, v_group_id integer, v_group_line_id integer, v_group_name character varying, v_group_line_name character varying, v_table_name character varying, v_column_name character varying, v_message_text text, v_exception_detail text, v_src_id integer)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$

declare

v_count_1	integer;
v_exe_sql    varchar;
begin

	INSERT INTO ""public"".iac_interface_temp_table_group_exe_log (
		group_id,
		group_line_id,
		start_time,
		TABLE_NAME,
		COLUMN_NAME,
		MESSAGE_TEXT,
		exception_detail,
		group_name,
		group_line_name,
    sap_log_id,
    src_id,
    group_exe_id,
    group_exe_line_id
	)
	VALUES
		(
			v_group_id,
			v_group_line_id,
			now(),
			v_table_name,
			v_column_name,
			v_message_text,
			v_exception_detail,
			v_group_name,
			v_group_line_name,
		  v_sap_log_id,
      v_src_id,
      v_log_id,
      v_log_line_id
		);

  

  return 1;
end;
$function$
"
"sp_po_group_trans_prod","CREATE OR REPLACE FUNCTION ep_temp_master.sp_po_group_trans_prod(v_sap_log_id character varying, v_limit integer, v_offset integer)
 RETURNS SETOF record
 LANGUAGE plpgsql
AS $function$                                                                                                                         
                                                                                                                                                                
declare                                                                                                                                                         
v_rc	record;                                                                                                                                                  
v_pre_period_id integer;                                                                                                                                        
v_start_datetime varchar;                                                                                                                                       
v_end_datetime varchar;                                                                                                                                         
v_count_1	integer;                                                                                                                                             


                                                                                                                                                                
--异常捕获信息                                                                                                                                                  
v_table_name varchar;                                                                                                                                           
v_column_name varchar;                                                                                                                                          
v_message_text text;                                                                                                                                            
v_exception_detail text;                                                                                                                                        
v_src_id int4;                                                                                                                                                  
                                                                                                                                                                
--记录处理日志相关                                                                                                                                              
v_proc_line_count int4;                                                                                                                                         
v_proc_line_fail_count int4;                                                                                                                                    
v_start_time TIMESTAMP;                                                                                                                                         
v_end_time TIMESTAMP;
                                                                                                                                           
v_buyer_erp_id varchar;
v_vendor_code  varchar;
v_buyer_id integer;
v_vendor_id integer;
v_miss      integer;

v_update_count integer;
v_fail_count integer; 
v_miss_count integer;
v_count      integer;

v_last_id    integer;
v_order_id   integer;
v_order_his_id integer;

v_break_id integer;
v_group_name  varchar;
v_group_line_name varchar;
v_group_id   integer;
v_group_line_id integer;
v_log_id     integer;
v_log_line_id integer;

begin                                                                                                                                                           
v_proc_line_count:=0;                                                                                                                                           
v_proc_line_fail_count:=0;                                                                                                                                      
v_start_time:=now();                                                                                                                                            
                                                                                                                                                            
                                                                                                                                                                                   
--遍历 iac_purchase_order 表,更新下关联字段

--获取配置的group_id 和group_line_id;
v_fail_count:=0;
v_update_count:=0;
v_miss_count:=0;
v_last_id:=0;
v_group_name:='TRANS_PO';
v_group_line_name:='iac_purchase_order';
select id into v_group_id from public.iac_interface_temp_table_group t where t.name='TRANS_PO';
select id into v_group_line_id from ""public"".iac_interface_temp_table_group_line t where t.group_id=v_group_id and t.group_line_name='iac_purchase_order';                                                                                                                   
select o_last_id,o_log_id,o_log_line_id into v_break_id,v_log_id,v_log_line_id from ep_temp_master.sp_func_get_log_info(v_sap_log_id,v_group_line_id);  
for v_rc in select * from ep_temp_master.iac_purchase_order where sap_log_id=v_sap_log_id and id>=v_break_id and trans_prod_flag=0 and miss_flag=0 and ex_flag=0 order by id LIMIT v_limit offset v_offset                                                                                                                                 
loop                                                                                                                                                            
			begin
      select count(*) into v_count from ""public"".iac_purchase_order t where t.document_erp_id=v_rc.document_erp_id;
      if v_count>=1 THEN
         continue; 
      end if;

			INSERT INTO ""public"".iac_purchase_order (
				buyer_erp_id,
				changed,
				company_code,
				contact_fax,
				contact_name,
				contact_person,
				contact_phone,
				created_by,
				currency,
				deletion_flag,
				document_erp_id,
				exchange_rate,
				incoterm,
				incoterm1,
				incoterm2,
				language_key,
				manually_po_comment,
				manually_po_comment2,
				manually_po_reason,
				manually_po_reason_type,
				manually_po_type,
				NAME,
				note,
				odoo_deletion_flag,
				order_category,
				order_date,
				order_release_status,
				order_type,
				payment_term,
				purchase_org,
				STATE,
				status,
				vendor_code,
				version_no,
				warehouse,
				your_reference,
				our_reference,
				write_date,
				create_date,
				sap_key,
				sap_log_id,
				address_odoo_id,
				buyer_id,
				company_id,
				currency_id,
				incoterm_id,
				payment_term_id,
				plant_id,
				vendor_id,
				create_uid
			) SELECT
				buyer_erp_id,
				changed,
				company_code,
				contact_fax,
				contact_name,
				contact_person,
				contact_phone,
				created_by,
				currency,
				deletion_flag,
				document_erp_id,
				exchange_rate,
				incoterm,
				incoterm1,
				incoterm2,
				language_key,
				manually_po_comment,
				manually_po_comment2,
				manually_po_reason,
				manually_po_reason_type,
				manually_po_type,
				NAME,
				note,
				odoo_deletion_flag,
				order_category,
				order_date,
				order_release_status,
				order_type,
				payment_term,
				purchase_org,
				STATE,
				status,
				vendor_code,
				version_no,
				warehouse,
				your_reference,
				our_reference,
				write_date,
				create_date,
				sap_key,
				sap_log_id,
				address_odoo_id,
				buyer_id,
				company_id,
				currency_id,
				incoterm_id,
				payment_term_id,
				plant_id,
				vendor_id,
				1
			FROM
				ep_temp_master.iac_purchase_order where id=v_rc.id returning id into v_order_id;
                                                                                                
          
       ---写入订单明细条目
			INSERT INTO public.iac_purchase_order_line (
				buyer_erp_id,
				change_date,
				deletion_flag,
				delivery_complete,
				delivery_date,
				document_erp_id,
				document_line_erp_id,
				line_text,
				manufacturer_part_no,
				NAME,
				part_no,
				part_no1,
				plant_code,
				price,
				price_date,
				price_unit,
				purchase_req_item_no,
				purchase_req_no,
				quantity,
				reject_flag,
				revision_level,
				rfq_no,
				short_text,
				STATE,
				storage_location,
				tax_code,
				tracking_number,
				unit,
				vendor_code,
				vendor_delivery_date,
				vendor_exception_reason,
				vendor_part_no,
				vendor_to_be_supply,
				create_date,
				write_date,
				address_id,
				sap_key,
				sap_log_id,
				order_id,
				buyer_id,
				part_id,
				plant_id,
				vendor_id,				
				create_uid
			) SELECT
				buyer_erp_id,
				change_date,
				deletion_flag,
				delivery_complete,
				delivery_date,
				document_erp_id,
				document_line_erp_id,
				line_text,
				manufacturer_part_no,
				NAME,
				part_no,
				part_no1,
				plant_code,
				price,
				price_date,
				price_unit,
				purchase_req_item_no,
				purchase_req_no,
				quantity,
				reject_flag,
				revision_level,
				rfq_no,
				short_text,
				STATE,
				storage_location,
				tax_code,
				tracking_number,
				unit,
				vendor_code,
				vendor_delivery_date,
				vendor_exception_reason,
				vendor_part_no,
				vendor_to_be_supply,
				create_date,
				write_date,
				address_id,
				sap_key,
				sap_log_id,
				v_order_id,
				buyer_id,
				part_id,
				plant_id,
				vendor_id,				
				1
			FROM
				ep_temp_master.iac_purchase_order_line where document_erp_id=v_rc.document_erp_id;
     
     --写入订单历史表
			INSERT INTO ""public"".iac_purchase_order_history (
				buyer_erp_id,
				company_code,
				contact_fax,
				contact_name,
				contact_person,
				contact_phone,
				created_by,
				currency,
				deletion_flag,
				document_erp_id,
				exchange_rate,
				incoterm,
				incoterm1,
				incoterm2,
				language_key,
				manually_po_comment,
				manually_po_comment2,
				manually_po_reason,
				manually_po_reason_type,
				manually_po_type,
				NAME,
				note,
				odoo_deletion_flag,
				order_date,
				order_release_status,
				order_type,
				payment_term,
				purchase_org,
				status,
				vendor_code,
				warehouse,
				your_reference,
				our_reference,
				write_date,
				create_date,
				sap_key,
				sap_log_id,
				buyer_id,
				company_id,
				currency_id,
				incoterm_id,
				payment_term_id,
				plant_id,
				vendor_id,
                ori_order_id,
				create_uid
			) SELECT
				buyer_erp_id,
				company_code,
				contact_fax,
				contact_name,
				contact_person,
				contact_phone,
				created_by,
				currency,
				deletion_flag,
				document_erp_id,
				exchange_rate,
				incoterm,
				incoterm1,
				incoterm2,
				language_key,
				manually_po_comment,
				manually_po_comment2,
				manually_po_reason,
				manually_po_reason_type,
				manually_po_type,
				NAME,
				note,
				odoo_deletion_flag,
				order_date,
				order_release_status,
				order_type,
				payment_term,
				purchase_org,
				status,
				vendor_code,
				warehouse,
				your_reference,
				our_reference,
				write_date,
				create_date,
				sap_key,
				sap_log_id,
				buyer_id,
				company_id,
				currency_id,
				incoterm_id,
				payment_term_id,
				plant_id,
				vendor_id,
				v_order_id,
				1
			FROM
				ep_temp_master.iac_purchase_order_history where document_erp_id=v_rc.document_erp_id returning id into v_order_his_id;     


			update ""public"".iac_purchase_order set history_order_id=v_order_his_id where id=v_order_id;

       ---写入订单明细历史表条目
		INSERT INTO ""public"".iac_purchase_order_line_history (
			buyer_erp_id,
			deletion_flag,
			delivery_complete,
			delivery_date,
			document_erp_id,
			document_line_erp_id,
			line_text,
			manufacturer_part_no,
			NAME,
			part_no,
			part_no1,
			plant_code,
			price,
			price_date,
			price_unit,
			purchase_req_item_no,
			purchase_req_no,
			quantity,
			reject_flag,
			revision_level,
			rfq_no,
			short_text,
			storage_location,
			tax_code,
			tracking_number,
			unit,
			vendor_code,
			vendor_part_no,
			vendor_to_be_supply,
			create_date,
			write_date,
			address_id,
			sap_key,
			sap_log_id,
			order_id,
			his_order_id,
			part_id,
			plant_id,
			vendor_id,
			buyer_id,
			create_uid
		) SELECT
			buyer_erp_id,
			deletion_flag,
			delivery_complete,
			delivery_date,
			document_erp_id,
			document_line_erp_id,
			line_text,
			manufacturer_part_no,
			NAME,
			part_no,
			part_no1,
			plant_code,
			price,
			price_date,
			price_unit,
			purchase_req_item_no,
			purchase_req_no,
			quantity,
			reject_flag,
			revision_level,
			rfq_no,
			short_text,
			storage_location,
			tax_code,
			tracking_number,
			unit,
			vendor_code,
			vendor_part_no,
			vendor_to_be_supply,
			create_date,
			write_date,
			address_id,
			sap_key,
			sap_log_id,
			v_order_id,
			v_order_his_id,
			part_id,
			plant_id,
			vendor_id,
			buyer_id,			
			1
		FROM
			ep_temp_master.iac_purchase_order_line_history where document_erp_id=v_rc.document_erp_id;

        v_last_id=v_rc.id;  
        v_update_count:=v_update_count+1;                                                                               
			EXCEPTION                                                                                                                                            
			when OTHERS THEN                                                                                                                                     
           GET STACKED DIAGNOSTICS                                                                                               
                                   v_message_text = MESSAGE_TEXT,                                                                                               
																	 v_exception_detail=PG_EXCEPTION_DETAIL;
          v_table_name:='iac_purchase_order';                                                                                                                                                                                                
					v_exception_detail:='A error occurs when update table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                             
					v_src_id=v_rc.id;                                                                                                                            
					perform ep_temp_master.sp_func_write_ex_log(v_sap_log_id,v_log_id,v_log_line_id,v_group_id,v_group_line_id,v_group_name,v_group_line_name,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);  

          v_fail_count:=v_fail_count+1;                                                                                                    
      end;                                                                                                                                                      
end loop;        
return query select v_last_id,v_group_id,v_group_line_id,v_group_name,v_group_line_name,v_update_count,v_fail_count,v_miss_count;

                                                                                                                                                                                                                                                                                         
return ;                                                                                                                                                     
                                                                                                                                                                
end;                                                                                                                                                            
$function$
"
"sp_po_group_update_ref","CREATE OR REPLACE FUNCTION ep_temp_master.sp_po_group_update_ref(v_sap_log_id character varying, v_limit integer, v_offset integer)
 RETURNS SETOF record
 LANGUAGE plpgsql
AS $function$                                                                                                                         
                                                                                                                                                                
declare                                                                                                                                                         
v_rc	record;                                                                                                                                                  
v_pre_period_id integer;                                                                                                                                        
v_start_datetime varchar;                                                                                                                                       
v_end_datetime varchar;                                                                                                                                         
v_count_1	integer;                                                                                                                                             


                                                                                                                                                                
--异常捕获信息                                                                                                                                                  
v_table_name varchar;                                                                                                                                           
v_column_name varchar;                                                                                                                                          
v_message_text text;                                                                                                                                            
v_exception_detail text;                                                                                                                                        
v_src_id int4;                                                                                                                                                  
                                                                                                                                                                
--记录处理日志相关                                                                                                                                              
v_proc_line_count int4;                                                                                                                                         
v_proc_line_fail_count int4;                                                                                                                                    
v_start_time TIMESTAMP;                                                                                                                                         
v_end_time TIMESTAMP;
                                                                                                                                           
v_buyer_erp_id varchar;
v_vendor_code  varchar;
v_buyer_id integer;
v_vendor_id integer;
v_miss      integer;

v_update_count integer;
v_fail_count integer; 
v_miss_count integer;


v_last_id    integer;
v_break_id   integer;
v_group_name  varchar;
v_group_line_name varchar;
v_group_id   integer;
v_group_line_id integer;
v_log_id     integer;
v_log_line_id integer;


begin                                                                                                                                                           
v_proc_line_count:=0;                                                                                                                                           
v_proc_line_fail_count:=0;                                                                                                                                      
v_start_time:=now();                                                                                                                                            
                                                                                                                                                           
                                                                                                                                                                                   
--遍历 iac_purchase_order 表,更新下关联字段

--获取配置的group_id 和group_line_id;
v_update_count:=0;
v_fail_count:=0;
v_miss_count:=0;
v_last_id:=0;
v_group_name:='TRANS_PO';
v_group_line_name:='iac_purchase_order';
select id into v_group_id from public.iac_interface_temp_table_group t where t.name='TRANS_PO';
select id into v_group_line_id from ""public"".iac_interface_temp_table_group_line t where t.group_id=v_group_id and t.group_line_name='iac_purchase_order';                                                                                                                   
select o_last_id,o_log_id,o_log_line_id into v_break_id,v_log_id,v_log_line_id from ep_temp_master.sp_func_get_log_info(v_sap_log_id,v_group_line_id);  
for v_rc in select * from ep_temp_master.iac_purchase_order where sap_log_id=v_sap_log_id and id>=v_break_id order by id LIMIT v_limit offset v_offset                                                                                                                                 
loop                                                                                                                                                            
			begin
				  --更新表头关联字段
		      v_miss:=0;
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order' , 'payment_term_id', '""public"".payment_term' , 'payment_term', v_rc.id, v_rc.payment_term) 
          into v_miss;
          if v_miss=1 THEN         
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;         
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order' , 'company_id', '""public"".company' , 'company_code', v_rc.id, v_rc.company_code)
          into v_miss;		
          if v_miss=1 THEN
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;         								
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order' , 'incoterm_id', '""public"".incoterm' , 'incoterm', v_rc.id, v_rc.incoterm)
          into v_miss;
          if v_miss=1 THEN
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;         
      			
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order' , 'vendor_id', '""public"".iac_vendor' , 'vendor_code', v_rc.id, v_rc.vendor_code)
          into v_miss;		
          if v_miss=1 THEN
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;         			
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order' , 'vendor_reg_id', '""public"".iac_vendor_register' , 'vendor_code', v_rc.id, v_rc.vendor_code)
          into v_miss;	
          if v_miss=1 THEN
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;         				
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order' , 'buyer_id', '""public"".buyer_code' , 'buyer_erp_id', v_rc.id, v_rc.buyer_erp_id)
					into v_miss;		
          if v_miss=1 THEN
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;         			 	                                                                                                                                                  
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order' , 'currency_id', '""public"".res_currency' , 'name', v_rc.id, v_rc.currency)
          into v_miss;	
          if v_miss=1 THEN
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;   
		  select vendor_id into v_vendor_id from ""ep_temp_master"".iac_purchase_order t where t.id=v_rc.id;      				
					select ep_temp_master.sp_update_table_ref_int('""ep_temp_master"".iac_purchase_order' , 'plant_id', '""public"".iac_vendor' , 'id', v_rc.id, v_vendor_id,'plant')
          into v_miss;					 
          if v_miss=1 THEN
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;
          --所有关联字段都更新成功,设置标志位为0   
          update ""ep_temp_master"".iac_purchase_order set miss_flag=0,ex_flag=0 where id=v_rc.id;      
				  --更新plant_id
          /*
					UPDATE ""ep_temp_master"".iac_purchase_order T
					SET plant_id = (
						SELECT
							plant
						FROM
							""public"".iac_vendor v
						WHERE
							v. ID = T .vendor_id
					)
					WHERE
						T . ID = v_rc.id
					AND T .vendor_id IS NOT NULL;
          */


          v_update_count:=v_update_count+1;                                                                                                        
          v_last_id=v_rc.id;                                                                                          
			EXCEPTION                                                                                                                                            
			when OTHERS THEN                                                                                                                                     
           GET STACKED DIAGNOSTICS                                                                                               
                                   v_message_text = MESSAGE_TEXT,                                                                                               
																	 v_exception_detail=PG_EXCEPTION_DETAIL;
          v_table_name:='iac_purchase_order';                                                                                                                                                                                                
					v_exception_detail:='A error occurs when update table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                             
					v_src_id=v_rc.id;                                                                                                                            
					perform ep_temp_master.sp_func_write_ex_log(v_sap_log_id,v_log_id,v_log_line_id,v_group_id,v_group_line_id,v_group_name,v_group_line_name,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);  
          v_fail_count:=v_fail_count+1;        

          update ""ep_temp_master"".iac_purchase_order set ex_flag=1 where id=v_rc.id;                                                                                               
      end;                                                                                                                                                      
end loop;        
return query select v_last_id,v_group_id,v_group_line_id,v_group_name,v_group_line_name,v_update_count,v_fail_count,v_miss_count;

--更新po line 关联字段
v_update_count:=0;
v_fail_count:=0;
v_miss_count:=0;
v_last_id:=0;
v_group_line_name:='iac_purchase_order_line';
select id into v_group_line_id from ""public"".iac_interface_temp_table_group_line t where t.group_id=v_group_id and t.group_line_name='iac_purchase_order_line';                                                                                                                   
select o_last_id,o_log_id,o_log_line_id into v_break_id,v_log_id,v_log_line_id from ep_temp_master.sp_func_get_log_info(v_sap_log_id,v_group_line_id);  
for v_rc in select * from ep_temp_master.iac_purchase_order_line where sap_log_id=v_sap_log_id and id>=v_break_id order by id LIMIT v_limit offset v_offset                                                                                                                                 
loop                                                                                                                                                            
			begin
				  select t.buyer_erp_id,t.vendor_code,t.vendor_id,t.buyer_id  into v_buyer_erp_id,v_vendor_code,v_vendor_id,v_buyer_id from ep_temp_master.iac_purchase_order t where t.document_erp_id=v_rc.document_erp_id and 
          t.sap_log_id=v_sap_log_id;
          
          update ep_temp_master.iac_purchase_order_line  
          set buyer_erp_id =v_buyer_erp_id,vendor_code=v_vendor_code,
              vendor_id=v_vendor_id,buyer_id=v_buyer_id
          where id=v_rc.id;
          if v_buyer_id is  null or v_vendor_id is null  THEN 
             update ""ep_temp_master"".iac_purchase_order_line set miss_flag=1 where id=v_rc.id;
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;		

				  --更新表头关联字段
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order_line' , 'part_id', '""public"".material_master' , 'part_unique_code', v_rc.id, v_rc.part_no||v_rc.plant_code)
          into v_miss;			
          if v_miss=1 THEN
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;		                   
	
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order_line' , 'plant_id', '""public"".pur_org_data' , 'plant_code', v_rc.id, v_rc.plant_code) 
          into v_miss;	
          if v_miss=1 THEN
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;
          update ""ep_temp_master"".iac_purchase_order_line set miss_flag=0 where id=v_rc.id;								
          --perform ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order_line' , 'vendor_id', '""public"".iac_vendor' , 'vendor_code', v_rc.id, v_rc.vendor_code);	
          --perform ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order_line' , 'buyer_id', '""public"".buyer_code' , 'buyer_erp_id', v_rc.id, v_rc.buyer_erp_id); 				 


          v_update_count:=v_update_count+1;                                                                                                        
          v_last_id=v_rc.id;      
                                                                                                      
			EXCEPTION                                                                                                                                            
			when OTHERS THEN                                                                                                                                     
           GET STACKED DIAGNOSTICS                                                                                               
                                   v_message_text = MESSAGE_TEXT,                                                                                               
																	 v_exception_detail=PG_EXCEPTION_DETAIL;
          v_table_name:='iac_purchase_order_line';                                                                                                                                                                                                
					v_exception_detail:='A error occurs when update table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                             
					v_src_id=v_rc.id;                                                                                                                            
					perform ep_temp_master.sp_func_write_ex_log(v_sap_log_id,v_log_id,v_log_line_id,v_group_id,v_group_line_id,v_group_name,v_group_line_name,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);  
          v_fail_count:=v_fail_count+1;     

          update ""ep_temp_master"".iac_purchase_order_line set ex_flag=1 where id=v_rc.id;                                                                                                   
      end;                                                                                                                                                      
end loop;   
return query select v_last_id,v_group_id,v_group_line_id,v_group_name,v_group_line_name,v_update_count,v_fail_count,v_miss_count;

--更新po his 关联字段
v_update_count:=0;
v_fail_count:=0;
v_miss_count:=0;
v_last_id:=0;
v_group_line_name:='iac_purchase_order_history';
select id into v_group_line_id from ""public"".iac_interface_temp_table_group_line t where t.group_id=v_group_id and t.group_line_name='iac_purchase_order_history';                                                                                                                   
select o_last_id,o_log_id,o_log_line_id into v_break_id,v_log_id,v_log_line_id from ep_temp_master.sp_func_get_log_info(v_sap_log_id,v_group_line_id);  
for v_rc in select * from ep_temp_master.iac_purchase_order_history where sap_log_id=v_sap_log_id and id>=v_break_id order by id LIMIT v_limit offset v_offset                                                                                                                                 
loop                                                                                                                                                            
			begin

				  --更新表头关联字段
				  --更新表头关联字段
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order_history' , 'payment_term_id', '""public"".payment_term' , 'payment_term', v_rc.id, v_rc.payment_term)
          into v_miss;	
          if v_miss=1 THEN
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;						         
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order_history' , 'company_id', '""public"".company' , 'company_code', v_rc.id, v_rc.company_code)
          into v_miss;		
          if v_miss=1 THEN
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;															
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order_history' , 'incoterm_id', '""public"".incoterm' , 'incoterm', v_rc.id, v_rc.incoterm)
          into v_miss;	
				  if v_miss=1 THEN
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;		
		
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order_history' , 'vendor_id', '""public"".iac_vendor' , 'vendor_code', v_rc.id, v_rc.vendor_code)
          into v_miss;		
          if v_miss=1 THEN
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;						
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order_history' , 'vendor_reg_id', '""public"".iac_vendor_register' , 'vendor_code', v_rc.id, v_rc.vendor_code)
          into v_miss;		
          if v_miss=1 THEN
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;					  
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order_history' , 'buyer_id', '""public"".buyer_code' , 'buyer_erp_id', v_rc.id, v_rc.buyer_erp_id)
          into v_miss;			
          if v_miss=1 THEN
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;					 	                                                                                                                                                  
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order_history' , 'currency_id', '""public"".res_currency' , 'name', v_rc.id, v_rc.currency)
          into v_miss;	
          if v_miss=1 THEN
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;	
			select vendor_id into v_vendor_id from ""ep_temp_master"".iac_purchase_order_history t where t.id=v_rc.id;		  
					select ep_temp_master.sp_update_table_ref_int('""ep_temp_master"".iac_purchase_order_history' , 'plant_id', '""public"".iac_vendor' , 'id', v_rc.id, v_vendor_id,'plant')
          into v_miss;					 
          if v_miss=1 THEN
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;	

					update ""ep_temp_master"".iac_purchase_order_history set miss_flag=0,ex_flag=0 where id=v_rc.id;
					--更新表
          v_update_count:=v_update_count+1;                                                                                                        
          v_last_id=v_rc.id;                                                                                             
			EXCEPTION                                                                                                                                            
			when OTHERS THEN                                                                                                                                     
           GET STACKED DIAGNOSTICS                                                                                               
                                   v_message_text = MESSAGE_TEXT,                                                                                               
																	 v_exception_detail=PG_EXCEPTION_DETAIL;
          v_table_name:='iac_purchase_order_history';                                                                                                                                                                                                
					v_exception_detail:='A error occurs when update table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                             
					v_src_id=v_rc.id;                                                                                                                            
					perform ep_temp_master.sp_func_write_ex_log(v_sap_log_id,v_log_id,v_log_line_id,v_group_id,v_group_line_id,v_group_name,v_group_line_name,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);  
          v_fail_count:=v_fail_count+1; 

          update ""ep_temp_master"".iac_purchase_order_history set ex_flag=1 where id=v_rc.id;                                                                                                      
      end;                                                                                                                                                      
end loop;       
return query select v_last_id,v_group_id,v_group_line_id,v_group_name,v_group_line_name,v_update_count,v_fail_count,v_miss_count; 

--更新po line history 关联字段
v_update_count:=0;
v_fail_count:=0;
v_miss_count:=0;
v_last_id:=0;
v_group_line_name:='iac_purchase_order_line_history';
select id into v_group_line_id from ""public"".iac_interface_temp_table_group_line t where t.group_id=v_group_id and t.group_line_name='iac_purchase_order_line_history';                                                                                                                   
select o_last_id,o_log_id,o_log_line_id into v_break_id,v_log_id,v_log_line_id from ep_temp_master.sp_func_get_log_info(v_sap_log_id,v_group_line_id);  
for v_rc in select * from ep_temp_master.iac_purchase_order_line_history where sap_log_id=v_sap_log_id and id>=v_break_id order by id LIMIT v_limit offset v_offset                                                                                                                                 
loop                                                                                                                                                            
			begin
				  select t.buyer_erp_id,t.vendor_code,t.vendor_id,t.buyer_id  into v_buyer_erp_id,v_vendor_code,v_vendor_id,v_buyer_id from ep_temp_master.iac_purchase_order_history t where t.document_erp_id=v_rc.document_erp_id and 
          t.sap_log_id=v_sap_log_id;
          
          update ep_temp_master.iac_purchase_order_line_history  
          set buyer_erp_id =v_buyer_erp_id,vendor_code=v_vendor_code,
              vendor_id=v_vendor_id,buyer_id=v_buyer_id
          where id=v_rc.id;
          if v_vendor_id is null or v_buyer_id is null THEN 
             update ep_temp_master.iac_purchase_order_line_history  set miss_flag=1 where id =v_rc.id;
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;  

				  --更新表头关联字段
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order_line_history' , 'part_id', '""public"".material_master' , 'part_unique_code', v_rc.id, v_rc.part_no||v_rc.plant_code)
          into v_miss;	
          if v_miss=1 THEN
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;					                    
	
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order_line_history' , 'plant_id', '""public"".pur_org_data' , 'plant_code', v_rc.id, v_rc.plant_code)
          into v_miss;
          if v_miss=1 THEN
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;	
          update ep_temp_master.iac_purchase_order_line_history  set miss_flag=0,ex_flag=0 where id =v_rc.id;
          
          --select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order_line' , 'vendor_id', '""public"".iac_vendor' , 'vendor_code', v_rc.id, v_rc.vendor_code);	
          --perform ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order_line' , 'buyer_id', '""public"".buyer_code' , 'buyer_erp_id', v_rc.id, v_rc.buyer_erp_id); 				 

					--更新表
          v_update_count:=v_update_count+1;                                                                                                        
          v_last_id=v_rc.id;
                                                                                                     
			EXCEPTION                                                                                                                                            
			when OTHERS THEN                                                                                                                                     
           GET STACKED DIAGNOSTICS                                                                                               
                                   v_message_text = MESSAGE_TEXT,                                                                                               
																	 v_exception_detail=PG_EXCEPTION_DETAIL;
          v_table_name:='iac_purchase_order_line_history';                                                                                                                                                                                                
					v_exception_detail:='A error occurs when update table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                             
					v_src_id=v_rc.id;                                                                                                                            
					perform ep_temp_master.sp_func_write_ex_log(v_sap_log_id,v_log_id,v_log_line_id,v_group_id,v_group_line_id,v_group_name,v_group_line_name,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);  
          v_fail_count:=v_fail_count+1;       

          update ""ep_temp_master"".iac_purchase_order_line_history set ex_flag=1 where id=v_rc.id;                                                                                                 
      end;                                                                                                                                                      
end loop;
return query select v_last_id,v_group_id,v_group_line_id,v_group_name,v_group_line_name,v_update_count,v_fail_count,v_miss_count;
return ;                                                                                                                                                                                                                                                                                                  
  --return ;                                                                                                                                                     
                                                                                                                                                                
end;                                                                                                                                                            
$function$
"
"sp_po_group_update_ref_miss","CREATE OR REPLACE FUNCTION ep_temp_master.sp_po_group_update_ref_miss(v_sap_log_id character varying, v_limit integer, v_offset integer)
 RETURNS SETOF record
 LANGUAGE plpgsql
AS $function$                                                                                                                         
                                                                                                                                                                
declare                                                                                                                                                         
v_rc	record;                                                                                                                                                  
v_pre_period_id integer;                                                                                                                                        
v_start_datetime varchar;                                                                                                                                       
v_end_datetime varchar;                                                                                                                                         
v_count_1	integer;                                                                                                                                             

                                                                                                                                                                
--异常捕获信息                                                                                                                                                  
v_table_name varchar;                                                                                                                                           
v_column_name varchar;                                                                                                                                          
v_message_text text;                                                                                                                                            
v_exception_detail text;                                                                                                                                        
v_src_id int4;                                                                                                                                                  
                                                                                                                                                                
--记录处理日志相关                                                                                                                                              
v_proc_line_count int4;                                                                                                                                         
v_proc_line_fail_count int4;                                                                                                                                    
v_start_time TIMESTAMP;                                                                                                                                         
v_end_time TIMESTAMP;
                                                                                                                                           
v_buyer_erp_id varchar;
v_vendor_code  varchar;
v_buyer_id integer;
v_vendor_id integer;
v_miss      integer;

v_update_count integer;
v_fail_count integer; 
v_miss_count integer;


v_last_id    integer;
v_break_id integer;
v_group_name  varchar;
v_group_line_name varchar;
v_group_id   integer;
v_group_line_id integer;
v_log_id     integer;
v_log_line_id integer;
begin                                                                                                                                                           
v_proc_line_count:=0;                                                                                                                                           
v_proc_line_fail_count:=0;                                                                                                                                      
v_start_time:=now();                                                                                                                                            
                                                                                                                                                            
                                                                                                                                                                                   
--遍历 iac_purchase_order 表,更新下关联字段

--获取配置的group_id 和group_line_id;
v_fail_count:=0;
v_update_count:=0;
v_miss_count:=0;
v_last_id:=0;
v_group_name:='TRANS_PO';
v_group_line_name:='iac_purchase_order';
select id into v_group_id from public.iac_interface_temp_table_group t where t.name='TRANS_PO';
select id into v_group_line_id from ""public"".iac_interface_temp_table_group_line t where t.group_id=v_group_id and t.group_line_name='iac_purchase_order';                                                                                                                   
select o_last_id,o_log_id,o_log_line_id into v_break_id,v_log_id,v_log_line_id from ep_temp_master.sp_func_get_log_info(v_sap_log_id,v_group_line_id);  
for v_rc in select * from ep_temp_master.iac_purchase_order where sap_log_id=v_sap_log_id and id>=v_break_id and (miss_flag=1 or ex_flag=1) order by id LIMIT v_limit offset v_offset                                                                                                                                 
loop                                                                                                                                                            
			begin
				  --更新表头关联字段
		      v_miss:=0;
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order' , 'payment_term_id', '""public"".payment_term' , 'payment_term', v_rc.id, v_rc.payment_term) 
          into v_miss;
          if v_miss=1 THEN   
             v_miss_count:=v_miss_count+1;      
             continue;
          end if;         
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order' , 'company_id', '""public"".company' , 'company_code', v_rc.id, v_rc.company_code)
          into v_miss;		
          if v_miss=1 THEN
             v_miss_count:=v_miss_count+1;      
             continue;
          end if;         								
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order' , 'incoterm_id', '""public"".incoterm' , 'incoterm', v_rc.id, v_rc.incoterm)
          into v_miss;
               
          if v_miss=1 THEN
			v_miss_count:=v_miss_count+1;    
             continue;
          end if;         
      			
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order' , 'vendor_id', '""public"".iac_vendor' , 'vendor_code', v_rc.id, v_rc.vendor_code)
          into v_miss;		
          if v_miss=1 THEN
             v_miss_count:=v_miss_count+1;      
             continue;
          end if;         			
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order' , 'vendor_reg_id', '""public"".iac_vendor_register' , 'vendor_code', v_rc.id, v_rc.vendor_code)
          into v_miss;	
          if v_miss=1 THEN
             v_miss_count:=v_miss_count+1;      
             continue;
          end if;         				
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order' , 'buyer_id', '""public"".buyer_code' , 'buyer_erp_id', v_rc.id, v_rc.buyer_erp_id)
					into v_miss;		
          if v_miss=1 THEN
             v_miss_count:=v_miss_count+1;      
             continue;
          end if;         			 	                                                                                                                                                  
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order' , 'currency_id', '""public"".res_currency' , 'name', v_rc.id, v_rc.currency)
          into v_miss;	
          if v_miss=1 THEN
             v_miss_count:=v_miss_count+1;      
             continue;
          end if;
		  select vendor_id into v_vendor_id from ""ep_temp_master"".iac_purchase_order t where t.id=v_rc.id;
					select ep_temp_master.sp_update_table_ref_int('""ep_temp_master"".iac_purchase_order' , 'plant_id', '""public"".iac_vendor' , 'id', v_rc.id, v_vendor_id,'plant')
          into v_miss;					 
          if v_miss=1 THEN
             v_miss_count:=v_miss_count+1;      
             continue;
          end if;
          --所有关联字段都更新成功,设置标志位为0   
          update ""ep_temp_master"".iac_purchase_order set miss_flag=0,ex_flag=0 where id=v_rc.id;      
				  --更新plant_id
          /*
					UPDATE ""ep_temp_master"".iac_purchase_order T
					SET plant_id = (
						SELECT
							plant
						FROM
							""public"".iac_vendor v
						WHERE
							v. ID = T .vendor_id
					)
					WHERE
						T . ID = v_rc.id
					AND T .vendor_id IS NOT NULL;
          */

					--更新表
          v_update_count:=v_update_count+1;                                                                                                        
          v_last_id=v_rc.id;
                                                                             
                                                                                                       
			EXCEPTION                                                                                                                                            
			when OTHERS THEN                                                                                                                                     
           GET STACKED DIAGNOSTICS                                                                                               
                                   v_message_text = MESSAGE_TEXT,                                                                                               
																	 v_exception_detail=PG_EXCEPTION_DETAIL;
          v_table_name:='iac_purchase_order';                                                                                                                                                                                                
					v_exception_detail:='A error occurs when update table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                             
					v_src_id=v_rc.id;
                                                                                                                       
					perform ep_temp_master.sp_func_write_ex_log(v_sap_log_id,v_log_id,v_log_line_id,v_group_id,v_group_line_id,v_group_name,v_group_line_name,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);  
          v_fail_count:=v_fail_count+1;    

          update ""ep_temp_master"".iac_purchase_order set ex_flag=1 where id=v_rc.id;                                                                                                           
      end;                                                                                                                                                      
end loop;        
return query select v_last_id,v_group_id,v_group_line_id,v_group_name,v_group_line_name,v_update_count,v_fail_count,v_miss_count;

--更新po line 关联字段
v_fail_count:=0;
v_update_count:=0;
v_miss_count:=0;
v_last_id:=0;
v_group_line_name:='iac_purchase_order_line';
select id into v_group_line_id from ""public"".iac_interface_temp_table_group_line t where t.group_id=v_group_id and t.group_line_name='iac_purchase_order_line';                                                                                                                   
select o_last_id,o_log_id,o_log_line_id into v_break_id,v_log_id,v_log_line_id from ep_temp_master.sp_func_get_log_info(v_sap_log_id,v_group_line_id);  
for v_rc in select * from ep_temp_master.iac_purchase_order_line where sap_log_id=v_sap_log_id and id>=v_break_id and  (miss_flag=1 or ex_flag=1) order by id LIMIT v_limit offset v_offset                                                                                                                                 
loop                                                                                                                                                            
			begin
				  select t.buyer_erp_id,t.vendor_code,t.vendor_id,t.buyer_id  into v_buyer_erp_id,v_vendor_code,v_vendor_id,v_buyer_id from ep_temp_master.iac_purchase_order t where t.document_erp_id=v_rc.document_erp_id and 
          t.sap_log_id=v_sap_log_id;
          
          update ep_temp_master.iac_purchase_order_line  
          set buyer_erp_id =v_buyer_erp_id,vendor_code=v_vendor_code,
              vendor_id=v_vendor_id,buyer_id=v_buyer_id
          where id=v_rc.id;
          if v_buyer_id is  null or v_vendor_id is null  THEN 
             v_miss_count:=v_miss_count+1;      
             update ""ep_temp_master"".iac_purchase_order_line set miss_flag=1 where id=v_rc.id;
             continue;
          end if;		

				  --更新表头关联字段
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order_line' , 'part_id', '""public"".material_master' , 'part_unique_code', v_rc.id, v_rc.part_no||v_rc.plant_code)
          into v_miss;			
          if v_miss=1 THEN
             v_miss_count:=v_miss_count+1;      
             continue;
          end if;		                   
	
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order_line' , 'plant_id', '""public"".pur_org_data' , 'plant_code', v_rc.id, v_rc.plant_code) 
          into v_miss;	
          if v_miss=1 THEN
             v_miss_count:=v_miss_count+1;      
             continue;
          end if;
          update ""ep_temp_master"".iac_purchase_order_line set miss_flag=0,ex_flag=0 where id=v_rc.id;								
          --perform ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order_line' , 'vendor_id', '""public"".iac_vendor' , 'vendor_code', v_rc.id, v_rc.vendor_code);	
          --perform ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order_line' , 'buyer_id', '""public"".buyer_code' , 'buyer_erp_id', v_rc.id, v_rc.buyer_erp_id); 				 

					--更新表

          v_update_count:=v_update_count+1;                                                                                                        
          v_last_id=v_rc.id;
                                                                                                                                                                                    
			EXCEPTION                                                                                                                                            
			when OTHERS THEN                                                                                                                                     
           GET STACKED DIAGNOSTICS                                                                                               
                                   v_message_text = MESSAGE_TEXT,                                                                                               
																	 v_exception_detail=PG_EXCEPTION_DETAIL;
          v_table_name:='iac_purchase_order_line';                                                                                                                                                                                                
					v_exception_detail:='A error occurs when update table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                             
					v_src_id=v_rc.id;
                                                                                                                           
					perform ep_temp_master.sp_func_write_ex_log(v_sap_log_id,v_log_id,v_log_line_id,v_group_id,v_group_line_id,v_group_name,v_group_line_name,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);  
          v_fail_count:=v_fail_count+1;         

          update ""ep_temp_master"".iac_purchase_order_line set ex_flag=1 where id=v_rc.id;                                                                                              
      end;                                                                                                                                                      
end loop;   
return query select v_last_id,v_group_id,v_group_line_id,v_group_name,v_group_line_name,v_update_count,v_fail_count,v_miss_count;

--更新po his 关联字段
v_fail_count:=0;
v_update_count:=0;
v_miss_count:=0;
v_last_id:=0;
v_group_line_name:='iac_purchase_order_history';
select id into v_group_line_id from ""public"".iac_interface_temp_table_group_line t where t.group_id=v_group_id and t.group_line_name='iac_purchase_order_history';                                                                                                                   
select o_last_id,o_log_id,o_log_line_id into v_break_id,v_log_id,v_log_line_id from ep_temp_master.sp_func_get_log_info(v_sap_log_id,v_group_line_id);  
for v_rc in select * from ep_temp_master.iac_purchase_order_history where sap_log_id=v_sap_log_id and id>=v_break_id and (miss_flag=1 or ex_flag=1) order by id LIMIT v_limit offset v_offset                                                                                                                                 
loop                                                                                                                                                            
			begin

				  --更新表头关联字段
				  --更新表头关联字段
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order_history' , 'payment_term_id', '""public"".payment_term' , 'payment_term', v_rc.id, v_rc.payment_term)
          into v_miss;	
          if v_miss=1 THEN
             v_miss_count:=v_miss_count+1;      
             continue;
          end if;						         
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order_history' , 'company_id', '""public"".company' , 'company_code', v_rc.id, v_rc.company_code)
          into v_miss;		
          if v_miss=1 THEN
             v_miss_count:=v_miss_count+1;      
             continue;
          end if;															
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order_history' , 'incoterm_id', '""public"".incoterm' , 'incoterm', v_rc.id, v_rc.incoterm)
          into v_miss;	
				  if v_miss=1 THEN
             v_miss_count:=v_miss_count+1;      
             continue;
          end if;		
			
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order_history' , 'vendor_id', '""public"".iac_vendor' , 'vendor_code', v_rc.id, v_rc.vendor_code)
          into v_miss;		
          if v_miss=1 THEN
             v_miss_count:=v_miss_count+1;      
             continue;
          end if;						
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order_history' , 'vendor_reg_id', '""public"".iac_vendor_register' , 'vendor_code', v_rc.id, v_rc.vendor_code)
          into v_miss;		
          if v_miss=1 THEN
             v_miss_count:=v_miss_count+1;      
             continue;
          end if;					  
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order_history' , 'buyer_id', '""public"".buyer_code' , 'buyer_erp_id', v_rc.id, v_rc.buyer_erp_id)
          into v_miss;			
          if v_miss=1 THEN
             v_miss_count:=v_miss_count+1;      
             continue;
          end if;					 	                                                                                                                                                  
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order_history' , 'currency_id', '""public"".res_currency' , 'name', v_rc.id, v_rc.currency)
          into v_miss;	
          if v_miss=1 THEN
             v_miss_count:=v_miss_count+1;      
             continue;
          end if;	
			select vendor_id into v_vendor_id from ""ep_temp_master"".iac_purchase_order_history t where t.id=v_rc.id;
					select ep_temp_master.sp_update_table_ref_int('""ep_temp_master"".iac_purchase_order_history' , 'plant_id', '""public"".iac_vendor' , 'id', v_rc.id, v_vendor_id,'plant')
          into v_miss;					 
          if v_miss=1 THEN
             v_miss_count:=v_miss_count+1;      
             continue;
          end if;	

					update ""ep_temp_master"".iac_purchase_order_history set miss_flag=0,ex_flag=0 where id=v_rc.id;
					--更新表
          v_update_count:=v_update_count+1;                                                                                                        
          v_last_id=v_rc.id;
                                                                             
                                                                                                        
			EXCEPTION                                                                                                                                            
			when OTHERS THEN                                                                                                                                     
           GET STACKED DIAGNOSTICS                                                                                               
                                   v_message_text = MESSAGE_TEXT,                                                                                               
																	 v_exception_detail=PG_EXCEPTION_DETAIL;
          v_table_name:='iac_purchase_order_history';                                                                                                                                                                                                
					v_exception_detail:='A error occurs when update table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                             
					v_src_id=v_rc.id;                                                                                                                        
					perform ep_temp_master.sp_func_write_ex_log(v_sap_log_id,v_log_id,v_log_line_id,v_group_id,v_group_line_id,v_group_name,v_group_line_name,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);  
          v_fail_count:=v_fail_count+1;     

          update ""ep_temp_master"".iac_purchase_order_history set ex_flag=1 where id=v_rc.id;                                                                                                   
      end;                                                                                                                                                      
end loop;   
return query select v_last_id,v_group_id,v_group_line_id,v_group_name,v_group_line_name,v_update_count,v_fail_count,v_miss_count;   

--更新po line history 关联字段
v_fail_count:=0;
v_update_count:=0;
v_miss_count:=0;
v_last_id:=0;
v_group_line_name:='iac_purchase_order_line_history';
select id into v_group_line_id from ""public"".iac_interface_temp_table_group_line t where t.group_id=v_group_id and t.group_line_name='iac_purchase_order_line_history';                                                                                                                   
select o_last_id,o_log_id,o_log_line_id into v_break_id,v_log_id,v_log_line_id from ep_temp_master.sp_func_get_log_info(v_sap_log_id,v_group_line_id);  
for v_rc in select * from ep_temp_master.iac_purchase_order_line_history where sap_log_id=v_sap_log_id and id>=v_break_id and (miss_flag=1 or ex_flag=1) order by id LIMIT v_limit offset v_offset                                                                                                                                 
loop                                                                                                                                                            
			begin
				  select t.buyer_erp_id,t.vendor_code,t.vendor_id,t.buyer_id  into v_buyer_erp_id,v_vendor_code,v_vendor_id,v_buyer_id from ep_temp_master.iac_purchase_order_history t where t.document_erp_id=v_rc.document_erp_id and 
          t.sap_log_id=v_sap_log_id;
          
          update ep_temp_master.iac_purchase_order_line_history  
          set buyer_erp_id =v_buyer_erp_id,vendor_code=v_vendor_code,
              vendor_id=v_vendor_id,buyer_id=v_buyer_id
          where id=v_rc.id;
          if v_vendor_id is null or v_buyer_id is null THEN 
             v_miss_count:=v_miss_count+1;      
             update ep_temp_master.iac_purchase_order_line_history  set miss_flag=1 where id =v_rc.id;
             continue;
          end if;  

				  --更新表头关联字段
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order_line_history' , 'part_id', '""public"".material_master' , 'part_unique_code', v_rc.id, v_rc.part_no||v_rc.plant_code)
          into v_miss;	
          if v_miss=1 THEN
             v_miss_count:=v_miss_count+1;      
             continue;
          end if;					                    
	
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order_line_history' , 'plant_id', '""public"".pur_org_data' , 'plant_code', v_rc.id, v_rc.plant_code)
          into v_miss;
          if v_miss=1 THEN
             v_miss_count:=v_miss_count+1;      
             continue;
          end if;	
          update ep_temp_master.iac_purchase_order_line_history  set miss_flag=0,ex_flag=0 where id =v_rc.id;
          
          --select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order_line' , 'vendor_id', '""public"".iac_vendor' , 'vendor_code', v_rc.id, v_rc.vendor_code);	
          --perform ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order_line' , 'buyer_id', '""public"".buyer_code' , 'buyer_erp_id', v_rc.id, v_rc.buyer_erp_id); 				 

					--更新表

          v_update_count:=v_update_count+1;   
          v_last_id=v_rc.id;                                                                                                     

                                                                                                       
			EXCEPTION                                                                                                                                            
			when OTHERS THEN                                                                                                                                     
           GET STACKED DIAGNOSTICS                                                                                               
                                   v_message_text = MESSAGE_TEXT,                                                                                               
																	 v_exception_detail=PG_EXCEPTION_DETAIL;
          v_table_name:='iac_purchase_order_line_history';                                                                                                                                                                                                
					v_exception_detail:='A error occurs when update table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                             
					v_src_id=v_rc.id;                                                                                                                           
					perform ep_temp_master.sp_func_write_ex_log(v_sap_log_id,v_log_id,v_log_line_id,v_group_id,v_group_line_id,v_group_name,v_group_line_name,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);  
          v_fail_count:=v_fail_count+1; 

          update ""ep_temp_master"".iac_purchase_order_line_history set ex_flag=1 where id=v_rc.id;                                                                                                        
      end;                                                                                                                                                      
end loop;   
return query select v_last_id,v_group_id,v_group_line_id,v_group_name,v_group_line_name,v_update_count,v_fail_count,v_miss_count;                                                                                                                                                                                                                                                                                             
return ;                                                                                                                                                     
                                                                                                                                                                
end;                                                                                                                                                            
$function$
"
"sp_po_unconfirm_group_trans_prod","CREATE OR REPLACE FUNCTION ep_temp_master.sp_po_unconfirm_group_trans_prod(v_sap_log_id character varying, v_limit integer, v_offset integer)
 RETURNS SETOF record
 LANGUAGE plpgsql
AS $function$                                                                                                                         
                                                                                                                                                                
declare                                                                                                                                                         
v_rc	record;                                                                                                                                                  
v_pre_period_id integer;                                                                                                                                        
v_start_datetime varchar;                                                                                                                                       
v_end_datetime varchar;                                                                                                                                         
v_count_1	integer;                                                                                                                                             


                                                                                                                                                                
--异常捕获信息                                                                                                                                                  
v_table_name varchar;                                                                                                                                           
v_column_name varchar;                                                                                                                                          
v_message_text text;                                                                                                                                            
v_exception_detail text;                                                                                                                                        
v_src_id int4;                                                                                                                                                  
                                                                                                                                                                
--记录处理日志相关                                                                                                                                              
v_proc_line_count int4;                                                                                                                                         
v_proc_line_fail_count int4;                                                                                                                                    
v_start_time TIMESTAMP;                                                                                                                                         
v_end_time TIMESTAMP;
                                                                                                                                           
v_buyer_erp_id varchar;
v_vendor_code  varchar;
v_buyer_id integer;
v_vendor_id integer;
v_miss      integer;
v_count     integer;

v_update_count integer;
v_fail_count integer; 
v_miss_count integer;
v_order_line_id integer;

v_last_id    integer;
v_break_id integer;
v_group_name  varchar;
v_group_line_name varchar;
v_group_id   integer;
v_group_line_id integer;
v_log_id     integer;
v_log_line_id integer;
begin                                                                                                                                                           
v_proc_line_count:=0;                                                                                                                                           
v_proc_line_fail_count:=0;                                                                                                                                      
v_start_time:=now();                                                                                                                                            
                                                                                                                                                           
                                                                                                                                                                                   


--获取配置的group_id 和group_line_id;
v_update_count:=0;
v_fail_count:=0;
v_miss_count:=0;
v_last_id:=0;
v_group_name:='TRANS_PO_UNCONFIRM';
v_group_line_name:='iac_purchase_order_unconfirm_summary';
select id into v_group_id from public.iac_interface_temp_table_group t where t.name='TRANS_PO_UNCONFIRM';
select id into v_group_line_id from ""public"".iac_interface_temp_table_group_line t where t.group_id=v_group_id and t.group_line_name='iac_purchase_order_unconfirm_summary';                                                                                                                   
select o_last_id,o_log_id,o_log_line_id into v_break_id,v_log_id,v_log_line_id from ep_temp_master.sp_func_get_log_info(v_sap_log_id,v_group_line_id);  
for v_rc in select * from ep_temp_master.iac_purchase_order_unconfirm_summary where sap_log_id=v_sap_log_id and id>=v_break_id and  trans_prod_flag=0 and miss_flag=0 and ex_flag=0 order by id LIMIT v_limit offset v_offset                                                                                                                                 
loop                                                                                                                                                            
			begin
        select count(*) into v_count from ""public"".iac_purchase_order_unconfirm_summary where sap_key=v_rc.sap_key;
        if v_count>=1 THEN
           continue;
        end if;
				INSERT INTO ""public"".iac_purchase_order_unconfirm_summary (
				  buyer_erp_id,
					currency,
					description,
					division_code,
					document_line_no,
					document_no,
					last_update_date,
					part_no,
					plant_id,
					price,
					price_unit,
					sap_key,
					source_code,
					unconqtyd,
					unconqtyr,
					vendor_erp_id,
					vendor_name,
					sap_log_id,
					buyer_id,
					currency_id,
					division_id,
					odoo_plant_id,
					order_id,
					order_line_id
				) SELECT
					buyer_erp_id,
					currency,
					description,
					division_code,
					document_line_no,
					document_no,
					last_update_date,
					part_no,
					plant_id,
					price,
					price_unit,
					sap_key,
					source_code,
					unconqtyd,
					unconqtyr,
					vendor_erp_id,
					vendor_name,
					sap_log_id,
					buyer_id,
					currency_id,
					division_id,
					odoo_plant_id,
					order_id,
					order_line_id
				FROM
					ep_temp_master.iac_purchase_order_unconfirm_summary where id=v_rc.id;   				
				
          --所有关联字段都更新成功,设置标志位为0   
          update ""ep_temp_master"".iac_purchase_order_unconfirm_summary set trans_prod_flag=1 where id=v_rc.id;      
				 

          v_update_count:=v_update_count+1;                                                                                                        
          v_last_id=v_rc.id;                                                                                          
			EXCEPTION                                                                                                                                            
			when OTHERS THEN                                                                                                                                     
           GET STACKED DIAGNOSTICS                                                                                               
                                   v_message_text = MESSAGE_TEXT,                                                                                               
																	 v_exception_detail=PG_EXCEPTION_DETAIL;
          v_table_name:='iac_purchase_order_unconfirm_summary';                                                                                                                                                                                                
					v_exception_detail:='A error occurs when update table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                             
					v_src_id=v_rc.id;                                                                                                                            
					perform ep_temp_master.sp_func_write_ex_log(v_sap_log_id,v_log_id,v_log_line_id,v_group_id,v_group_line_id,v_group_name,v_group_line_name,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);  
          v_fail_count:=v_fail_count+1;        

          update ""ep_temp_master"".iac_purchase_order_unconfirm_summary set ex_flag=1 where id=v_rc.id;                                                                                               
      end;                                                                                                                                                      
end loop;        
return query select v_last_id,v_group_id,v_group_line_id,v_group_name,v_group_line_name,v_update_count,v_fail_count,v_miss_count;

--更新po unconfirm detail 关联字段
v_update_count:=0;
v_fail_count:=0;
v_miss_count:=0;
v_last_id:=0;
v_group_line_name:='iac_purchase_order_unconfirm_detail';
select id into v_group_line_id from ""public"".iac_interface_temp_table_group_line t where t.group_id=v_group_id and t.group_line_name='iac_purchase_order_unconfirm_detail';                                                                                                                   
select o_last_id,o_log_id,o_log_line_id into v_break_id,v_log_id,v_log_line_id from ep_temp_master.sp_func_get_log_info(v_sap_log_id,v_group_line_id);  
for v_rc in select * from ep_temp_master.iac_purchase_order_unconfirm_detail where sap_log_id=v_sap_log_id and id>=v_break_id and  trans_prod_flag=0 and miss_flag=0 order by id LIMIT v_limit offset v_offset                                                                                                                                 
loop                                                                                                                                                            
			begin
        select count(*) into v_count from ""public"".iac_purchase_order_unconfirm_detail where sap_key=v_rc.sap_key;
        if v_count>=1 THEN
           continue;
        end if;
		      INSERT INTO ""public"".iac_purchase_order_unconfirm_detail (
						buyer_erp_id,
						change_date,
						currency,
						deletion_flag,
						description,
						diff,
						division_code,
						document_line_no,
						document_no,
						FLAG,
						last_update_date,
						orig_total_qty,
						part_no,
						plant_id,
						price,
						priceunit,
						sap_key,
						source_code,
						total_qty,
						vendor_erp_id,
						vendor_name,
						sap_log_id,
						buyer_id,
						currency_id,
						division_id,
						odoo_plant_id,
						order_id,
						order_line_id,
						part_id
					) SELECT
						buyer_erp_id,
						change_date,
						currency,
						deletion_flag,
						description,
						diff,
						division_code,
						document_line_no,
						document_no,
						FLAG,
						last_update_date,
						orig_total_qty,
						part_no,
						plant_id,
						price,
						priceunit,
						sap_key,
						source_code,
						total_qty,
						vendor_erp_id,
						vendor_name,
						sap_log_id,
						buyer_id,
						currency_id,
						division_id,
						odoo_plant_id,
						order_id,
						order_line_id,
						part_id
					FROM
						ep_temp_master.iac_purchase_order_unconfirm_detail where id=v_rc.id;
				
          --所有关联字段都更新成功,设置标志位为0   
          update ""ep_temp_master"".iac_purchase_order_unconfirm_detail set trans_prod_flag=1 where id=v_rc.id;      
				 

          v_update_count:=v_update_count+1;                                                                                                        
          v_last_id=v_rc.id;
                                                                                                      
			EXCEPTION                                                                                                                                            
			when OTHERS THEN                                                                                                                                     
           GET STACKED DIAGNOSTICS                                                                                               
                                   v_message_text = MESSAGE_TEXT,                                                                                               
																	 v_exception_detail=PG_EXCEPTION_DETAIL;
          v_table_name:='iac_purchase_order_unconfirm_detail';                                                                                                                                                                                                
					v_exception_detail:='A error occurs when update table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                             
					v_src_id=v_rc.id;                                                                                                                            
					perform ep_temp_master.sp_func_write_ex_log(v_sap_log_id,v_log_id,v_log_line_id,v_group_id,v_group_line_id,v_group_name,v_group_line_name,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);  
          v_fail_count:=v_fail_count+1;     

          update ""ep_temp_master"".iac_purchase_order_unconfirm_detail set ex_flag=1 where id=v_rc.id;                                                                                                   
      end;                                                                                                                                                      
end loop;   
return query select v_last_id,v_group_id,v_group_line_id,v_group_name,v_group_line_name,v_update_count,v_fail_count,v_miss_count;

return ;                                                                                                                                                                                                                                                                                                  
  --return ;                                                                                                                                                     
                                                                                                                                                                
end;                                                                                                                                                            
$function$
"
"sp_po_unconfirm_group_update_ref","CREATE OR REPLACE FUNCTION ep_temp_master.sp_po_unconfirm_group_update_ref(v_sap_log_id character varying, v_limit integer, v_offset integer)
 RETURNS SETOF record
 LANGUAGE plpgsql
AS $function$                                                                                                                         
                                                                                                                                                                
declare                                                                                                                                                         
v_rc	record;                                                                                                                                                  
v_pre_period_id integer;                                                                                                                                        
v_start_datetime varchar;                                                                                                                                       
v_end_datetime varchar;                                                                                                                                         
v_count_1	integer;                                                                                                                                             


                                                                                                                                                                
--异常捕获信息                                                                                                                                                  
v_table_name varchar;                                                                                                                                           
v_column_name varchar;                                                                                                                                          
v_message_text text;                                                                                                                                            
v_exception_detail text;                                                                                                                                        
v_src_id int4;                                                                                                                                                  
                                                                                                                                                                
--记录处理日志相关                                                                                                                                              
v_proc_line_count int4;                                                                                                                                         
v_proc_line_fail_count int4;                                                                                                                                    
v_start_time TIMESTAMP;                                                                                                                                         
v_end_time TIMESTAMP;
                                                                                                                                           
v_buyer_erp_id varchar;
v_vendor_code  varchar;
v_buyer_id integer;
v_vendor_id integer;
v_miss      integer;

v_update_count integer;
v_fail_count integer; 
v_miss_count integer;
v_order_line_id integer;

v_last_id    integer;
v_break_id integer;
v_group_name  varchar;
v_group_line_name varchar;
v_group_id   integer;
v_group_line_id integer;
v_log_id     integer;
v_log_line_id integer;
begin                                                                                                                                                           
v_proc_line_count:=0;                                                                                                                                           
v_proc_line_fail_count:=0;                                                                                                                                      
v_start_time:=now();                                                                                                                                            
                                                                                                                                                           
                                                                                                                                                                                   
--遍历 iac_purchase_order 表,更新下关联字段

--获取配置的group_id 和group_line_id;
v_update_count:=0;
v_fail_count:=0;
v_miss_count:=0;
v_last_id:=0;
v_group_name:='TRANS_PO_UNCONFIRM';
v_group_line_name:='iac_purchase_order_unconfirm_summary';
select id into v_group_id from public.iac_interface_temp_table_group t where t.name='TRANS_PO_UNCONFIRM';
select id into v_group_line_id from ""public"".iac_interface_temp_table_group_line t where t.group_id=v_group_id and t.group_line_name='iac_purchase_order_unconfirm_summary';                                                                                                                   
select o_last_id,o_log_id,o_log_line_id into v_break_id,v_log_id,v_log_line_id from ep_temp_master.sp_func_get_log_info(v_sap_log_id,v_group_line_id);  
for v_rc in select * from ep_temp_master.iac_purchase_order_unconfirm_summary where sap_log_id=v_sap_log_id and id>=v_break_id order by id LIMIT v_limit offset v_offset                                                                                                                                 
loop                                                                                                                                                            
			begin
				  --更新表头关联字段

		      v_miss:=0;
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order_unconfirm_summary' , 'buyer_id', '""public"".buyer_code' , 'buyer_erp_id', v_rc.id, v_rc.buyer_erp_id) 
          into v_miss;
          if v_miss=1 THEN         
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;         
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order_unconfirm_summary' , 'currency_id', '""public"".res_currency' , 'name', v_rc.id, v_rc.currency)
          into v_miss;		
          if v_miss=1 THEN
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;         								
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order_unconfirm_summary' , 'division_id', '""public"".division_code' , 'division', v_rc.id, v_rc.division_code)
          into v_miss;
          if v_miss=1 THEN
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;         
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order_unconfirm_summary' , 'odoo_plant_id', '""public"".pur_org_data' , 'plant_code', v_rc.id, v_rc.plant_id)
					into v_miss;		
          if v_miss=1 THEN
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;         			
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order_unconfirm_summary' , 'order_id', '""public"".iac_purchase_order' , 'document_erp_id', v_rc.id, v_rc.document_no)
          into v_miss;		
          if v_miss=1 THEN
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;         			
					--select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order_unconfirm_summary' , 'vendor_reg_id', '""public"".iac_vendor_register' , 'vendor_code', v_rc.id, v_rc.vendor_code)
          update ""ep_temp_master"".iac_purchase_order_unconfirm_summary t set order_line_id=(
          select p.id from ""public"".iac_purchase_order_line p where p.document_erp_id=v_rc.document_no and p.document_line_erp_id=v_rc.document_line_no
          )
          where t.id=v_rc.id  returning order_line_id into v_order_line_id;
          if v_order_line_id is null THEN
             update ""ep_temp_master"".iac_purchase_order_unconfirm_summary set miss_flag=1 where id=v_rc.id;
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;         				
				
          --所有关联字段都更新成功,设置标志位为0   
          update ""ep_temp_master"".iac_purchase_order_unconfirm_summary set miss_flag=0,ex_flag=0 where id=v_rc.id;      
				 

          v_update_count:=v_update_count+1;                                                                                                        
          v_last_id=v_rc.id;                                                                                          
			EXCEPTION                                                                                                                                            
			when OTHERS THEN                                                                                                                                     
           GET STACKED DIAGNOSTICS                                                                                               
                                   v_message_text = MESSAGE_TEXT,                                                                                               
																	 v_exception_detail=PG_EXCEPTION_DETAIL;
          v_table_name:='iac_purchase_order_unconfirm_summary';                                                                                                                                                                                                
					v_exception_detail:='A error occurs when update table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                             
					v_src_id=v_rc.id;                                                                                                                            
					perform ep_temp_master.sp_func_write_ex_log(v_sap_log_id,v_log_id,v_log_line_id,v_group_id,v_group_line_id,v_group_name,v_group_line_name,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);  
          v_fail_count:=v_fail_count+1;        

          update ""ep_temp_master"".iac_purchase_order_unconfirm_summary set ex_flag=1 where id=v_rc.id;                                                                                               
      end;                                                                                                                                                      
end loop;        
return query select v_last_id,v_group_id,v_group_line_id,v_group_name,v_group_line_name,v_update_count,v_fail_count,v_miss_count;

--更新po unconfirm detail 关联字段
v_update_count:=0;
v_fail_count:=0;
v_miss_count:=0;
v_last_id:=0;
v_group_line_name:='iac_purchase_order_unconfirm_detail';
select id into v_group_line_id from ""public"".iac_interface_temp_table_group_line t where t.group_id=v_group_id and t.group_line_name='iac_purchase_order_unconfirm_detail';                                                                                                                   
select o_last_id,o_log_id,o_log_line_id into v_break_id,v_log_id,v_log_line_id from ep_temp_master.sp_func_get_log_info(v_sap_log_id,v_group_line_id);  
for v_rc in select * from ep_temp_master.iac_purchase_order_unconfirm_detail where sap_log_id=v_sap_log_id and id>=v_break_id order by id LIMIT v_limit offset v_offset                                                                                                                                 
loop                                                                                                                                                            
			begin
		      v_miss:=0;
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order_unconfirm_detail' , 'buyer_id', '""public"".buyer_code' , 'buyer_erp_id', v_rc.id, v_rc.buyer_erp_id) 
          into v_miss;
          if v_miss=1 THEN         
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;         
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order_unconfirm_detail' , 'currency_id', '""public"".res_currency' , 'name', v_rc.id, v_rc.currency)
          into v_miss;		
          if v_miss=1 THEN
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;         								
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order_unconfirm_detail' , 'division_id', '""public"".division_code' , 'division', v_rc.id, v_rc.division_code)
          into v_miss;
          if v_miss=1 THEN
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;         
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order_unconfirm_detail' , 'odoo_plant_id', '""public"".pur_org_data' , 'plant_code', v_rc.id, v_rc.plant_id)
					into v_miss;		
          if v_miss=1 THEN
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;         			
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order_unconfirm_detail' , 'order_id', '""public"".iac_purchase_order' , 'document_erp_id', v_rc.id, v_rc.document_no)
          into v_miss;		
          if v_miss=1 THEN
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;         			
					--select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order_unconfirm_summary' , 'vendor_reg_id', '""public"".iac_vendor_register' , 'vendor_code', v_rc.id, v_rc.vendor_code)
          update ""ep_temp_master"".iac_purchase_order_unconfirm_detail t set order_line_id=(
          select p.id from ""public"".iac_purchase_order_line p where p.document_erp_id=v_rc.document_no and p.document_line_erp_id=v_rc.document_line_no
          )
          where t.id=v_rc.id  returning order_line_id into v_order_line_id;
          if v_order_line_id is null THEN
             update ""ep_temp_master"".iac_purchase_order_unconfirm_detail set miss_flag=1 where id=v_rc.id;
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;         				

				  --更新表头关联字段
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order_unconfirm_detail' , 'part_id', '""public"".material_master' , 'part_unique_code', v_rc.id, v_rc.part_no||v_rc.plant_id)
          into v_miss;			
          if v_miss=1 THEN
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;		 
		  
          --所有关联字段都更新成功,设置标志位为0   
          update ""ep_temp_master"".iac_purchase_order_unconfirm_detail set miss_flag=0,ex_flag=0 where id=v_rc.id;      
				 

          v_update_count:=v_update_count+1;                                                                                                        
          v_last_id=v_rc.id;
                                                                                                      
			EXCEPTION                                                                                                                                            
			when OTHERS THEN                                                                                                                                     
           GET STACKED DIAGNOSTICS                                                                                               
                                   v_message_text = MESSAGE_TEXT,                                                                                               
																	 v_exception_detail=PG_EXCEPTION_DETAIL;
          v_table_name:='iac_purchase_order_unconfirm_detail';                                                                                                                                                                                                
					v_exception_detail:='A error occurs when update table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                             
					v_src_id=v_rc.id;                                                                                                                            
					perform ep_temp_master.sp_func_write_ex_log(v_sap_log_id,v_log_id,v_log_line_id,v_group_id,v_group_line_id,v_group_name,v_group_line_name,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);  
          v_fail_count:=v_fail_count+1;     

          update ""ep_temp_master"".iac_purchase_order_unconfirm_detail set ex_flag=1 where id=v_rc.id;                                                                                                   
      end;                                                                                                                                                      
end loop;   
return query select v_last_id,v_group_id,v_group_line_id,v_group_name,v_group_line_name,v_update_count,v_fail_count,v_miss_count;

return ;                                                                                                                                                                                                                                                                                                  
  --return ;                                                                                                                                                     
                                                                                                                                                                
end;                                                                                                                                                            
$function$
"
"sp_po_unconfirm_group_update_ref_miss","CREATE OR REPLACE FUNCTION ep_temp_master.sp_po_unconfirm_group_update_ref_miss(v_sap_log_id character varying, v_limit integer, v_offset integer)
 RETURNS SETOF record
 LANGUAGE plpgsql
AS $function$                                                                                                                         
                                                                                                                                                                
declare                                                                                                                                                         
v_rc	record;                                                                                                                                                  
v_pre_period_id integer;                                                                                                                                        
v_start_datetime varchar;                                                                                                                                       
v_end_datetime varchar;                                                                                                                                         
v_count_1	integer;                                                                                                                                             


                                                                                                                                                                
--异常捕获信息                                                                                                                                                  
v_table_name varchar;                                                                                                                                           
v_column_name varchar;                                                                                                                                          
v_message_text text;                                                                                                                                            
v_exception_detail text;                                                                                                                                        
v_src_id int4;                                                                                                                                                  
                                                                                                                                                                
--记录处理日志相关                                                                                                                                              
v_proc_line_count int4;                                                                                                                                         
v_proc_line_fail_count int4;                                                                                                                                    
v_start_time TIMESTAMP;                                                                                                                                         
v_end_time TIMESTAMP;
                                                                                                                                           
v_buyer_erp_id varchar;
v_vendor_code  varchar;
v_buyer_id integer;
v_vendor_id integer;
v_miss      integer;

v_update_count integer;
v_fail_count integer; 
v_miss_count integer;
v_order_line_id integer;

v_last_id    integer;
v_break_id integer;
v_group_name  varchar;
v_group_line_name varchar;
v_group_id   integer;
v_group_line_id integer;
v_log_id     integer;
v_log_line_id integer;
begin                                                                                                                                                           
v_proc_line_count:=0;                                                                                                                                           
v_proc_line_fail_count:=0;                                                                                                                                      
v_start_time:=now();                                                                                                                                            
                                                                                                                                                           
                                                                                                                                                                                   
--遍历 iac_purchase_order 表,更新下关联字段

--获取配置的group_id 和group_line_id;
v_update_count:=0;
v_fail_count:=0;
v_miss_count:=0;
v_last_id:=0;
v_group_name:='TRANS_PO_UNCONFIRM';
v_group_line_name:='iac_purchase_order_unconfirm_summary';
select id into v_group_id from public.iac_interface_temp_table_group t where t.name='TRANS_PO_UNCONFIRM';
select id into v_group_line_id from ""public"".iac_interface_temp_table_group_line t where t.group_id=v_group_id and t.group_line_name='iac_purchase_order_unconfirm_summary';                                                                                                                   
select o_last_id,o_log_id,o_log_line_id into v_break_id,v_log_id,v_log_line_id from ep_temp_master.sp_func_get_log_info(v_sap_log_id,v_group_line_id);  
for v_rc in select * from ep_temp_master.iac_purchase_order_unconfirm_summary where sap_log_id=v_sap_log_id and id>=v_break_id and (miss_flag=1 or ex_flag=1)order by id LIMIT v_limit offset v_offset                                                                                                                                 
loop                                                                                                                                                            
			begin
				  --更新表头关联字段

		      v_miss:=0;
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order_unconfirm_summary' , 'buyer_id', '""public"".buyer_code' , 'buyer_erp_id', v_rc.id, v_rc.buyer_erp_id) 
          into v_miss;
          if v_miss=1 THEN         
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;         
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order_unconfirm_summary' , 'currency_id', '""public"".res_currency' , 'name', v_rc.id, v_rc.currency)
          into v_miss;		
          if v_miss=1 THEN
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;         								
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order_unconfirm_summary' , 'division_id', '""public"".division_code' , 'division', v_rc.id, v_rc.division_code)
          into v_miss;
          if v_miss=1 THEN
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;         
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order_unconfirm_summary' , 'odoo_plant_id', '""public"".pur_org_data' , 'plant_code', v_rc.id, v_rc.plant_id)
					into v_miss;		
          if v_miss=1 THEN
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;         			
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order_unconfirm_summary' , 'order_id', '""public"".iac_purchase_order' , 'document_erp_id', v_rc.id, v_rc.document_no)
          into v_miss;		
          if v_miss=1 THEN
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;         			
					--select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order_unconfirm_summary' , 'vendor_reg_id', '""public"".iac_vendor_register' , 'vendor_code', v_rc.id, v_rc.vendor_code)
          update ""ep_temp_master"".iac_purchase_order_unconfirm_summary t set order_line_id=(
          select p.id from ""public"".iac_purchase_order_line p where p.document_erp_id=v_rc.document_no and p.document_line_erp_id=v_rc.document_line_no
          )
          where t.id=v_rc.id  returning order_line_id into v_order_line_id;
          if v_order_line_id is null THEN
             update ""ep_temp_master"".iac_purchase_order_unconfirm_summary set miss_flag=1 where id=v_rc.id;
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;         				
				
          --所有关联字段都更新成功,设置标志位为0   
          update ""ep_temp_master"".iac_purchase_order_unconfirm_summary set miss_flag=0,ex_flag=0 where id=v_rc.id;      
				 

          v_update_count:=v_update_count+1;                                                                                                        
          v_last_id=v_rc.id;                                                                                          
			EXCEPTION                                                                                                                                            
			when OTHERS THEN                                                                                                                                     
           GET STACKED DIAGNOSTICS                                                                                               
                                   v_message_text = MESSAGE_TEXT,                                                                                               
																	 v_exception_detail=PG_EXCEPTION_DETAIL;
          v_table_name:='iac_purchase_order_unconfirm_summary';                                                                                                                                                                                                
					v_exception_detail:='A error occurs when update table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                             
					v_src_id=v_rc.id;                                                                                                                            
					perform ep_temp_master.sp_func_write_ex_log(v_sap_log_id,v_log_id,v_log_line_id,v_group_id,v_group_line_id,v_group_name,v_group_line_name,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);  
          v_fail_count:=v_fail_count+1;        

          update ""ep_temp_master"".iac_purchase_order_unconfirm_summary set ex_flag=1 where id=v_rc.id;                                                                                               
      end;                                                                                                                                                      
end loop;        
return query select v_last_id,v_group_id,v_group_line_id,v_group_name,v_group_line_name,v_update_count,v_fail_count,v_miss_count;

--更新po unconfirm detail 关联字段
v_update_count:=0;
v_fail_count:=0;
v_miss_count:=0;
v_last_id:=0;
v_group_line_name:='iac_purchase_order_unconfirm_detail';
select id into v_group_line_id from ""public"".iac_interface_temp_table_group_line t where t.group_id=v_group_id and t.group_line_name='iac_purchase_order_unconfirm_detail';                                                                                                                   
select o_last_id,o_log_id,o_log_line_id into v_break_id,v_log_id,v_log_line_id from ep_temp_master.sp_func_get_log_info(v_sap_log_id,v_group_line_id);  
for v_rc in select * from ep_temp_master.iac_purchase_order_unconfirm_detail where sap_log_id=v_sap_log_id and id>=v_break_id  and (miss_flag=1 or ex_flag=1) order by id LIMIT v_limit offset v_offset                                                                                                                                 
loop                                                                                                                                                            
			begin
		      v_miss:=0;
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order_unconfirm_detail' , 'buyer_id', '""public"".buyer_code' , 'buyer_erp_id', v_rc.id, v_rc.buyer_erp_id) 
          into v_miss;
          if v_miss=1 THEN         
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;         
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order_unconfirm_detail' , 'currency_id', '""public"".res_currency' , 'name', v_rc.id, v_rc.currency)
          into v_miss;		
          if v_miss=1 THEN
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;         								
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order_unconfirm_detail' , 'division_id', '""public"".division_code' , 'division', v_rc.id, v_rc.division_code)
          into v_miss;
          if v_miss=1 THEN
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;         
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order_unconfirm_detail' , 'odoo_plant_id', '""public"".pur_org_data' , 'plant_code', v_rc.id, v_rc.plant_id)
					into v_miss;		
          if v_miss=1 THEN
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;         			
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order_unconfirm_detail' , 'order_id', '""public"".iac_purchase_order' , 'document_erp_id', v_rc.id, v_rc.document_no)
          into v_miss;		
          if v_miss=1 THEN
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;         			
					--select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order_unconfirm_summary' , 'vendor_reg_id', '""public"".iac_vendor_register' , 'vendor_code', v_rc.id, v_rc.vendor_code)
          update ""ep_temp_master"".iac_purchase_order_unconfirm_detail t set order_line_id=(
          select p.id from ""public"".iac_purchase_order_line p where p.document_erp_id=v_rc.document_no and p.document_line_erp_id=v_rc.document_line_no
          )
          where t.id=v_rc.id  returning order_line_id into v_order_line_id;
          if v_order_line_id is null THEN
             update ""ep_temp_master"".iac_purchase_order_unconfirm_detail set miss_flag=1 where id=v_rc.id;
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;         				

				  --更新表头关联字段
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_purchase_order_unconfirm_detail' , 'part_id', '""public"".material_master' , 'part_unique_code', v_rc.id, v_rc.part_no||v_rc.plant_id)
          into v_miss;			
          if v_miss=1 THEN
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;	
		  
          --所有关联字段都更新成功,设置标志位为0   
          update ""ep_temp_master"".iac_purchase_order_unconfirm_detail set miss_flag=0,ex_flag=0 where id=v_rc.id;      
				 

          v_update_count:=v_update_count+1;                                                                                                        
          v_last_id=v_rc.id;
                                                                                                      
			EXCEPTION                                                                                                                                            
			when OTHERS THEN                                                                                                                                     
           GET STACKED DIAGNOSTICS                                                                                               
                                   v_message_text = MESSAGE_TEXT,                                                                                               
																	 v_exception_detail=PG_EXCEPTION_DETAIL;
          v_table_name:='iac_purchase_order_unconfirm_detail';                                                                                                                                                                                                
					v_exception_detail:='A error occurs when update table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                             
					v_src_id=v_rc.id;                                                                                                                            
					perform ep_temp_master.sp_func_write_ex_log(v_sap_log_id,v_log_id,v_log_line_id,v_group_id,v_group_line_id,v_group_name,v_group_line_name,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);  
          v_fail_count:=v_fail_count+1;     

          update ""ep_temp_master"".iac_purchase_order_unconfirm_detail set ex_flag=1 where id=v_rc.id;                                                                                                   
      end;                                                                                                                                                      
end loop;   
return query select v_last_id,v_group_id,v_group_line_id,v_group_name,v_group_line_name,v_update_count,v_fail_count,v_miss_count;

return ;                                                                                                                                                                                                                                                                                                  
  --return ;                                                                                                                                                     
                                                                                                                                                                
end;                                                                                                                                                            
$function$
"
"sp_rfq_group_trans_prod","CREATE OR REPLACE FUNCTION ep_temp_master.sp_rfq_group_trans_prod(v_sap_log_id character varying, v_limit integer, v_offset integer)
 RETURNS SETOF record
 LANGUAGE plpgsql
AS $function$                                                                                                                         
                                                                                                                                                                
declare                                                                                                                                                         
v_rc	record;                                                                                                                                                  
v_pre_period_id integer;                                                                                                                                        
v_start_datetime varchar;                                                                                                                                       
v_end_datetime varchar;                                                                                                                                         
v_count_1	integer;                                                                                                                                             


                                                                                                                                                                
--异常捕获信息                                                                                                                                                  
v_table_name varchar;                                                                                                                                           
v_column_name varchar;                                                                                                                                          
v_message_text text;                                                                                                                                            
v_exception_detail text;                                                                                                                                        
v_src_id int4;                                                                                                                                                  
                                                                                                                                                                
--记录处理日志相关                                                                                                                                              
v_proc_line_count int4;                                                                                                                                         
v_proc_line_fail_count int4;                                                                                                                                    
v_start_time TIMESTAMP;                                                                                                                                         
v_end_time TIMESTAMP;
                                                                                                                                           
v_buyer_erp_id varchar;
v_vendor_code  varchar;
v_buyer_id integer;
v_vendor_id integer;
v_miss      integer;

v_update_count integer;
v_fail_count integer; 
v_miss_count integer;
v_order_line_id integer;

v_last_id    integer;
v_count      integer;
v_reason_id  integer;
v_break_id integer;
v_group_name  varchar;
v_group_line_name varchar;
v_group_id   integer;
v_group_line_id integer;
v_log_id     integer;
v_log_line_id integer;
begin                                                                                                                                                           
v_proc_line_count:=0;                                                                                                                                           
v_proc_line_fail_count:=0;                                                                                                                                      
v_start_time:=now();                                                                                                                                            
                                                                                                                                                           
                                                                                                                                                                                   
--遍历 iac_purchase_order 表,更新下关联字段

--获取配置的group_id 和group_line_id;
v_update_count:=0;
v_fail_count:=0;
v_miss_count:=0;
v_last_id:=0;
v_group_name:='TRANS_RFQ';
v_group_line_name:='iac_rfq';
select id into v_group_id from public.iac_interface_temp_table_group t where t.name='TRANS_RFQ';
select id into v_group_line_id from ""public"".iac_interface_temp_table_group_line t where t.group_id=v_group_id and t.group_line_name='iac_rfq';                                                                                                                   
select o_last_id,o_log_id,o_log_line_id into v_break_id,v_log_id,v_log_line_id from ep_temp_master.sp_func_get_log_info(v_sap_log_id,v_group_line_id);  
for v_rc in select * from ep_temp_master.iac_rfq where sap_log_id=v_sap_log_id and id>=v_break_id and (miss_flag=0 and ex_flag=0 and trans_prod_flag=0)order by id LIMIT v_limit offset v_offset                                                                                                                                 
loop                                                                                                                                                            
			begin
				select t.id into v_reason_id from ""public"".iac_rfq_reason t where t.""name""=v_rc.reason_code_text;
				if v_reason_id is null THEN
				   insert into ""public"".iac_rfq_reason(name) values(v_rc.reason_code_text) returning id into v_reason_id;
				end if;	

				select count(*) into v_count from ""public"".iac_rfq t where t.sap_key=v_rc.sap_key;
				if v_count>=1 THEN
				   continue;
				end if;				
				INSERT INTO ""public"".iac_rfq (
					buyer_code_sap,
					country_code,
					currency_name,
					cw,
					division_code,
					incoterm,
					incoterm2,
					input_price,
					last_rfq_no,
					line_text,
					lt,
					manufacturer_part_no,
					moq,
					mpq,
					NAME,
					note,
					order_reason,
					part_code,
					payment_term,
					price_control,
					price_unit,
					release_flag,
					rw,
					STATE,
					tax,
					TEXT,
					TYPE,
					unit_price,
					uom,
					valid_from,
					valid_to,
					vendor_part_no,
					plant_code,
					vendor_code,
					purchase_org,
					reason_code_text,
					supplier_company_no,
					sap_key,
					create_date,
					write_date,
					sap_log_id,
					buyer_code,
					currency_id,
					division_id,
					part_id,
					vendor_id,
					plant_id,
					source_code,
					reason_code
				) SELECT
					buyer_code_sap,
					country_code,
					currency_name,
					cw,
					division_code,
					incoterm,
					incoterm2,
					input_price,
					last_rfq_no,
					line_text,
					lt,
					manufacturer_part_no,
					moq,
					mpq,
					NAME,
					note,
					order_reason,
					part_code,
					payment_term,
					price_control,
					price_unit,
					release_flag,
					rw,
					STATE,
					tax,
					TEXT,
					TYPE,
					unit_price,
					uom,
					valid_from,
					valid_to,
					vendor_part_no,
					plant_code,
					vendor_code,
					purchase_org,
					reason_code_text,
					supplier_company_no,
					sap_key,
					create_date,
					write_date,
					sap_log_id,
					buyer_code,
					currency_id,
					division_id,
					part_id,
					vendor_id,
					plant_id,
					source_code,
					v_reason_id
				FROM
					ep_temp_master.iac_rfq
				WHERE
					ID = v_rc. ID;
          --插入新记录行
                                         
          --所有关联字段都更新成功,设置标志位为0   
          update ""ep_temp_master"".iac_rfq set miss_flag=0,ex_flag=0,trans_prod_flag=1 where id=v_rc.id;      
				 

          v_update_count:=v_update_count+1;                                                                                                        
          v_last_id=v_rc.id;                                                                                          
			EXCEPTION                                                                                                                                            
			when OTHERS THEN                                                                                                                                     
           GET STACKED DIAGNOSTICS                                                                                               
                                   v_message_text = MESSAGE_TEXT,                                                                                               
																	 v_exception_detail=PG_EXCEPTION_DETAIL;
          v_table_name:='iac_rfq';                                                                                                                                                                                                
					v_exception_detail:='A error occurs when update table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                             
					v_src_id=v_rc.id;                                                                                                                            
					perform ep_temp_master.sp_func_write_ex_log(v_sap_log_id,v_log_id,v_log_line_id,v_group_id,v_group_line_id,v_group_name,v_group_line_name,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);  
          v_fail_count:=v_fail_count+1;        

          update ""ep_temp_master"".iac_rfq set ex_flag=1 where id=v_rc.id;                                                                                               
      end;                                                                                                                                                      
end loop;        
return query select v_last_id,v_group_id,v_group_line_id,v_group_name,v_group_line_name,v_update_count,v_fail_count,v_miss_count;


return ;                                                                                                                                                                                                                                                                                                  
  --return ;                                                                                                                                                     
                                                                                                                                                                
end;                                                                                                                                                            
$function$
"
"sp_rfq_group_update_ref","CREATE OR REPLACE FUNCTION ep_temp_master.sp_rfq_group_update_ref(v_sap_log_id character varying, v_limit integer, v_offset integer)
 RETURNS SETOF record
 LANGUAGE plpgsql
AS $function$                                                                                                                         
                                                                                                                                                                
declare                                                                                                                                                         
v_rc	record;                                                                                                                                                  
v_pre_period_id integer;                                                                                                                                        
v_start_datetime varchar;                                                                                                                                       
v_end_datetime varchar;                                                                                                                                         
v_count_1	integer;                                                                                                                                             


                                                                                                                                                                
--异常捕获信息                                                                                                                                                  
v_table_name varchar;                                                                                                                                           
v_column_name varchar;                                                                                                                                          
v_message_text text;                                                                                                                                            
v_exception_detail text;                                                                                                                                        
v_src_id int4;                                                                                                                                                  
                                                                                                                                                                
--记录处理日志相关                                                                                                                                              
v_proc_line_count int4;                                                                                                                                         
v_proc_line_fail_count int4;                                                                                                                                    
v_start_time TIMESTAMP;                                                                                                                                         
v_end_time TIMESTAMP;
                                                                                                                                           
v_buyer_erp_id varchar;
v_vendor_code  varchar;
v_buyer_id integer;
v_vendor_id integer;
v_miss      integer;

v_update_count integer;
v_fail_count integer; 
v_miss_count integer;
v_order_line_id integer;

v_last_id    integer;
v_break_id integer;
v_group_name  varchar;
v_group_line_name varchar;
v_group_id   integer;
v_group_line_id integer;
v_log_id     integer;
v_log_line_id integer;

v_part_id     integer;
v_mpq         integer;
begin                                                                                                                                                           
v_proc_line_count:=0;                                                                                                                                           
v_proc_line_fail_count:=0;                                                                                                                                      
v_start_time:=now();                                                                                                                                            
                                                                                                                                                           
                                                                                                                                                                                   
--遍历 iac_purchase_order 表,更新下关联字段

--获取配置的group_id 和group_line_id;
v_update_count:=0;
v_fail_count:=0;
v_miss_count:=0;
v_last_id:=0;
v_group_name:='TRANS_RFQ';
v_group_line_name:='iac_rfq';
select id into v_group_id from public.iac_interface_temp_table_group t where t.name='TRANS_RFQ';
select id into v_group_line_id from ""public"".iac_interface_temp_table_group_line t where t.group_id=v_group_id and t.group_line_name='iac_rfq';                                                                                                                   
select o_last_id,o_log_id,o_log_line_id into v_break_id,v_log_id,v_log_line_id from ep_temp_master.sp_func_get_log_info(v_sap_log_id,v_group_line_id);  
for v_rc in select * from ep_temp_master.iac_rfq where sap_log_id=v_sap_log_id and id>=v_break_id order by id LIMIT v_limit offset v_offset                                                                                                                                 
loop                                                                                                                                                            
			begin
				  --更新表头关联字段

		      v_miss:=0;
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_rfq' , 'buyer_code', '""public"".buyer_code' , 'buyer_erp_id', v_rc.id, v_rc.buyer_code_sap) 
          into v_miss;
          if v_miss=1 THEN         
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;     
    
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_rfq' , 'vendor_id', '""public"".iac_vendor' , 'vendor_code', v_rc.id, v_rc.vendor_code)
          into v_miss;		
          if v_miss=1 THEN
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;         								

					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_rfq' , 'currency_id', '""public"".res_currency' , 'name', v_rc.id, v_rc.currency_name)
          into v_miss;		
          if v_miss=1 THEN
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;    

					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_rfq' , 'division_id', '""public"".division_code' , 'division', v_rc.id, v_rc.division_code)
          into v_miss;		
          if v_miss=1 THEN
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;   				

					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_rfq' , 'part_id', '""public"".material_master' , 'part_no', v_rc.id, v_rc.part_code)
          into v_miss;		
          if v_miss=1 THEN
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;   		

					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_rfq' , 'plant_id', '""public"".pur_org_data' , 'plant_code', v_rc.id, v_rc.plant_code)
          into v_miss;		
          if v_miss=1 THEN
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;   				  
          update ""ep_temp_master"".iac_rfq t set source_code=(select sourcer from ""public"".material_master p where p.id=t.part_id)
          where t.id=v_rc.id;      

          --获取mpg
          select vendor_id,part_id into v_vendor_id,v_part_id from ""ep_temp_master"".iac_rfq t where t.id=v_rc.id;
				  select t.mpq into v_mpq from ""public"".inforecord_history t where t.vendor_id=v_vendor_id and t.part_id=v_part_id  order by valid_from desc limit 1;
          if v_mpq is not null THEN 
             update ""ep_temp_master"".iac_rfq set mpq=v_mpq where id=v_rc.id;       
          end if;		  
				
          --所有关联字段都更新成功,设置标志位为0   
          update ""ep_temp_master"".iac_rfq set miss_flag=0,ex_flag=0 where id=v_rc.id;      
				 

          v_update_count:=v_update_count+1;                                                                                                        
          v_last_id=v_rc.id;                                                                                          
			EXCEPTION                                                                                                                                            
			when OTHERS THEN                                                                                                                                     
           GET STACKED DIAGNOSTICS                                                                                               
                                   v_message_text = MESSAGE_TEXT,                                                                                               
																	 v_exception_detail=PG_EXCEPTION_DETAIL;
          v_table_name:='iac_rfq';                                                                                                                                                                                                
					v_exception_detail:='A error occurs when update table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                             
					v_src_id=v_rc.id;                                                                                                                            
					perform ep_temp_master.sp_func_write_ex_log(v_sap_log_id,v_log_id,v_log_line_id,v_group_id,v_group_line_id,v_group_name,v_group_line_name,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);  
          v_fail_count:=v_fail_count+1;        

          update ""ep_temp_master"".iac_rfq set ex_flag=1 where id=v_rc.id;                                                                                               
      end;                                                                                                                                                      
end loop;        
return query select v_last_id,v_group_id,v_group_line_id,v_group_name,v_group_line_name,v_update_count,v_fail_count,v_miss_count;

return ;                                                                                                                                                                                                                                                                                                  
  --return ;                                                                                                                                                     
                                                                                                                                                                
end;                                                                                                                                                            
$function$
"
"sp_rfq_group_update_ref_miss","CREATE OR REPLACE FUNCTION ep_temp_master.sp_rfq_group_update_ref_miss(v_sap_log_id character varying, v_limit integer, v_offset integer)
 RETURNS SETOF record
 LANGUAGE plpgsql
AS $function$                                                                                                                         
                                                                                                                                                                
declare                                                                                                                                                         
v_rc	record;                                                                                                                                                  
v_pre_period_id integer;                                                                                                                                        
v_start_datetime varchar;                                                                                                                                       
v_end_datetime varchar;                                                                                                                                         
v_count_1	integer;                                                                                                                                             


                                                                                                                                                                
--异常捕获信息                                                                                                                                                  
v_table_name varchar;                                                                                                                                           
v_column_name varchar;                                                                                                                                          
v_message_text text;                                                                                                                                            
v_exception_detail text;                                                                                                                                        
v_src_id int4;                                                                                                                                                  
                                                                                                                                                                
--记录处理日志相关                                                                                                                                              
v_proc_line_count int4;                                                                                                                                         
v_proc_line_fail_count int4;                                                                                                                                    
v_start_time TIMESTAMP;                                                                                                                                         
v_end_time TIMESTAMP;
                                                                                                                                           
v_buyer_erp_id varchar;
v_vendor_code  varchar;
v_buyer_id integer;
v_vendor_id integer;
v_miss      integer;

v_update_count integer;
v_fail_count integer; 
v_miss_count integer;
v_order_line_id integer;

v_last_id    integer;
v_break_id integer;
v_group_name  varchar;
v_group_line_name varchar;
v_group_id   integer;
v_group_line_id integer;
v_log_id     integer;
v_log_line_id integer;

v_part_id     integer;
v_mpq         integer;
begin                                                                                                                                                           
v_proc_line_count:=0;                                                                                                                                           
v_proc_line_fail_count:=0;                                                                                                                                      
v_start_time:=now();                                                                                                                                            
                                                                                                                                                           
                                                                                                                                                                                   
--遍历 iac_purchase_order 表,更新下关联字段

--获取配置的group_id 和group_line_id;
v_update_count:=0;
v_fail_count:=0;
v_miss_count:=0;
v_last_id:=0;
v_group_name:='TRANS_RFQ';
v_group_line_name:='iac_rfq';
select id into v_group_id from public.iac_interface_temp_table_group t where t.name='TRANS_RFQ';
select id into v_group_line_id from ""public"".iac_interface_temp_table_group_line t where t.group_id=v_group_id and t.group_line_name='iac_rfq';                                                                                                                   
select o_last_id,o_log_id,o_log_line_id into v_break_id,v_log_id,v_log_line_id from ep_temp_master.sp_func_get_log_info(v_sap_log_id,v_group_line_id);  
for v_rc in select * from ep_temp_master.iac_rfq where sap_log_id=v_sap_log_id and id>=v_break_id and (miss_flag=1 or ex_flag=1)order by id LIMIT v_limit offset v_offset                                                                                                                                 
loop                                                                                                                                                            
			begin
				  --更新表头关联字段

		      v_miss:=0;
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_rfq' , 'buyer_code', '""public"".buyer_code' , 'buyer_erp_id', v_rc.id, v_rc.buyer_code_sap) 
          into v_miss;
          if v_miss=1 THEN         
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;     
    
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_rfq' , 'vendor_id', '""public"".iac_vendor' , 'vendor_code', v_rc.id, v_rc.vendor_code)
          into v_miss;		
          if v_miss=1 THEN
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;         								

					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_rfq' , 'currency_id', '""public"".res_currency' , 'name', v_rc.id, v_rc.currency_name)
          into v_miss;		
          if v_miss=1 THEN
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;    

					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_rfq' , 'division_id', '""public"".division_code' , 'division', v_rc.id, v_rc.division_code)
          into v_miss;		
          if v_miss=1 THEN
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;   				

					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_rfq' , 'part_id', '""public"".material_master' , 'part_no', v_rc.id, v_rc.part_code)
          into v_miss;		
          if v_miss=1 THEN
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;   
					select ep_temp_master.sp_update_table_ref('""ep_temp_master"".iac_rfq' , 'plant_id', '""public"".pur_org_data' , 'plant_code', v_rc.id, v_rc.plant_code)
          into v_miss;		
          if v_miss=1 THEN
						 v_miss_count:=v_miss_count+1;
             continue;
          end if;   			  
          update ""ep_temp_master"".iac_rfq t set source_code=(select sourcer from ""public"".material_master p where p.id=t.part_id)
          where t.id=v_rc.id;      


          --获取mpg
          select vendor_id,part_id into v_vendor_id,v_part_id from ""ep_temp_master"".iac_rfq t where t.id=v_rc.id;
				  select t.mpq into v_mpq from ""public"".inforecord_history t where t.vendor_id=v_vendor_id and t.part_id=v_part_id  order by valid_from desc limit 1;
          if v_mpq is not null THEN 
             update ""ep_temp_master"".iac_rfq set mpq=v_mpq where id=v_rc.id;       
          end if;
		  
          --所有关联字段都更新成功,设置标志位为0   
          update ""ep_temp_master"".iac_rfq set miss_flag=0,ex_flag=0 where id=v_rc.id;      
				 

          v_update_count:=v_update_count+1;                                                                                                        
          v_last_id=v_rc.id;                                                                                          
			EXCEPTION                                                                                                                                            
			when OTHERS THEN                                                                                                                                     
           GET STACKED DIAGNOSTICS                                                                                               
                                   v_message_text = MESSAGE_TEXT,                                                                                               
																	 v_exception_detail=PG_EXCEPTION_DETAIL;
          v_table_name:='iac_rfq';                                                                                                                                                                                                
					v_exception_detail:='A error occurs when update table ( '||v_table_name||' ),source id is ( '||v_rc.id||' )';                             
					v_src_id=v_rc.id;                                                                                                                            
					perform ep_temp_master.sp_func_write_ex_log(v_sap_log_id,v_log_id,v_log_line_id,v_group_id,v_group_line_id,v_group_name,v_group_line_name,v_table_name,v_column_name,v_message_text,v_exception_detail,v_src_id);  
          v_fail_count:=v_fail_count+1;        

          update ""ep_temp_master"".iac_rfq set ex_flag=1 where id=v_rc.id;                                                                                               
      end;                                                                                                                                                      
end loop;        
return query select v_last_id,v_group_id,v_group_line_id,v_group_name,v_group_line_name,v_update_count,v_fail_count,v_miss_count;


return ;                                                                                                                                                                                                                                                                                                  
  --return ;                                                                                                                                                     
                                                                                                                                                                
end;                                                                                                                                                            
$function$
"
"sp_update_table_ref","CREATE OR REPLACE FUNCTION ep_temp_master.sp_update_table_ref(v_src_table_name character varying, v_src_field_name character varying, v_ref_table_name character varying, v_ref_field_name character varying, v_src_id_value integer, v_src_code_value character varying)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$

declare
v_rc	record;
v_pre_period_id integer;
v_start_datetime varchar;
v_end_datetime varchar;
v_exe_sql varchar;
v_update_count integer;
v_ref_count    integer;
v_field_val    integer;
begin
/*
1	v_src_table_name	当前表
2	v_src_field_name	当前需要更新的字段
3 v_ref_table_name	参考表
4 v_ref_field_name	参考字段名称
5 v_src_id_value	当前表的主键id
6	v_src_code_value	当前表的中的字段编码值

--参考sql
UPDATE ""public"".vendor
SET vendor_id = (
	SELECT
		ID
	FROM
		""public"".iac_vendor P
	WHERE
		P .vendor_code = '10011'
)
WHERE
	ID = 1
AND EXISTS (
	SELECT
		1
	FROM
		""public"".iac_vendor P
	WHERE
		P .vendor_code = '10011'
);

--调用函数举例
select proc_update_table_ref('vendor' , 'vendor_id', 'iac_vendor', 'vendor_code', 1, '1000');
*/

if v_src_code_value is null THEN
   return 0;
end if;

--执行动态语句进行数据更新

execute 'UPDATE '||v_src_table_name ||
'
SET '||v_src_field_name||' = (
	SELECT
		ID
	FROM
		'||v_ref_table_name ||' P
	WHERE
		P .'||v_ref_field_name ||' = $2
)
WHERE
	ID = $1
 returning '||v_src_field_name

USING  v_src_id_value , v_src_code_value into v_field_val;

if v_field_val is null THEN
		execute 'UPDATE '||v_src_table_name ||
		'
		SET miss_flag=1 where id=$1' using v_src_id_value;
   return 1;
ELSE
   return 0;
end if;


end;
$function$
"
"sp_update_table_ref_int","CREATE OR REPLACE FUNCTION ep_temp_master.sp_update_table_ref_int(v_src_table_name character varying, v_src_field_name character varying, v_ref_table_name character varying, v_ref_field_name character varying, v_src_id_value integer, v_src_code_value integer, v_ref_return_field_name character varying)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$

declare
v_rc	record;
v_pre_period_id integer;
v_start_datetime varchar;
v_end_datetime varchar;
v_exe_sql varchar;
v_update_count integer;
v_ref_count    integer;
v_field_val integer;
v_sql_text  text;
begin
/*
从参考表中获取指定字段值返回,当参考表中参考字段与当前表中的编码字段值相同的时候
当前表需要更新的字段类型为 数值型
从参考表中需要返回的字段类型 为数值型
1	v_src_table_name	当前表
2	v_src_field_name	当前需要更新的字段
3 v_ref_table_name	参考表
4 v_ref_field_name	参考字段名称
5 v_src_id_value	当前表的主键id
6	v_src_code_value	当前表的中的字段编码值
7 v_ref_return_field_name 返回参考表中指定的字段名
--参考sql
UPDATE ""public"".goods_receipts gr
SET vendor_id = (
	SELECT
		gr.vendor_id
	FROM
		iac_asn asn
	WHERE
		gr.asn_no = '1000'
)
WHERE
	gr_id = 1
AND EXISTS (
	SELECT
		1
	FROM
		iac_asn asn
	WHERE
		gr.asn_no = '1000'
);

--调用函数举例
select proc_update_table_ref_2('vendor' , 'vendor_id', 'iac_vendor', 'vendor_code', 1, '1000','vendor_id');
select ep_temp_master.sp_update_table_ref_int('""ep_temp_master"".iac_purchase_order' , 'plant_id', '""public"".iac_vendor' , 'id', v_rc.id, v_rc.vendor_id,'plant')
*/

--执行动态语句进行数据更新
if v_src_code_value is null THEN
   return 0;
end if;
execute 'UPDATE '||v_src_table_name ||
'
SET '||v_src_field_name||' = (
	SELECT
		'||v_ref_return_field_name ||'
	FROM
		'||v_ref_table_name ||' P
	WHERE
		P .'||v_ref_field_name ||' = $2
)
WHERE
	ID = $1
 returning '||v_src_field_name

USING  v_src_id_value , v_src_code_value into v_field_val;

if v_field_val is null THEN
		execute 'UPDATE '||v_src_table_name ||
		'
		SET miss_flag=1 where id=$1' using v_src_id_value;
   return 1;
ELSE 
   return 0;
end if;

end;
$function$
"
"write_exception_log","CREATE OR REPLACE FUNCTION ep_temp_master.write_exception_log(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_table_name character varying, v_column_name character varying, v_message_text text, v_exception_detail text, v_src_id integer)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$

declare
v_group_name varchar;
v_group_line_name varchar;
v_count_1	integer;
v_exe_sql    varchar;
begin
	select name into v_group_name from ""public"".iac_interface_temp_table_group t where t.id=v_group_id;
  select group_line_name into v_group_line_name from  ""public"".iac_interface_temp_table_group_line t where t.id=v_group_line_id;

	INSERT INTO ""public"".iac_interface_temp_table_group_exe_log (
		group_id,
		group_line_id,
		start_time,
		TABLE_NAME,
		COLUMN_NAME,
		MESSAGE_TEXT,
		exception_detail,
		group_name,
		group_line_name,
    sap_log_id,
    src_id
	)
	VALUES
		(
			v_group_id,
			v_group_line_id,
			now(),
			v_table_name,
			v_column_name,
			v_message_text,
			v_exception_detail,
			v_group_name,
			v_group_line_name,
		  v_sap_log_id,
      v_src_id
		);

  execute 'INSERT INTO ep_temp_master.'||v_table_name||'_error SELECT
			*
		FROM
			ep_temp_master.'||v_table_name||'
		WHERE
			ID = $1
		AND NOT EXISTS (
			SELECT
				1
			FROM
				ep_temp_master.'||v_table_name||'_error
			WHERE
				ID = $2
		)' 
  using v_src_id,v_src_id;

  return 1;
end;
$function$
"
"write_exception_log","CREATE OR REPLACE FUNCTION ep_temp_master.write_exception_log(v_sap_log_id character varying, v_group_id integer, v_group_line_id integer, v_table_name character varying, v_column_name character varying, v_message_text text, v_exception_detail text, v_src_id integer)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$

declare
v_group_name varchar;
v_group_line_name varchar;
v_count_1	integer;
v_exe_sql    varchar;
begin
	select name into v_group_name from ""public"".iac_interface_temp_table_group t where t.id=v_group_id;
  select group_line_name into v_group_line_name from  ""public"".iac_interface_temp_table_group_line t where t.id=v_group_line_id;

	INSERT INTO ""public"".iac_interface_temp_table_group_exe_log (
		group_id,
		group_line_id,
		start_time,
		TABLE_NAME,
		COLUMN_NAME,
		MESSAGE_TEXT,
		exception_detail,
		group_name,
		group_line_name,
    sap_log_id,
    src_id
	)
	VALUES
		(
			v_group_id,
			v_group_line_id,
			now(),
			v_table_name,
			v_column_name,
			v_message_text,
			v_exception_detail,
			v_group_name,
			v_group_line_name,
		  v_sap_log_id,
      v_src_id
		);

  execute 'INSERT INTO ep_temp_master.'||v_table_name||'_error SELECT
			*
		FROM
			ep_temp_master.'||v_table_name||'
		WHERE
			ID = $1
		AND NOT EXISTS (
			SELECT
				1
			FROM
				ep_temp_master.'||v_table_name||'_error
			WHERE
				ID = $2
		)' 
  using v_src_id,v_src_id;

  return 1;
end;
$function$
"
"write_group_proc_log","CREATE OR REPLACE FUNCTION ep_temp_master.write_group_proc_log(v_group_name character varying, v_group_id integer, v_start_time character varying, v_end_time character varying)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$

declare
v_count_1	integer;
v_rc	record;
v_success_count int4;
v_fail_count    int4;
v_state varchar;
v_group_exe_id int4;
begin
	--遍历组中条目的执行情况,统计每个组条目失败的次数
	--遍历组中条目的执行情况,统计每个组条目失败的次数
SELECT fail_count,success_count into v_fail_count,v_success_count  FROM (
		SELECT
			SUM (
				fail_record_counts
			) fail_count,
			SUM (
				insert_record_counts + update_record_counts
			) success_count
		FROM
			""public"".iac_interface_temp_table_group_exe_line exe_line
		WHERE
			exe_line.sap_log_id IN (
				SELECT
					extractwmid AS sap_log_id
				FROM
					ep_temp_master.extractlog el
				WHERE
					el.extractstatus = 'ODOO_PROCESS'
				AND el.extractname IN (
					SELECT
						eg.extractname
					FROM
						ep_temp_master.extractgroup eg
					WHERE
						eg.extractgroup = v_group_name 
				)
			)
) group_info;

	if v_fail_count=0 THEN
     v_state:='success';
  ELSE
     v_state:='fail';
  end if;


	INSERT INTO ""public"".iac_interface_temp_table_group_exe(
		group_id,
		group_name,
		start_time,
    end_time,
		state,
		success_group_line_count,
		fail_group_line_count
	)
	VALUES
		(
			v_group_id,
			v_group_name,
      to_timestamp(v_start_time,'yyyy-MM-dd hh24:mi:ss'),
			to_timestamp(v_end_time,'yyyy-MM-dd hh24:mi:ss'),
      v_state,
			v_success_count,
			v_fail_count 
		)
 returning id into v_group_exe_id
;
  --获取group_exe_id
  --SELECT last_value into v_group_exe_id FROM ""public"".iac_interface_temp_table_group_exe_id_seq;

  --更新明细表的关联字段
	UPDATE ""public"".iac_interface_temp_table_group_exe_line exe_line
	SET group_exe_id = v_group_exe_id
	WHERE
		exe_line.sap_log_id IN (
			SELECT
				extractwmid AS sap_log_id
			FROM
				ep_temp_master.extractlog el
			WHERE
				el.extractstatus = 'ODOO_PROCESS'
			AND el.extractname IN (
				SELECT
					eg.extractname
				FROM
					ep_temp_master.extractgroup eg
				WHERE
					eg.extractgroup = v_group_name
			)
		);
  
  --更新sap接口日志表的状态
	UPDATE 	ep_temp_master.extractlog T SET extractstatus='STEP2DONE'
	WHERE
		T .extractname IN (
			SELECT
				extractname
			FROM
				ep_temp_master.extractgroup P
			WHERE
				P .extractgroup = v_group_name
		)
	AND T.extractstatus = 'ODOO_PROCESS'
;

  return v_group_exe_id;
end;
$function$
"
"write_group_proc_log","CREATE OR REPLACE FUNCTION ep_temp_master.write_group_proc_log(v_group_name character varying, v_group_id integer, v_start_time character varying, v_end_time character varying)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$

declare
v_count_1	integer;
v_rc	record;
v_success_count int4;
v_fail_count    int4;
v_state varchar;
v_group_exe_id int4;
begin
	--遍历组中条目的执行情况,统计每个组条目失败的次数
	--遍历组中条目的执行情况,统计每个组条目失败的次数
SELECT fail_count,success_count into v_fail_count,v_success_count  FROM (
		SELECT
			SUM (
				fail_record_counts
			) fail_count,
			SUM (
				insert_record_counts + update_record_counts
			) success_count
		FROM
			""public"".iac_interface_temp_table_group_exe_line exe_line
		WHERE
			exe_line.sap_log_id IN (
				SELECT
					extractwmid AS sap_log_id
				FROM
					ep_temp_master.extractlog el
				WHERE
					el.extractstatus = 'ODOO_PROCESS'
				AND el.extractname IN (
					SELECT
						eg.extractname
					FROM
						ep_temp_master.extractgroup eg
					WHERE
						eg.extractgroup = v_group_name 
				)
			)
) group_info;

	if v_fail_count=0 THEN
     v_state:='success';
  ELSE
     v_state:='fail';
  end if;


	INSERT INTO ""public"".iac_interface_temp_table_group_exe(
		group_id,
		group_name,
		start_time,
    end_time,
		state,
		success_group_line_count,
		fail_group_line_count
	)
	VALUES
		(
			v_group_id,
			v_group_name,
      to_timestamp(v_start_time,'yyyy-MM-dd hh24:mi:ss'),
			to_timestamp(v_end_time,'yyyy-MM-dd hh24:mi:ss'),
      v_state,
			v_success_count,
			v_fail_count 
		)
 returning id into v_group_exe_id
;
  --获取group_exe_id
  --SELECT last_value into v_group_exe_id FROM ""public"".iac_interface_temp_table_group_exe_id_seq;

  --更新明细表的关联字段
	UPDATE ""public"".iac_interface_temp_table_group_exe_line exe_line
	SET group_exe_id = v_group_exe_id
	WHERE
		exe_line.sap_log_id IN (
			SELECT
				extractwmid AS sap_log_id
			FROM
				ep_temp_master.extractlog el
			WHERE
				el.extractstatus = 'ODOO_PROCESS'
			AND el.extractname IN (
				SELECT
					eg.extractname
				FROM
					ep_temp_master.extractgroup eg
				WHERE
					eg.extractgroup = v_group_name
			)
		);
  
  --更新sap接口日志表的状态
	UPDATE 	ep_temp_master.extractlog T SET extractstatus='STEP2DONE'
	WHERE
		T .extractname IN (
			SELECT
				extractname
			FROM
				ep_temp_master.extractgroup P
			WHERE
				P .extractgroup = v_group_name
		)
	AND T.extractstatus = 'ODOO_PROCESS'
;

  return v_group_exe_id;
end;
$function$
"
